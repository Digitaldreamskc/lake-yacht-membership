{"id":"9b64a6e727f7da1946ab2b42908d1c5b","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC2981.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC2981.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface for the NFT Royalty Standard.\n *\n * A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n * support for royalty payments across all NFT marketplaces and ecosystem participants.\n */\ninterface IERC2981 is IERC165 {\n    /**\n     * @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n     * exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n     *\n     * NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the\n     * royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\n     */\n    function royaltyInfo(\n        uint256 tokenId,\n        uint256 salePrice\n    ) external view returns (address receiver, uint256 royaltyAmount);\n}\n"},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC4906.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title ERC-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"},"@openzeppelin/contracts/interfaces/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC721\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /// @inheritdoc IERC721\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /// @inheritdoc IERC721\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /// @inheritdoc IERC721\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /// @inheritdoc IERC721\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /// @inheritdoc IERC721\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /// @inheritdoc IERC721\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {IERC721Metadata} from \"./IERC721Metadata.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC-721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {IERC4906-MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity >=0.5.0;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/YachtClubMembership.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/interfaces/IERC2981.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n/**\n * @title Lake Stockton Yacht Club Membership NFT\n * @dev ERC-721 contract with ERC-2981 royalty support for yacht club memberships\n * Includes NFC card linking functionality for real-world identification\n */\ncontract YachtClubMembership is ERC721, ERC721URIStorage, IERC2981, Ownable, ReentrancyGuard {\n    uint256 private _tokenIdCounter;\n    \n    // Royalty info\n    address private _royaltyRecipient;\n    uint96 private _royaltyFraction; // basis points (e.g., 1000 = 10%)\n    \n    // Authorized minter (backend service)\n    address public authorizedMinter;\n    \n    // Transfer restrictions\n    bool public transfersRestricted = true;\n    mapping(address => bool) public approvedMarketplaces;\n    \n    // Member tiers\n    enum MemberTier { Standard, Premium, Elite, Lifetime }\n    \n    // NFC Card data structure\n    struct NFCCard {\n        string cardId;           // Unique NFC card identifier\n        string serialNumber;     // Physical card serial number\n        uint256 linkedAt;        // Timestamp when card was linked\n        bool isActive;           // Whether the card is active\n        string cardType;         // Type of NFC card (e.g., \"Standard\", \"Premium\")\n    }\n    \n    // Member info\n    struct MemberInfo {\n        MemberTier tier;\n        uint256 mintedAt;\n        string email; // For admin reference\n        bool active;\n        NFCCard nfcCard;        // NFC card information\n        bool hasNFCCard;        // Whether member has an NFC card linked\n    }\n    \n    mapping(uint256 => MemberInfo) public memberInfo;\n    mapping(address => uint256) public memberTokenId; // One token per address\n    \n    // NFC card tracking\n    mapping(string => uint256) public nfcCardToToken; // cardId -> tokenId\n    mapping(string => bool) public nfcCardExists;     // cardId -> exists\n    \n    // Events\n    event MembershipMinted(uint256 indexed tokenId, address indexed member, MemberTier tier, string email);\n    event MemberTierUpdated(uint256 indexed tokenId, MemberTier oldTier, MemberTier newTier);\n    event NFCCardLinked(uint256 indexed tokenId, string cardId, string serialNumber);\n    event NFCCardUnlinked(uint256 indexed tokenId, string cardId);\n    event NFCCardDeactivated(uint256 indexed tokenId, string cardId);\n    event TransferRestrictionUpdated(bool restricted);\n    event MarketplaceApprovalUpdated(address indexed marketplace, bool approved);\n    event AuthorizedMinterUpdated(address indexed oldMinter, address indexed newMinter);\n    \n    modifier onlyAuthorizedMinter() {\n        require(msg.sender == authorizedMinter || msg.sender == owner(), \"Not authorized to mint\");\n        _;\n    }\n    \n    constructor(\n        address authorizedMinter_,\n        address royaltyRecipient_,\n        uint96 royaltyFraction_\n    ) ERC721(\"Lake Stockton Yacht Club Membership\", \"LSYCM\") Ownable(msg.sender) {\n        authorizedMinter = authorizedMinter_;\n        _royaltyRecipient = royaltyRecipient_;\n        _royaltyFraction = royaltyFraction_; // e.g., 1000 for 10%\n        \n        // Start token IDs at 1\n        _tokenIdCounter++;\n    }\n    \n    /**\n     * @dev Mint membership NFT to a member\n     * @param to Member address\n     * @param tier Member tier\n     * @param email Member email for admin reference\n     * @param tokenURI_ Metadata URI\n     */\n    function mintMembership(\n        address to,\n        MemberTier tier,\n        string memory email,\n        string memory tokenURI_\n    ) external onlyAuthorizedMinter nonReentrant returns (uint256) {\n        require(to != address(0), \"Cannot mint to zero address\");\n        require(memberTokenId[to] == 0, \"Member already has a token\");\n        require(bytes(tokenURI_).length > 0, \"Token URI cannot be empty\");\n        \n        uint256 tokenId = _tokenIdCounter;\n        _tokenIdCounter++;\n        \n        _safeMint(to, tokenId);\n        _setTokenURI(tokenId, tokenURI_);\n        \n        memberInfo[tokenId] = MemberInfo({\n            tier: tier,\n            mintedAt: block.timestamp,\n            email: email,\n            active: true,\n            nfcCard: NFCCard({\n                cardId: \"\",\n                serialNumber: \"\",\n                linkedAt: 0,\n                isActive: false,\n                cardType: \"\"\n            }),\n            hasNFCCard: false\n        });\n        \n        memberTokenId[to] = tokenId;\n        \n        emit MembershipMinted(tokenId, to, tier, email);\n        \n        return tokenId;\n    }\n    \n    /**\n     * @dev Link NFC card to membership NFT (admin only)\n     * @param tokenId The token ID to link the card to\n     * @param cardId Unique NFC card identifier\n     * @param serialNumber Physical card serial number\n     * @param cardType Type of NFC card\n     */\n    function linkNFCCard(\n        uint256 tokenId,\n        string memory cardId,\n        string memory serialNumber,\n        string memory cardType\n    ) external onlyOwner {\n        require(_ownerOf(tokenId) != address(0), \"Token does not exist\");\n        require(bytes(cardId).length > 0, \"Card ID cannot be empty\");\n        require(!nfcCardExists[cardId], \"NFC card already exists\");\n        require(!memberInfo[tokenId].hasNFCCard, \"Member already has an NFC card\");\n        \n        // Link the card\n        memberInfo[tokenId].nfcCard = NFCCard({\n            cardId: cardId,\n            serialNumber: serialNumber,\n            linkedAt: block.timestamp,\n            isActive: true,\n            cardType: cardType\n        });\n        memberInfo[tokenId].hasNFCCard = true;\n        \n        // Update tracking mappings\n        nfcCardToToken[cardId] = tokenId;\n        nfcCardExists[cardId] = true;\n        \n        emit NFCCardLinked(tokenId, cardId, serialNumber);\n    }\n    \n    /**\n     * @dev Unlink NFC card from membership NFT (admin only)\n     * @param tokenId The token ID to unlink the card from\n     */\n    function unlinkNFCCard(uint256 tokenId) external onlyOwner {\n        require(_ownerOf(tokenId) != address(0), \"Token does not exist\");\n        require(memberInfo[tokenId].hasNFCCard, \"Member does not have an NFC card\");\n        \n        string memory cardId = memberInfo[tokenId].nfcCard.cardId;\n        \n        // Remove the card link\n        delete memberInfo[tokenId].nfcCard;\n        memberInfo[tokenId].hasNFCCard = false;\n        \n        // Update tracking mappings\n        delete nfcCardToToken[cardId];\n        delete nfcCardExists[cardId];\n        \n        emit NFCCardUnlinked(tokenId, cardId);\n    }\n    \n    /**\n     * @dev Deactivate NFC card (admin only)\n     * @param tokenId The token ID to deactivate the card for\n     */\n    function deactivateNFCCard(uint256 tokenId) external onlyOwner {\n        require(_ownerOf(tokenId) != address(0), \"Token does not exist\");\n        require(memberInfo[tokenId].hasNFCCard, \"Member does not have an NFC card\");\n        \n        memberInfo[tokenId].nfcCard.isActive = false;\n        \n        emit NFCCardDeactivated(tokenId, memberInfo[tokenId].nfcCard.cardId);\n    }\n    \n    /**\n     * @dev Reactivate NFC card (admin only)\n     * @param tokenId The token ID to reactivate the card for\n     */\n    function reactivateNFCCard(uint256 tokenId) external onlyOwner {\n        require(_ownerOf(tokenId) != address(0), \"Token does not exist\");\n        require(memberInfo[tokenId].hasNFCCard, \"Member does not have an NFC card\");\n        \n        memberInfo[tokenId].nfcCard.isActive = true;\n    }\n    \n    /**\n     * @dev Get NFC card info by card ID\n     * @param cardId The NFC card identifier\n     * @return tokenId The token ID the card is linked to\n     * @return isActive Whether the card is active\n     * @return cardType The type of card\n     */\n    function getNFCCardInfo(string memory cardId) external view returns (\n        uint256 tokenId,\n        bool isActive,\n        string memory cardType\n    ) {\n        require(nfcCardExists[cardId], \"NFC card does not exist\");\n        \n        tokenId = nfcCardToToken[cardId];\n        NFCCard memory card = memberInfo[tokenId].nfcCard;\n        isActive = card.isActive;\n        cardType = card.cardType;\n    }\n    \n    /**\n     * @dev Verify NFC card for real-world usage\n     * @param cardId The NFC card identifier\n     * @return isValid Whether the card is valid for use\n     * @return memberAddress The member address if valid\n     * @return tier The member tier if valid\n     */\n    function verifyNFCCard(string memory cardId) external view returns (\n        bool isValid,\n        address memberAddress,\n        MemberTier tier\n    ) {\n        if (!nfcCardExists[cardId]) {\n            return (false, address(0), MemberTier.Standard);\n        }\n        \n        uint256 tokenId = nfcCardToToken[cardId];\n        MemberInfo memory member = memberInfo[tokenId];\n        \n        if (!member.active || !member.hasNFCCard || !member.nfcCard.isActive) {\n            return (false, address(0), MemberTier.Standard);\n        }\n        \n        address owner = ownerOf(tokenId);\n        return (true, owner, member.tier);\n    }\n    \n    /**\n     * @dev Update member tier (admin only)\n     */\n    function updateMemberTier(uint256 tokenId, MemberTier newTier) external onlyOwner {\n        require(_ownerOf(tokenId) != address(0), \"Token does not exist\");\n        \n        MemberTier oldTier = memberInfo[tokenId].tier;\n        memberInfo[tokenId].tier = newTier;\n        \n        emit MemberTierUpdated(tokenId, oldTier, newTier);\n    }\n    \n    /**\n     * @dev Deactivate membership (admin only)\n     */\n    function deactivateMembership(uint256 tokenId) external onlyOwner {\n        require(_ownerOf(tokenId) != address(0), \"Token does not exist\");\n        memberInfo[tokenId].active = false;\n    }\n    \n    /**\n     * @dev Reactivate membership (admin only)\n     */\n    function reactivateMembership(uint256 tokenId) external onlyOwner {\n        require(_ownerOf(tokenId) != address(0), \"Token does not exist\");\n        memberInfo[tokenId].active = true;\n    }\n    \n    /**\n     * @dev Set authorized minter address\n     */\n    function setAuthorizedMinter(address _authorizedMinter) external onlyOwner {\n        address oldMinter = authorizedMinter;\n        authorizedMinter = _authorizedMinter;\n        emit AuthorizedMinterUpdated(oldMinter, _authorizedMinter);\n    }\n    \n    /**\n     * @dev Set transfer restrictions\n     */\n    function setTransferRestricted(bool _restricted) external onlyOwner {\n        transfersRestricted = _restricted;\n        emit TransferRestrictionUpdated(_restricted);\n    }\n    \n    /**\n     * @dev Approve/disapprove marketplace for transfers\n     */\n    function setMarketplaceApproval(address marketplace, bool approved) external onlyOwner {\n        approvedMarketplaces[marketplace] = approved;\n        emit MarketplaceApprovalUpdated(marketplace, approved);\n    }\n    \n    /**\n     * @dev Override transfer to implement restrictions\n     * Note: Transfer restrictions are temporarily disabled due to OpenZeppelin v5 compatibility\n     * TODO: Implement transfer restrictions using the correct OpenZeppelin v5 hooks\n     */\n    \n    /**\n     * @dev Set royalty info\n     */\n    function setRoyaltyInfo(address recipient, uint96 fraction) external onlyOwner {\n        _royaltyRecipient = recipient;\n        _royaltyFraction = fraction;\n    }\n    \n    /**\n     * @dev ERC-2981 royalty info\n     */\n    function royaltyInfo(uint256 tokenId, uint256 salePrice)\n        external\n        view\n        override\n        returns (address receiver, uint256 royaltyAmount)\n    {\n        require(_ownerOf(tokenId) != address(0), \"Token does not exist\");\n        \n        receiver = _royaltyRecipient;\n        royaltyAmount = (salePrice * _royaltyFraction) / 10000;\n    }\n    \n    /**\n     * @dev Get total supply\n     */\n    function totalSupply() external view returns (uint256) {\n        return _tokenIdCounter - 1;\n    }\n    \n    /**\n     * @dev Get member info by token ID\n     */\n    function getMemberInfo(uint256 tokenId) external view returns (MemberInfo memory) {\n        require(_ownerOf(tokenId) != address(0), \"Token does not exist\");\n        return memberInfo[tokenId];\n    }\n    \n    /**\n     * @dev Get token ID by member address\n     */\n    function getTokenIdByMember(address member) external view returns (uint256) {\n        return memberTokenId[member];\n    }\n    \n    /**\n     * @dev Check if address is a member\n     */\n    function isMember(address account) external view returns (bool) {\n        uint256 tokenId = memberTokenId[account];\n        return tokenId != 0 && memberInfo[tokenId].active;\n    }\n    \n    // Override required functions\n    // Note: _burn is not virtual in newer OpenZeppelin versions\n    \n    function tokenURI(uint256 tokenId)\n        public\n        view\n        override(ERC721, ERC721URIStorage)\n        returns (string memory)\n    {\n        return super.tokenURI(tokenId);\n    }\n    \n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        override(ERC721, ERC721URIStorage, IERC165)\n        returns (bool)\n    {\n        return interfaceId == type(IERC2981).interfaceId || super.supportsInterface(interfaceId);\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1691],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1692,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1691,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1691],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[3250]},"id":152,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":152,"sourceUnit":3251,"src":"133:59:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"141:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:87:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC2981.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC2981.sol","exportedSymbols":{"IERC165":[3250],"IERC2981":[171]},"id":172,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":153,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"107:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":155,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":172,"sourceUnit":3251,"src":"133:59:2","symbolAliases":[{"foreign":{"id":154,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":157,"name":"IERC165","nameLocations":["476:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":3250,"src":"476:7:2"},"id":158,"nodeType":"InheritanceSpecifier","src":"476:7:2"}],"canonicalName":"IERC2981","contractDependencies":[],"contractKind":"interface","documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"194:259:2","text":" @dev Interface for the NFT Royalty Standard.\n A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n support for royalty payments across all NFT marketplaces and ecosystem participants."},"fullyImplemented":false,"id":171,"linearizedBaseContracts":[171,3250],"name":"IERC2981","nameLocation":"464:8:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"490:473:2","text":" @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the\n royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers."},"functionSelector":"2a55205a","id":170,"implemented":false,"kind":"function","modifiers":[],"name":"royaltyInfo","nameLocation":"977:11:2","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"tokenId","nameLocation":"1006:7:2","nodeType":"VariableDeclaration","scope":170,"src":"998:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":160,"name":"uint256","nodeType":"ElementaryTypeName","src":"998:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"salePrice","nameLocation":"1031:9:2","nodeType":"VariableDeclaration","scope":170,"src":"1023:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1023:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"988:58:2"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"receiver","nameLocation":"1078:8:2","nodeType":"VariableDeclaration","scope":170,"src":"1070:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":165,"name":"address","nodeType":"ElementaryTypeName","src":"1070:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":168,"mutability":"mutable","name":"royaltyAmount","nameLocation":"1096:13:2","nodeType":"VariableDeclaration","scope":170,"src":"1088:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1069:41:2"},"scope":171,"src":"968:143:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":172,"src":"454:659:2","usedErrors":[],"usedEvents":[]}],"src":"107:1007:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","exportedSymbols":{"IERC165":[3250],"IERC4906":[195],"IERC721":[1410]},"id":196,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":173,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"107:24:3"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":175,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":196,"sourceUnit":152,"src":"133:38:3","symbolAliases":[{"foreign":{"id":174,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"141:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","file":"./IERC721.sol","id":177,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":196,"sourceUnit":200,"src":"172:38:3","symbolAliases":[{"foreign":{"id":176,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"180:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":179,"name":"IERC165","nameLocations":["279:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":3250,"src":"279:7:3"},"id":180,"nodeType":"InheritanceSpecifier","src":"279:7:3"},{"baseName":{"id":181,"name":"IERC721","nameLocations":["288:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1410,"src":"288:7:3"},"id":182,"nodeType":"InheritanceSpecifier","src":"288:7:3"}],"canonicalName":"IERC4906","contractDependencies":[],"contractKind":"interface","documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"212:45:3","text":"@title ERC-721 Metadata Update Extension"},"fullyImplemented":false,"id":195,"linearizedBaseContracts":[195,1410,3250],"name":"IERC4906","nameLocation":"267:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"302:201:3","text":"@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."},"eventSelector":"f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7","id":187,"name":"MetadataUpdate","nameLocation":"514:14:3","nodeType":"EventDefinition","parameters":{"id":186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"indexed":false,"mutability":"mutable","name":"_tokenId","nameLocation":"537:8:3","nodeType":"VariableDeclaration","scope":187,"src":"529:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":184,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"528:18:3"},"src":"508:39:3"},{"anonymous":false,"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"553:212:3","text":"@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."},"eventSelector":"6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c","id":194,"name":"BatchMetadataUpdate","nameLocation":"776:19:3","nodeType":"EventDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"indexed":false,"mutability":"mutable","name":"_fromTokenId","nameLocation":"804:12:3","nodeType":"VariableDeclaration","scope":194,"src":"796:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":189,"name":"uint256","nodeType":"ElementaryTypeName","src":"796:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":192,"indexed":false,"mutability":"mutable","name":"_toTokenId","nameLocation":"826:10:3","nodeType":"VariableDeclaration","scope":194,"src":"818:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"795:42:3"},"src":"770:68:3"}],"scope":196,"src":"257:583:3","usedErrors":[],"usedEvents":[187,194,1309,1318,1327]}],"src":"107:734:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","exportedSymbols":{"IERC721":[1410]},"id":200,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":197,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"106:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../token/ERC721/IERC721.sol","id":199,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":200,"sourceUnit":1411,"src":"132:52:4","symbolAliases":[{"foreign":{"id":198,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"140:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:79:4"},"id":4},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[336],"IERC20Errors":[241],"IERC721Errors":[289]},"id":337,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":201,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":202,"nodeType":"StructuredDocumentation","src":"138:141:5","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":241,"linearizedBaseContracts":[241],"name":"IERC20Errors","nameLocation":"290:12:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":203,"nodeType":"StructuredDocumentation","src":"309:309:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":211,"name":"ERC20InsufficientBalance","nameLocation":"629:24:5","nodeType":"ErrorDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"sender","nameLocation":"662:6:5","nodeType":"VariableDeclaration","scope":211,"src":"654:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":204,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"balance","nameLocation":"678:7:5","nodeType":"VariableDeclaration","scope":211,"src":"670:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":206,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":209,"mutability":"mutable","name":"needed","nameLocation":"695:6:5","nodeType":"VariableDeclaration","scope":211,"src":"687:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":208,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:5"},"src":"623:80:5"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"709:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":216,"name":"ERC20InvalidSender","nameLocation":"872:18:5","nodeType":"ErrorDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"sender","nameLocation":"899:6:5","nodeType":"VariableDeclaration","scope":216,"src":"891:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:5"},"src":"866:41:5"},{"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"913:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":221,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:5","nodeType":"ErrorDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:5","nodeType":"VariableDeclaration","scope":221,"src":"1104:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:5"},"src":"1077:45:5"},{"documentation":{"id":222,"nodeType":"StructuredDocumentation","src":"1128:345:5","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":230,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:5","nodeType":"ErrorDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"mutability":"mutable","name":"spender","nameLocation":"1519:7:5","nodeType":"VariableDeclaration","scope":230,"src":"1511:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":223,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":226,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:5","nodeType":"VariableDeclaration","scope":230,"src":"1528:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":225,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"needed","nameLocation":"1555:6:5","nodeType":"VariableDeclaration","scope":230,"src":"1547:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":227,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:5"},"src":"1478:85:5"},{"documentation":{"id":231,"nodeType":"StructuredDocumentation","src":"1569:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":235,"name":"ERC20InvalidApprover","nameLocation":"1754:20:5","nodeType":"ErrorDefinition","parameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"approver","nameLocation":"1783:8:5","nodeType":"VariableDeclaration","scope":235,"src":"1775:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":232,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:5"},"src":"1748:45:5"},{"documentation":{"id":236,"nodeType":"StructuredDocumentation","src":"1799:195:5","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":240,"name":"ERC20InvalidSpender","nameLocation":"2005:19:5","nodeType":"ErrorDefinition","parameters":{"id":239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":238,"mutability":"mutable","name":"spender","nameLocation":"2033:7:5","nodeType":"VariableDeclaration","scope":240,"src":"2025:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":237,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:5"},"src":"1999:43:5"}],"scope":337,"src":"280:1764:5","usedErrors":[211,216,221,230,235,240],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":242,"nodeType":"StructuredDocumentation","src":"2046:143:5","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":289,"linearizedBaseContracts":[289],"name":"IERC721Errors","nameLocation":"2200:13:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":243,"nodeType":"StructuredDocumentation","src":"2220:219:5","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":247,"name":"ERC721InvalidOwner","nameLocation":"2450:18:5","nodeType":"ErrorDefinition","parameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"owner","nameLocation":"2477:5:5","nodeType":"VariableDeclaration","scope":247,"src":"2469:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":244,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:5"},"src":"2444:40:5"},{"documentation":{"id":248,"nodeType":"StructuredDocumentation","src":"2490:132:5","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":252,"name":"ERC721NonexistentToken","nameLocation":"2633:22:5","nodeType":"ErrorDefinition","parameters":{"id":251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":250,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:5","nodeType":"VariableDeclaration","scope":252,"src":"2656:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":249,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:5"},"src":"2627:46:5"},{"documentation":{"id":253,"nodeType":"StructuredDocumentation","src":"2679:289:5","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":261,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:5","nodeType":"ErrorDefinition","parameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":255,"mutability":"mutable","name":"sender","nameLocation":"3008:6:5","nodeType":"VariableDeclaration","scope":261,"src":"3000:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":254,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":257,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:5","nodeType":"VariableDeclaration","scope":261,"src":"3016:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":256,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":259,"mutability":"mutable","name":"owner","nameLocation":"3041:5:5","nodeType":"VariableDeclaration","scope":261,"src":"3033:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":258,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:5"},"src":"2973:75:5"},{"documentation":{"id":262,"nodeType":"StructuredDocumentation","src":"3054:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":266,"name":"ERC721InvalidSender","nameLocation":"3217:19:5","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"sender","nameLocation":"3245:6:5","nodeType":"VariableDeclaration","scope":266,"src":"3237:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:5"},"src":"3211:42:5"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"3259:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":271,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:5","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:5","nodeType":"VariableDeclaration","scope":271,"src":"3451:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:5"},"src":"3423:46:5"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"3475:247:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":278,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:5","nodeType":"ErrorDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"operator","nameLocation":"3768:8:5","nodeType":"VariableDeclaration","scope":278,"src":"3760:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":276,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:5","nodeType":"VariableDeclaration","scope":278,"src":"3778:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":275,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:5"},"src":"3727:68:5"},{"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"3801:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":283,"name":"ERC721InvalidApprover","nameLocation":"3986:21:5","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"mutability":"mutable","name":"approver","nameLocation":"4016:8:5","nodeType":"VariableDeclaration","scope":283,"src":"4008:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":280,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:5"},"src":"3980:46:5"},{"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"4032:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":288,"name":"ERC721InvalidOperator","nameLocation":"4240:21:5","nodeType":"ErrorDefinition","parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"operator","nameLocation":"4270:8:5","nodeType":"VariableDeclaration","scope":288,"src":"4262:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":285,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:5"},"src":"4234:46:5"}],"scope":337,"src":"2190:2092:5","usedErrors":[247,252,261,266,271,278,283,288],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":290,"nodeType":"StructuredDocumentation","src":"4284:145:5","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":336,"linearizedBaseContracts":[336],"name":"IERC1155Errors","nameLocation":"4440:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":291,"nodeType":"StructuredDocumentation","src":"4461:361:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":301,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:5","nodeType":"ErrorDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":293,"mutability":"mutable","name":"sender","nameLocation":"4868:6:5","nodeType":"VariableDeclaration","scope":301,"src":"4860:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":292,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":295,"mutability":"mutable","name":"balance","nameLocation":"4884:7:5","nodeType":"VariableDeclaration","scope":301,"src":"4876:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":294,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":297,"mutability":"mutable","name":"needed","nameLocation":"4901:6:5","nodeType":"VariableDeclaration","scope":301,"src":"4893:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":296,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":299,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:5","nodeType":"VariableDeclaration","scope":301,"src":"4909:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":298,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:5"},"src":"4827:99:5"},{"documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"4932:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":306,"name":"ERC1155InvalidSender","nameLocation":"5095:20:5","nodeType":"ErrorDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"sender","nameLocation":"5124:6:5","nodeType":"VariableDeclaration","scope":306,"src":"5116:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":303,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:5"},"src":"5089:43:5"},{"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"5138:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":311,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:5","nodeType":"ErrorDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":309,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:5","nodeType":"VariableDeclaration","scope":311,"src":"5331:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:5"},"src":"5302:47:5"},{"documentation":{"id":312,"nodeType":"StructuredDocumentation","src":"5355:256:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":318,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:5","nodeType":"ErrorDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":314,"mutability":"mutable","name":"operator","nameLocation":"5659:8:5","nodeType":"VariableDeclaration","scope":318,"src":"5651:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":313,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":316,"mutability":"mutable","name":"owner","nameLocation":"5677:5:5","nodeType":"VariableDeclaration","scope":318,"src":"5669:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":315,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:5"},"src":"5616:68:5"},{"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"5690:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":323,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:5","nodeType":"ErrorDefinition","parameters":{"id":322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"mutability":"mutable","name":"approver","nameLocation":"5906:8:5","nodeType":"VariableDeclaration","scope":323,"src":"5898:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":320,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:5"},"src":"5869:47:5"},{"documentation":{"id":324,"nodeType":"StructuredDocumentation","src":"5922:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":328,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:5","nodeType":"ErrorDefinition","parameters":{"id":327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":326,"mutability":"mutable","name":"operator","nameLocation":"6161:8:5","nodeType":"VariableDeclaration","scope":328,"src":"6153:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":325,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:5"},"src":"6124:47:5"},{"documentation":{"id":329,"nodeType":"StructuredDocumentation","src":"6177:280:5","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":335,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:5","nodeType":"ErrorDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":331,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:5","nodeType":"VariableDeclaration","scope":335,"src":"6494:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":330,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":333,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:5","nodeType":"VariableDeclaration","scope":335,"src":"6513:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":332,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:5"},"src":"6462:73:5"}],"scope":337,"src":"4430:2107:5","usedErrors":[301,306,311,318,323,328,335],"usedEvents":[]}],"src":"112:6426:5"},"id":5},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[1691],"ERC165":[3238],"ERC721":[1293],"ERC721Utils":[1661],"IERC165":[3250],"IERC721":[1410],"IERC721Errors":[289],"IERC721Metadata":[1584],"Strings":[3214]},"id":1294,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":338,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":340,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1294,"sourceUnit":1411,"src":"133:38:6","symbolAliases":[{"foreign":{"id":339,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"141:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":342,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1294,"sourceUnit":1585,"src":"172:65:6","symbolAliases":[{"foreign":{"id":341,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"180:15:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":344,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1294,"sourceUnit":1662,"src":"238:52:6","symbolAliases":[{"foreign":{"id":343,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"246:11:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":346,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1294,"sourceUnit":1692,"src":"291:48:6","symbolAliases":[{"foreign":{"id":345,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"299:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":348,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1294,"sourceUnit":3215,"src":"340:48:6","symbolAliases":[{"foreign":{"id":347,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3214,"src":"348:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":351,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1294,"sourceUnit":3239,"src":"389:69:6","symbolAliases":[{"foreign":{"id":349,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"397:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":350,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"406:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":353,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1294,"sourceUnit":337,"src":"459:66:6","symbolAliases":[{"foreign":{"id":352,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"467:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":355,"name":"Context","nameLocations":["803:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1691,"src":"803:7:6"},"id":356,"nodeType":"InheritanceSpecifier","src":"803:7:6"},{"baseName":{"id":357,"name":"ERC165","nameLocations":["812:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":3238,"src":"812:6:6"},"id":358,"nodeType":"InheritanceSpecifier","src":"812:6:6"},{"baseName":{"id":359,"name":"IERC721","nameLocations":["820:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1410,"src":"820:7:6"},"id":360,"nodeType":"InheritanceSpecifier","src":"820:7:6"},{"baseName":{"id":361,"name":"IERC721Metadata","nameLocations":["829:15:6"],"nodeType":"IdentifierPath","referencedDeclaration":1584,"src":"829:15:6"},"id":362,"nodeType":"InheritanceSpecifier","src":"829:15:6"},{"baseName":{"id":363,"name":"IERC721Errors","nameLocations":["846:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":289,"src":"846:13:6"},"id":364,"nodeType":"InheritanceSpecifier","src":"846:13:6"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"527:247:6","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1293,"linearizedBaseContracts":[1293,289,1584,1410,3238,3250,1691],"name":"ERC721","nameLocation":"793:6:6","nodeType":"ContractDefinition","nodes":[{"global":false,"id":367,"libraryName":{"id":365,"name":"Strings","nameLocations":["872:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":3214,"src":"872:7:6"},"nodeType":"UsingForDirective","src":"866:26:6","typeName":{"id":366,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":369,"mutability":"mutable","name":"_name","nameLocation":"931:5:6","nodeType":"VariableDeclaration","scope":1293,"src":"916:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":368,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":371,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:6","nodeType":"VariableDeclaration","scope":1293,"src":"963:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":370,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":375,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:6","nodeType":"VariableDeclaration","scope":1293,"src":"992:51:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":374,"keyName":"tokenId","keyNameLocation":"1008:7:6","keyType":{"id":372,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":379,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:6","nodeType":"VariableDeclaration","scope":1293,"src":"1050:51:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":378,"keyName":"owner","keyNameLocation":"1066:5:6","keyType":{"id":376,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":377,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":383,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:6","nodeType":"VariableDeclaration","scope":1293,"src":"1108:59:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":382,"keyName":"tokenId","keyNameLocation":"1124:7:6","keyType":{"id":380,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":381,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":389,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:6","nodeType":"VariableDeclaration","scope":1293,"src":"1174:86:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":388,"keyName":"owner","keyNameLocation":"1190:5:6","keyType":{"id":384,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":387,"keyName":"operator","keyNameLocation":"1215:8:6","keyType":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":386,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":405,"nodeType":"Block","src":"1436:57:6","statements":[{"expression":{"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":397,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"1446:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":398,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"1454:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":400,"nodeType":"ExpressionStatement","src":"1446:13:6"},{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":401,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"1469:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":402,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"1479:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":404,"nodeType":"ExpressionStatement","src":"1469:17:6"}]},"documentation":{"id":390,"nodeType":"StructuredDocumentation","src":"1267:108:6","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":406,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":392,"mutability":"mutable","name":"name_","nameLocation":"1406:5:6","nodeType":"VariableDeclaration","scope":406,"src":"1392:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":391,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":394,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:6","nodeType":"VariableDeclaration","scope":406,"src":"1413:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":393,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:6"},"returnParameters":{"id":396,"nodeType":"ParameterList","parameters":[],"src":"1436:0:6"},"scope":1293,"src":"1380:113:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3237,3249],"body":{"id":436,"nodeType":"Block","src":"1635:192:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":417,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"1664:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":419,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"1684:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1410_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1410_$","typeString":"type(contract IERC721)"}],"id":418,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1679:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1679:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1410","typeString":"type(contract IERC721)"}},"id":421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1693:11:6","memberName":"interfaceId","nodeType":"MemberAccess","src":"1679:25:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1664:40:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":423,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"1720:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":425,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"1740:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1584_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1584_$","typeString":"type(contract IERC721Metadata)"}],"id":424,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1735:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1735:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1584","typeString":"type(contract IERC721Metadata)"}},"id":427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1757:11:6","memberName":"interfaceId","nodeType":"MemberAccess","src":"1735:33:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1720:48:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:104:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":432,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"1808:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":430,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1784:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1293_$","typeString":"type(contract super ERC721)"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1790:17:6","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3237,"src":"1784:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1784:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:156:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":416,"id":435,"nodeType":"Return","src":"1645:175:6"}]},"documentation":{"id":407,"nodeType":"StructuredDocumentation","src":"1499:23:6","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":437,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1536:17:6","nodeType":"FunctionDefinition","overrides":{"id":413,"nodeType":"OverrideSpecifier","overrides":[{"id":411,"name":"ERC165","nameLocations":["1603:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":3238,"src":"1603:6:6"},{"id":412,"name":"IERC165","nameLocations":["1611:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":3250,"src":"1611:7:6"}],"src":"1594:25:6"},"parameters":{"id":410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"interfaceId","nameLocation":"1561:11:6","nodeType":"VariableDeclaration","scope":437,"src":"1554:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":408,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1554:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1553:20:6"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":437,"src":"1629:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":414,"name":"bool","nodeType":"ElementaryTypeName","src":"1629:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1628:6:6"},"scope":1293,"src":"1527:300:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1335],"body":{"id":464,"nodeType":"Block","src":"1933:136:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":445,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"1947:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1964:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1956:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":446,"name":"address","nodeType":"ElementaryTypeName","src":"1956:7:6","typeDescriptions":{}}},"id":449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1956:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1947:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":459,"nodeType":"IfStatement","src":"1943:87:6","trueBody":{"id":458,"nodeType":"Block","src":"1968:62:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2016:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2008:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"2008:7:6","typeDescriptions":{}}},"id":455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":451,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"1989:18:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1989:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":457,"nodeType":"RevertStatement","src":"1982:37:6"}]}},{"expression":{"baseExpression":{"id":460,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"2046:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":462,"indexExpression":{"id":461,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"2056:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2046:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":444,"id":463,"nodeType":"Return","src":"2039:23:6"}]},"documentation":{"id":438,"nodeType":"StructuredDocumentation","src":"1833:23:6","text":"@inheritdoc IERC721"},"functionSelector":"70a08231","id":465,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1870:9:6","nodeType":"FunctionDefinition","parameters":{"id":441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":440,"mutability":"mutable","name":"owner","nameLocation":"1888:5:6","nodeType":"VariableDeclaration","scope":465,"src":"1880:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":439,"name":"address","nodeType":"ElementaryTypeName","src":"1880:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1879:15:6"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":465,"src":"1924:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":442,"name":"uint256","nodeType":"ElementaryTypeName","src":"1924:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1923:9:6"},"scope":1293,"src":"1861:208:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1343],"body":{"id":477,"nodeType":"Block","src":"2175:46:6","statements":[{"expression":{"arguments":[{"id":474,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"2206:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":473,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"2192:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":472,"id":476,"nodeType":"Return","src":"2185:29:6"}]},"documentation":{"id":466,"nodeType":"StructuredDocumentation","src":"2075:23:6","text":"@inheritdoc IERC721"},"functionSelector":"6352211e","id":478,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2112:7:6","nodeType":"FunctionDefinition","parameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"mutability":"mutable","name":"tokenId","nameLocation":"2128:7:6","nodeType":"VariableDeclaration","scope":478,"src":"2120:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":467,"name":"uint256","nodeType":"ElementaryTypeName","src":"2120:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2119:17:6"},"returnParameters":{"id":472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":478,"src":"2166:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":470,"name":"address","nodeType":"ElementaryTypeName","src":"2166:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2165:9:6"},"scope":1293,"src":"2103:118:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1569],"body":{"id":486,"nodeType":"Block","src":"2323:29:6","statements":[{"expression":{"id":484,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"2340:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":483,"id":485,"nodeType":"Return","src":"2333:12:6"}]},"documentation":{"id":479,"nodeType":"StructuredDocumentation","src":"2227:31:6","text":"@inheritdoc IERC721Metadata"},"functionSelector":"06fdde03","id":487,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2272:4:6","nodeType":"FunctionDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[],"src":"2276:2:6"},"returnParameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":487,"src":"2308:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":481,"name":"string","nodeType":"ElementaryTypeName","src":"2308:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2307:15:6"},"scope":1293,"src":"2263:89:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1575],"body":{"id":495,"nodeType":"Block","src":"2456:31:6","statements":[{"expression":{"id":493,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"2473:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":492,"id":494,"nodeType":"Return","src":"2466:14:6"}]},"documentation":{"id":488,"nodeType":"StructuredDocumentation","src":"2358:31:6","text":"@inheritdoc IERC721Metadata"},"functionSelector":"95d89b41","id":496,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2403:6:6","nodeType":"FunctionDefinition","parameters":{"id":489,"nodeType":"ParameterList","parameters":[],"src":"2409:2:6"},"returnParameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":496,"src":"2441:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":490,"name":"string","nodeType":"ElementaryTypeName","src":"2441:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2440:15:6"},"scope":1293,"src":"2394:93:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1583],"body":{"id":531,"nodeType":"Block","src":"2608:176:6","statements":[{"expression":{"arguments":[{"id":505,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"2632:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":504,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"2618:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2618:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":507,"nodeType":"ExpressionStatement","src":"2618:22:6"},{"assignments":[509],"declarations":[{"constant":false,"id":509,"mutability":"mutable","name":"baseURI","nameLocation":"2665:7:6","nodeType":"VariableDeclaration","scope":531,"src":"2651:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":508,"name":"string","nodeType":"ElementaryTypeName","src":"2651:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":512,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":510,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"2675:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2651:34:6"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":515,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"2708:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2702:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":513,"name":"bytes","nodeType":"ElementaryTypeName","src":"2702:5:6","typeDescriptions":{}}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2702:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2717:6:6","memberName":"length","nodeType":"MemberAccess","src":"2702:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2726:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2702:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2775:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2702:75:6","trueExpression":{"arguments":[{"id":523,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"2744:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":524,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"2753:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:8:6","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1926,"src":"2753:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2753:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2730:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":520,"name":"string","nodeType":"ElementaryTypeName","src":"2730:6:6","typeDescriptions":{}}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2737:6:6","memberName":"concat","nodeType":"MemberAccess","src":"2730:13:6","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":503,"id":530,"nodeType":"Return","src":"2695:82:6"}]},"documentation":{"id":497,"nodeType":"StructuredDocumentation","src":"2493:31:6","text":"@inheritdoc IERC721Metadata"},"functionSelector":"c87b56dd","id":532,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2538:8:6","nodeType":"FunctionDefinition","parameters":{"id":500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":499,"mutability":"mutable","name":"tokenId","nameLocation":"2555:7:6","nodeType":"VariableDeclaration","scope":532,"src":"2547:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":498,"name":"uint256","nodeType":"ElementaryTypeName","src":"2547:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2546:17:6"},"returnParameters":{"id":503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":532,"src":"2593:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":501,"name":"string","nodeType":"ElementaryTypeName","src":"2593:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2592:15:6"},"scope":1293,"src":"2529:255:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":540,"nodeType":"Block","src":"3092:26:6","statements":[{"expression":{"hexValue":"","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3109:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":537,"id":539,"nodeType":"Return","src":"3102:9:6"}]},"documentation":{"id":533,"nodeType":"StructuredDocumentation","src":"2790:231:6","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":541,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3035:8:6","nodeType":"FunctionDefinition","parameters":{"id":534,"nodeType":"ParameterList","parameters":[],"src":"3043:2:6"},"returnParameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":541,"src":"3077:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":535,"name":"string","nodeType":"ElementaryTypeName","src":"3077:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3076:15:6"},"scope":1293,"src":"3026:92:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1383],"body":{"id":556,"nodeType":"Block","src":"3213:52:6","statements":[{"expression":{"arguments":[{"id":550,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"3232:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":551,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"3236:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":552,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"3245:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3245:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":549,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1160,1226],"referencedDeclaration":1160,"src":"3223:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3223:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":555,"nodeType":"ExpressionStatement","src":"3223:35:6"}]},"documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"3124:23:6","text":"@inheritdoc IERC721"},"functionSelector":"095ea7b3","id":557,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3161:7:6","nodeType":"FunctionDefinition","parameters":{"id":547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":544,"mutability":"mutable","name":"to","nameLocation":"3177:2:6","nodeType":"VariableDeclaration","scope":557,"src":"3169:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":543,"name":"address","nodeType":"ElementaryTypeName","src":"3169:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":546,"mutability":"mutable","name":"tokenId","nameLocation":"3189:7:6","nodeType":"VariableDeclaration","scope":557,"src":"3181:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":545,"name":"uint256","nodeType":"ElementaryTypeName","src":"3181:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3168:29:6"},"returnParameters":{"id":548,"nodeType":"ParameterList","parameters":[],"src":"3213:0:6"},"scope":1293,"src":"3152:113:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1399],"body":{"id":573,"nodeType":"Block","src":"3375:78:6","statements":[{"expression":{"arguments":[{"id":566,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"3399:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":565,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"3385:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3385:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":568,"nodeType":"ExpressionStatement","src":"3385:22:6"},{"expression":{"arguments":[{"id":570,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"3438:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":569,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"3425:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3425:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":564,"id":572,"nodeType":"Return","src":"3418:28:6"}]},"documentation":{"id":558,"nodeType":"StructuredDocumentation","src":"3271:23:6","text":"@inheritdoc IERC721"},"functionSelector":"081812fc","id":574,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3308:11:6","nodeType":"FunctionDefinition","parameters":{"id":561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":560,"mutability":"mutable","name":"tokenId","nameLocation":"3328:7:6","nodeType":"VariableDeclaration","scope":574,"src":"3320:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":559,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3319:17:6"},"returnParameters":{"id":564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":574,"src":"3366:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":562,"name":"address","nodeType":"ElementaryTypeName","src":"3366:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3365:9:6"},"scope":1293,"src":"3299:154:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1391],"body":{"id":589,"nodeType":"Block","src":"3562:69:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":583,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"3591:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":585,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"3605:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":586,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"3615:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":582,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"3572:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":588,"nodeType":"ExpressionStatement","src":"3572:52:6"}]},"documentation":{"id":575,"nodeType":"StructuredDocumentation","src":"3459:23:6","text":"@inheritdoc IERC721"},"functionSelector":"a22cb465","id":590,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3496:17:6","nodeType":"FunctionDefinition","parameters":{"id":580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":577,"mutability":"mutable","name":"operator","nameLocation":"3522:8:6","nodeType":"VariableDeclaration","scope":590,"src":"3514:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"3514:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"approved","nameLocation":"3537:8:6","nodeType":"VariableDeclaration","scope":590,"src":"3532:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":578,"name":"bool","nodeType":"ElementaryTypeName","src":"3532:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3513:33:6"},"returnParameters":{"id":581,"nodeType":"ParameterList","parameters":[],"src":"3562:0:6"},"scope":1293,"src":"3487:144:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1409],"body":{"id":606,"nodeType":"Block","src":"3759:59:6","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":600,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"3776:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":602,"indexExpression":{"id":601,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"3795:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:25:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":604,"indexExpression":{"id":603,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"3802:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":599,"id":605,"nodeType":"Return","src":"3769:42:6"}]},"documentation":{"id":591,"nodeType":"StructuredDocumentation","src":"3637:23:6","text":"@inheritdoc IERC721"},"functionSelector":"e985e9c5","id":607,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3674:16:6","nodeType":"FunctionDefinition","parameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"mutability":"mutable","name":"owner","nameLocation":"3699:5:6","nodeType":"VariableDeclaration","scope":607,"src":"3691:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"3691:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":595,"mutability":"mutable","name":"operator","nameLocation":"3714:8:6","nodeType":"VariableDeclaration","scope":607,"src":"3706:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":594,"name":"address","nodeType":"ElementaryTypeName","src":"3706:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3690:33:6"},"returnParameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":607,"src":"3753:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":597,"name":"bool","nodeType":"ElementaryTypeName","src":"3753:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3752:6:6"},"scope":1293,"src":"3665:153:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1375],"body":{"id":652,"nodeType":"Block","src":"3932:498:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":617,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"3946:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3960:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3952:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":618,"name":"address","nodeType":"ElementaryTypeName","src":"3952:7:6","typeDescriptions":{}}},"id":621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3952:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3946:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":631,"nodeType":"IfStatement","src":"3942:87:6","trueBody":{"id":630,"nodeType":"Block","src":"3964:65:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4015:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4007:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":624,"name":"address","nodeType":"ElementaryTypeName","src":"4007:7:6","typeDescriptions":{}}},"id":627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":623,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"3985:21:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3985:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":629,"nodeType":"RevertStatement","src":"3978:40:6"}]}},{"assignments":[633],"declarations":[{"constant":false,"id":633,"mutability":"mutable","name":"previousOwner","nameLocation":"4255:13:6","nodeType":"VariableDeclaration","scope":652,"src":"4247:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":632,"name":"address","nodeType":"ElementaryTypeName","src":"4247:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":640,"initialValue":{"arguments":[{"id":635,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"4279:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":636,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"4283:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":637,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"4292:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4292:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":634,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"4271:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4271:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4247:58:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":641,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"4319:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":642,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"4336:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4319:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":651,"nodeType":"IfStatement","src":"4315:109:6","trueBody":{"id":650,"nodeType":"Block","src":"4342:82:6","statements":[{"errorCall":{"arguments":[{"id":645,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"4384:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":646,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"4390:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":647,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"4399:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":644,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"4363:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4363:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":649,"nodeType":"RevertStatement","src":"4356:57:6"}]}}]},"documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"3824:23:6","text":"@inheritdoc IERC721"},"functionSelector":"23b872dd","id":653,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3861:12:6","nodeType":"FunctionDefinition","parameters":{"id":615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"mutability":"mutable","name":"from","nameLocation":"3882:4:6","nodeType":"VariableDeclaration","scope":653,"src":"3874:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":609,"name":"address","nodeType":"ElementaryTypeName","src":"3874:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":612,"mutability":"mutable","name":"to","nameLocation":"3896:2:6","nodeType":"VariableDeclaration","scope":653,"src":"3888:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":611,"name":"address","nodeType":"ElementaryTypeName","src":"3888:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":614,"mutability":"mutable","name":"tokenId","nameLocation":"3908:7:6","nodeType":"VariableDeclaration","scope":653,"src":"3900:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":613,"name":"uint256","nodeType":"ElementaryTypeName","src":"3900:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3873:43:6"},"returnParameters":{"id":616,"nodeType":"ParameterList","parameters":[],"src":"3932:0:6"},"scope":1293,"src":"3852:578:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1365],"body":{"id":670,"nodeType":"Block","src":"4540:56:6","statements":[{"expression":{"arguments":[{"id":664,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"4567:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":665,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"4573:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":666,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"4577:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4586:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":663,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[671,701],"referencedDeclaration":701,"src":"4550:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4550:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":669,"nodeType":"ExpressionStatement","src":"4550:39:6"}]},"documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"4436:23:6","text":"@inheritdoc IERC721"},"functionSelector":"42842e0e","id":671,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4473:16:6","nodeType":"FunctionDefinition","parameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":656,"mutability":"mutable","name":"from","nameLocation":"4498:4:6","nodeType":"VariableDeclaration","scope":671,"src":"4490:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":658,"mutability":"mutable","name":"to","nameLocation":"4512:2:6","nodeType":"VariableDeclaration","scope":671,"src":"4504:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":657,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":660,"mutability":"mutable","name":"tokenId","nameLocation":"4524:7:6","nodeType":"VariableDeclaration","scope":671,"src":"4516:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":659,"name":"uint256","nodeType":"ElementaryTypeName","src":"4516:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4489:43:6"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[],"src":"4540:0:6"},"scope":1293,"src":"4464:132:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1355],"body":{"id":700,"nodeType":"Block","src":"4733:130:6","statements":[{"expression":{"arguments":[{"id":684,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"4756:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":685,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"4762:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":686,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"4766:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":683,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"4743:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4743:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":688,"nodeType":"ExpressionStatement","src":"4743:31:6"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":692,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"4818:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4818:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":694,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"4832:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":695,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"4838:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":696,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"4842:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":697,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"4851:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":689,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"4784:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1661_$","typeString":"type(library ERC721Utils)"}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4796:21:6","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1660,"src":"4784:33:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:72:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":699,"nodeType":"ExpressionStatement","src":"4784:72:6"}]},"documentation":{"id":672,"nodeType":"StructuredDocumentation","src":"4602:23:6","text":"@inheritdoc IERC721"},"functionSelector":"b88d4fde","id":701,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4639:16:6","nodeType":"FunctionDefinition","parameters":{"id":681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"from","nameLocation":"4664:4:6","nodeType":"VariableDeclaration","scope":701,"src":"4656:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":676,"mutability":"mutable","name":"to","nameLocation":"4678:2:6","nodeType":"VariableDeclaration","scope":701,"src":"4670:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":675,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":678,"mutability":"mutable","name":"tokenId","nameLocation":"4690:7:6","nodeType":"VariableDeclaration","scope":701,"src":"4682:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":677,"name":"uint256","nodeType":"ElementaryTypeName","src":"4682:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":680,"mutability":"mutable","name":"data","nameLocation":"4712:4:6","nodeType":"VariableDeclaration","scope":701,"src":"4699:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":679,"name":"bytes","nodeType":"ElementaryTypeName","src":"4699:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4655:62:6"},"returnParameters":{"id":682,"nodeType":"ParameterList","parameters":[],"src":"4733:0:6"},"scope":1293,"src":"4630:233:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":713,"nodeType":"Block","src":"5453:40:6","statements":[{"expression":{"baseExpression":{"id":709,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"5470:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":711,"indexExpression":{"id":710,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"5478:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5470:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":708,"id":712,"nodeType":"Return","src":"5463:23:6"}]},"documentation":{"id":702,"nodeType":"StructuredDocumentation","src":"4869:504:6","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":714,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5387:8:6","nodeType":"FunctionDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"tokenId","nameLocation":"5404:7:6","nodeType":"VariableDeclaration","scope":714,"src":"5396:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"5396:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5395:17:6"},"returnParameters":{"id":708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":714,"src":"5444:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":706,"name":"address","nodeType":"ElementaryTypeName","src":"5444:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5443:9:6"},"scope":1293,"src":"5378:115:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":726,"nodeType":"Block","src":"5688:48:6","statements":[{"expression":{"baseExpression":{"id":722,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"5705:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":724,"indexExpression":{"id":723,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"5721:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5705:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":721,"id":725,"nodeType":"Return","src":"5698:31:6"}]},"documentation":{"id":715,"nodeType":"StructuredDocumentation","src":"5499:105:6","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":727,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5618:12:6","nodeType":"FunctionDefinition","parameters":{"id":718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":717,"mutability":"mutable","name":"tokenId","nameLocation":"5639:7:6","nodeType":"VariableDeclaration","scope":727,"src":"5631:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":716,"name":"uint256","nodeType":"ElementaryTypeName","src":"5631:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5630:17:6"},"returnParameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":727,"src":"5679:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"5679:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5678:9:6"},"scope":1293,"src":"5609:127:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":762,"nodeType":"Block","src":"6156:163:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":739,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"6185:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6204:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6196:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":740,"name":"address","nodeType":"ElementaryTypeName","src":"6196:7:6","typeDescriptions":{}}},"id":743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6185:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":745,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"6223:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":746,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"6232:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6223:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":749,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"6260:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":750,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"6267:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":748,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"6243:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6243:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:52:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":754,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"6292:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":753,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"6279:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6279:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":756,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"6304:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6279:32:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:88:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":759,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6222:90:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6185:127:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":738,"id":761,"nodeType":"Return","src":"6166:146:6"}]},"documentation":{"id":728,"nodeType":"StructuredDocumentation","src":"5742:300:6","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":763,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6056:13:6","nodeType":"FunctionDefinition","parameters":{"id":735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":730,"mutability":"mutable","name":"owner","nameLocation":"6078:5:6","nodeType":"VariableDeclaration","scope":763,"src":"6070:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":729,"name":"address","nodeType":"ElementaryTypeName","src":"6070:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":732,"mutability":"mutable","name":"spender","nameLocation":"6093:7:6","nodeType":"VariableDeclaration","scope":763,"src":"6085:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"6085:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":734,"mutability":"mutable","name":"tokenId","nameLocation":"6110:7:6","nodeType":"VariableDeclaration","scope":763,"src":"6102:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":733,"name":"uint256","nodeType":"ElementaryTypeName","src":"6102:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6069:49:6"},"returnParameters":{"id":738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":763,"src":"6150:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":736,"name":"bool","nodeType":"ElementaryTypeName","src":"6150:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6149:6:6"},"scope":1293,"src":"6047:272:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":799,"nodeType":"Block","src":"6848:271:6","statements":[{"condition":{"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6862:39:6","subExpression":{"arguments":[{"id":774,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"6877:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":775,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"6884:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":776,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"6893:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":773,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"6863:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6863:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":798,"nodeType":"IfStatement","src":"6858:255:6","trueBody":{"id":797,"nodeType":"Block","src":"6903:210:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":779,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"6921:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6938:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6930:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":780,"name":"address","nodeType":"ElementaryTypeName","src":"6930:7:6","typeDescriptions":{}}},"id":783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6930:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6921:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":795,"nodeType":"Block","src":"7019:84:6","statements":[{"errorCall":{"arguments":[{"id":791,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"7071:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":792,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"7080:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":790,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"7044:26:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7044:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":794,"nodeType":"RevertStatement","src":"7037:51:6"}]},"id":796,"nodeType":"IfStatement","src":"6917:186:6","trueBody":{"id":789,"nodeType":"Block","src":"6942:71:6","statements":[{"errorCall":{"arguments":[{"id":786,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"6990:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":785,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"6967:22:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":788,"nodeType":"RevertStatement","src":"6960:38:6"}]}}]}}]},"documentation":{"id":764,"nodeType":"StructuredDocumentation","src":"6325:421:6","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":800,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"6760:16:6","nodeType":"FunctionDefinition","parameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":766,"mutability":"mutable","name":"owner","nameLocation":"6785:5:6","nodeType":"VariableDeclaration","scope":800,"src":"6777:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":765,"name":"address","nodeType":"ElementaryTypeName","src":"6777:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":768,"mutability":"mutable","name":"spender","nameLocation":"6800:7:6","nodeType":"VariableDeclaration","scope":800,"src":"6792:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":767,"name":"address","nodeType":"ElementaryTypeName","src":"6792:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":770,"mutability":"mutable","name":"tokenId","nameLocation":"6817:7:6","nodeType":"VariableDeclaration","scope":800,"src":"6809:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":769,"name":"uint256","nodeType":"ElementaryTypeName","src":"6809:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6776:49:6"},"returnParameters":{"id":772,"nodeType":"ParameterList","parameters":[],"src":"6848:0:6"},"scope":1293,"src":"6751:368:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":815,"nodeType":"Block","src":"7836:78:6","statements":[{"id":814,"nodeType":"UncheckedBlock","src":"7846:62:6","statements":[{"expression":{"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":808,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"7870:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":810,"indexExpression":{"id":809,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"7880:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7870:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"7892:5:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"7870:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":813,"nodeType":"ExpressionStatement","src":"7870:27:6"}]}]},"documentation":{"id":801,"nodeType":"StructuredDocumentation","src":"7125:631:6","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":816,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"7770:16:6","nodeType":"FunctionDefinition","parameters":{"id":806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"account","nameLocation":"7795:7:6","nodeType":"VariableDeclaration","scope":816,"src":"7787:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":802,"name":"address","nodeType":"ElementaryTypeName","src":"7787:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":805,"mutability":"mutable","name":"value","nameLocation":"7812:5:6","nodeType":"VariableDeclaration","scope":816,"src":"7804:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":804,"name":"uint128","nodeType":"ElementaryTypeName","src":"7804:7:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"7786:32:6"},"returnParameters":{"id":807,"nodeType":"ParameterList","parameters":[],"src":"7836:0:6"},"scope":1293,"src":"7761:153:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":905,"nodeType":"Block","src":"8602:700:6","statements":[{"assignments":[829],"declarations":[{"constant":false,"id":829,"mutability":"mutable","name":"from","nameLocation":"8620:4:6","nodeType":"VariableDeclaration","scope":905,"src":"8612:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"8612:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":833,"initialValue":{"arguments":[{"id":831,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"8636:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":830,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"8627:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8627:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8612:32:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":834,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"8704:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8720:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8712:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":835,"name":"address","nodeType":"ElementaryTypeName","src":"8712:7:6","typeDescriptions":{}}},"id":838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8712:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8704:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":847,"nodeType":"IfStatement","src":"8700:86:6","trueBody":{"id":846,"nodeType":"Block","src":"8724:62:6","statements":[{"expression":{"arguments":[{"id":841,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"8755:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":842,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"8761:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":843,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"8767:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":840,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"8738:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8738:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":845,"nodeType":"ExpressionStatement","src":"8738:37:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":848,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"8830:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8846:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8838:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":849,"name":"address","nodeType":"ElementaryTypeName","src":"8838:7:6","typeDescriptions":{}}},"id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8838:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8830:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":875,"nodeType":"IfStatement","src":"8826:256:6","trueBody":{"id":874,"nodeType":"Block","src":"8850:232:6","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8963:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8955:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":855,"name":"address","nodeType":"ElementaryTypeName","src":"8955:7:6","typeDescriptions":{}}},"id":858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8955:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":859,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"8967:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8984:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8976:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"8976:7:6","typeDescriptions":{}}},"id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8976:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8988:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":854,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1160,1226],"referencedDeclaration":1226,"src":"8946:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8946:48:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":866,"nodeType":"ExpressionStatement","src":"8946:48:6"},{"id":873,"nodeType":"UncheckedBlock","src":"9009:63:6","statements":[{"expression":{"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":867,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"9037:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":869,"indexExpression":{"id":868,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"9047:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9037:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9037:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":872,"nodeType":"ExpressionStatement","src":"9037:20:6"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":876,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"9096:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9102:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"9102:7:6","typeDescriptions":{}}},"id":880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9102:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9096:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":890,"nodeType":"IfStatement","src":"9092:107:6","trueBody":{"id":889,"nodeType":"Block","src":"9114:85:6","statements":[{"id":888,"nodeType":"UncheckedBlock","src":"9128:61:6","statements":[{"expression":{"id":886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":882,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"9156:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":884,"indexExpression":{"id":883,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"9166:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9156:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9173:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9156:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":887,"nodeType":"ExpressionStatement","src":"9156:18:6"}]}]}},{"expression":{"id":895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":891,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"9209:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":893,"indexExpression":{"id":892,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"9217:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9209:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":894,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"9228:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9209:21:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":896,"nodeType":"ExpressionStatement","src":"9209:21:6"},{"eventCall":{"arguments":[{"id":898,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"9255:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":899,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"9261:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":900,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"9265:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":897,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"9246:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9246:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":902,"nodeType":"EmitStatement","src":"9241:32:6"},{"expression":{"id":903,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"9291:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":827,"id":904,"nodeType":"Return","src":"9284:11:6"}]},"documentation":{"id":817,"nodeType":"StructuredDocumentation","src":"7920:582:6","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":906,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8516:7:6","nodeType":"FunctionDefinition","parameters":{"id":824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":819,"mutability":"mutable","name":"to","nameLocation":"8532:2:6","nodeType":"VariableDeclaration","scope":906,"src":"8524:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"8524:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":821,"mutability":"mutable","name":"tokenId","nameLocation":"8544:7:6","nodeType":"VariableDeclaration","scope":906,"src":"8536:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":820,"name":"uint256","nodeType":"ElementaryTypeName","src":"8536:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":823,"mutability":"mutable","name":"auth","nameLocation":"8561:4:6","nodeType":"VariableDeclaration","scope":906,"src":"8553:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":822,"name":"address","nodeType":"ElementaryTypeName","src":"8553:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8523:43:6"},"returnParameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":906,"src":"8593:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":825,"name":"address","nodeType":"ElementaryTypeName","src":"8593:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8592:9:6"},"scope":1293,"src":"8507:795:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":955,"nodeType":"Block","src":"9677:274:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":914,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"9691:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9705:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9697:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":915,"name":"address","nodeType":"ElementaryTypeName","src":"9697:7:6","typeDescriptions":{}}},"id":918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9697:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9691:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":928,"nodeType":"IfStatement","src":"9687:87:6","trueBody":{"id":927,"nodeType":"Block","src":"9709:65:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9760:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9752:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":921,"name":"address","nodeType":"ElementaryTypeName","src":"9752:7:6","typeDescriptions":{}}},"id":924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9752:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":920,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"9730:21:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9730:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":926,"nodeType":"RevertStatement","src":"9723:40:6"}]}},{"assignments":[930],"declarations":[{"constant":false,"id":930,"mutability":"mutable","name":"previousOwner","nameLocation":"9791:13:6","nodeType":"VariableDeclaration","scope":955,"src":"9783:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":929,"name":"address","nodeType":"ElementaryTypeName","src":"9783:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":939,"initialValue":{"arguments":[{"id":932,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"9815:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":933,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"9819:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9836:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9828:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"9828:7:6","typeDescriptions":{}}},"id":937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9828:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":931,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"9807:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9807:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9783:56:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":940,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"9853:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9878:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9870:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":941,"name":"address","nodeType":"ElementaryTypeName","src":"9870:7:6","typeDescriptions":{}}},"id":944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9870:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9853:27:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":954,"nodeType":"IfStatement","src":"9849:96:6","trueBody":{"id":953,"nodeType":"Block","src":"9882:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9931:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9923:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":947,"name":"address","nodeType":"ElementaryTypeName","src":"9923:7:6","typeDescriptions":{}}},"id":950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9923:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":946,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"9903:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":952,"nodeType":"RevertStatement","src":"9896:38:6"}]}}]},"documentation":{"id":907,"nodeType":"StructuredDocumentation","src":"9308:311:6","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":956,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9633:5:6","nodeType":"FunctionDefinition","parameters":{"id":912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"mutability":"mutable","name":"to","nameLocation":"9647:2:6","nodeType":"VariableDeclaration","scope":956,"src":"9639:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"9639:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":911,"mutability":"mutable","name":"tokenId","nameLocation":"9659:7:6","nodeType":"VariableDeclaration","scope":956,"src":"9651:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":910,"name":"uint256","nodeType":"ElementaryTypeName","src":"9651:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9638:29:6"},"returnParameters":{"id":913,"nodeType":"ParameterList","parameters":[],"src":"9677:0:6"},"scope":1293,"src":"9624:327:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":970,"nodeType":"Block","src":"10359:43:6","statements":[{"expression":{"arguments":[{"id":965,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"10379:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":966,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"10383:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10392:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":964,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[971,1001],"referencedDeclaration":1001,"src":"10369:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10369:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":969,"nodeType":"ExpressionStatement","src":"10369:26:6"}]},"documentation":{"id":957,"nodeType":"StructuredDocumentation","src":"9957:340:6","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":971,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10311:9:6","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":959,"mutability":"mutable","name":"to","nameLocation":"10329:2:6","nodeType":"VariableDeclaration","scope":971,"src":"10321:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"10321:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"tokenId","nameLocation":"10341:7:6","nodeType":"VariableDeclaration","scope":971,"src":"10333:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"10333:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10320:29:6"},"returnParameters":{"id":963,"nodeType":"ParameterList","parameters":[],"src":"10359:0:6"},"scope":1293,"src":"10302:100:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1000,"nodeType":"Block","src":"10707:123:6","statements":[{"expression":{"arguments":[{"id":982,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"10723:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":983,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"10727:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":981,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"10717:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10717:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":985,"nodeType":"ExpressionStatement","src":"10717:18:6"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":989,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"10779:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10779:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10801:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10793:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":991,"name":"address","nodeType":"ElementaryTypeName","src":"10793:7:6","typeDescriptions":{}}},"id":994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10793:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":995,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"10805:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":996,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"10809:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":997,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"10818:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":986,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"10745:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1661_$","typeString":"type(library ERC721Utils)"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10757:21:6","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1660,"src":"10745:33:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10745:78:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":999,"nodeType":"ExpressionStatement","src":"10745:78:6"}]},"documentation":{"id":972,"nodeType":"StructuredDocumentation","src":"10408:210:6","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1001,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10632:9:6","nodeType":"FunctionDefinition","parameters":{"id":979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":974,"mutability":"mutable","name":"to","nameLocation":"10650:2:6","nodeType":"VariableDeclaration","scope":1001,"src":"10642:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":973,"name":"address","nodeType":"ElementaryTypeName","src":"10642:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":976,"mutability":"mutable","name":"tokenId","nameLocation":"10662:7:6","nodeType":"VariableDeclaration","scope":1001,"src":"10654:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":975,"name":"uint256","nodeType":"ElementaryTypeName","src":"10654:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":978,"mutability":"mutable","name":"data","nameLocation":"10684:4:6","nodeType":"VariableDeclaration","scope":1001,"src":"10671:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":977,"name":"bytes","nodeType":"ElementaryTypeName","src":"10671:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10641:48:6"},"returnParameters":{"id":980,"nodeType":"ParameterList","parameters":[],"src":"10707:0:6"},"scope":1293,"src":"10623:207:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1033,"nodeType":"Block","src":"11197:186:6","statements":[{"assignments":[1008],"declarations":[{"constant":false,"id":1008,"mutability":"mutable","name":"previousOwner","nameLocation":"11215:13:6","nodeType":"VariableDeclaration","scope":1033,"src":"11207:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1007,"name":"address","nodeType":"ElementaryTypeName","src":"11207:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1020,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":1012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11247:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11239:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1010,"name":"address","nodeType":"ElementaryTypeName","src":"11239:7:6","typeDescriptions":{}}},"id":1013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11239:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1014,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"11251:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11268:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11260:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1015,"name":"address","nodeType":"ElementaryTypeName","src":"11260:7:6","typeDescriptions":{}}},"id":1018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11260:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1009,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"11231:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11231:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11207:64:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1021,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"11285:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11310:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11302:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1022,"name":"address","nodeType":"ElementaryTypeName","src":"11302:7:6","typeDescriptions":{}}},"id":1025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11302:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11285:27:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1032,"nodeType":"IfStatement","src":"11281:96:6","trueBody":{"id":1031,"nodeType":"Block","src":"11314:63:6","statements":[{"errorCall":{"arguments":[{"id":1028,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"11358:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1027,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"11335:22:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11335:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1030,"nodeType":"RevertStatement","src":"11328:38:6"}]}}]},"documentation":{"id":1002,"nodeType":"StructuredDocumentation","src":"10836:315:6","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1034,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11165:5:6","nodeType":"FunctionDefinition","parameters":{"id":1005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1004,"mutability":"mutable","name":"tokenId","nameLocation":"11179:7:6","nodeType":"VariableDeclaration","scope":1034,"src":"11171:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1003,"name":"uint256","nodeType":"ElementaryTypeName","src":"11171:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11170:17:6"},"returnParameters":{"id":1006,"nodeType":"ParameterList","parameters":[],"src":"11197:0:6"},"scope":1293,"src":"11156:227:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1093,"nodeType":"Block","src":"11778:389:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1044,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"11792:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11806:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11798:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"11798:7:6","typeDescriptions":{}}},"id":1048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11798:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11792:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1058,"nodeType":"IfStatement","src":"11788:87:6","trueBody":{"id":1057,"nodeType":"Block","src":"11810:65:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11861:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11853:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1051,"name":"address","nodeType":"ElementaryTypeName","src":"11853:7:6","typeDescriptions":{}}},"id":1054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11853:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1050,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"11831:21:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11831:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1056,"nodeType":"RevertStatement","src":"11824:40:6"}]}},{"assignments":[1060],"declarations":[{"constant":false,"id":1060,"mutability":"mutable","name":"previousOwner","nameLocation":"11892:13:6","nodeType":"VariableDeclaration","scope":1093,"src":"11884:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1059,"name":"address","nodeType":"ElementaryTypeName","src":"11884:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1069,"initialValue":{"arguments":[{"id":1062,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"11916:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1063,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"11920:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11937:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11929:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1064,"name":"address","nodeType":"ElementaryTypeName","src":"11929:7:6","typeDescriptions":{}}},"id":1067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11929:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1061,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"11908:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11908:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11884:56:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1070,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"11954:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11979:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11971:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1071,"name":"address","nodeType":"ElementaryTypeName","src":"11971:7:6","typeDescriptions":{}}},"id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11971:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11954:27:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1081,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"12056:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1082,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"12073:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12056:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1091,"nodeType":"IfStatement","src":"12052:109:6","trueBody":{"id":1090,"nodeType":"Block","src":"12079:82:6","statements":[{"errorCall":{"arguments":[{"id":1085,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"12121:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1086,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"12127:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1087,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"12136:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1084,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"12100:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12100:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1089,"nodeType":"RevertStatement","src":"12093:57:6"}]}},"id":1092,"nodeType":"IfStatement","src":"11950:211:6","trueBody":{"id":1080,"nodeType":"Block","src":"11983:63:6","statements":[{"errorCall":{"arguments":[{"id":1077,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"12027:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1076,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"12004:22:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1079,"nodeType":"RevertStatement","src":"11997:38:6"}]}}]},"documentation":{"id":1035,"nodeType":"StructuredDocumentation","src":"11389:313:6","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1094,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11716:9:6","nodeType":"FunctionDefinition","parameters":{"id":1042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"from","nameLocation":"11734:4:6","nodeType":"VariableDeclaration","scope":1094,"src":"11726:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1036,"name":"address","nodeType":"ElementaryTypeName","src":"11726:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1039,"mutability":"mutable","name":"to","nameLocation":"11748:2:6","nodeType":"VariableDeclaration","scope":1094,"src":"11740:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1038,"name":"address","nodeType":"ElementaryTypeName","src":"11740:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1041,"mutability":"mutable","name":"tokenId","nameLocation":"11760:7:6","nodeType":"VariableDeclaration","scope":1094,"src":"11752:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1040,"name":"uint256","nodeType":"ElementaryTypeName","src":"11752:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11725:43:6"},"returnParameters":{"id":1043,"nodeType":"ParameterList","parameters":[],"src":"11778:0:6"},"scope":1293,"src":"11707:460:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1111,"nodeType":"Block","src":"13176:53:6","statements":[{"expression":{"arguments":[{"id":1105,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"13200:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1106,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"13206:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1107,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"13210:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13219:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1104,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1112,1142],"referencedDeclaration":1142,"src":"13186:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13186:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1110,"nodeType":"ExpressionStatement","src":"13186:36:6"}]},"documentation":{"id":1095,"nodeType":"StructuredDocumentation","src":"12173:923:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1112,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13110:13:6","nodeType":"FunctionDefinition","parameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1097,"mutability":"mutable","name":"from","nameLocation":"13132:4:6","nodeType":"VariableDeclaration","scope":1112,"src":"13124:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1096,"name":"address","nodeType":"ElementaryTypeName","src":"13124:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1099,"mutability":"mutable","name":"to","nameLocation":"13146:2:6","nodeType":"VariableDeclaration","scope":1112,"src":"13138:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1098,"name":"address","nodeType":"ElementaryTypeName","src":"13138:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1101,"mutability":"mutable","name":"tokenId","nameLocation":"13158:7:6","nodeType":"VariableDeclaration","scope":1112,"src":"13150:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1100,"name":"uint256","nodeType":"ElementaryTypeName","src":"13150:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13123:43:6"},"returnParameters":{"id":1103,"nodeType":"ParameterList","parameters":[],"src":"13176:0:6"},"scope":1293,"src":"13101:128:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1141,"nodeType":"Block","src":"13568:127:6","statements":[{"expression":{"arguments":[{"id":1125,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"13588:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1126,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"13594:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1127,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"13598:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1124,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"13578:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13578:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1129,"nodeType":"ExpressionStatement","src":"13578:28:6"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1133,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"13650:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13650:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1135,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"13664:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1136,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"13670:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1137,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"13674:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1138,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"13683:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1130,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"13616:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1661_$","typeString":"type(library ERC721Utils)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13628:21:6","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1660,"src":"13616:33:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13616:72:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1140,"nodeType":"ExpressionStatement","src":"13616:72:6"}]},"documentation":{"id":1113,"nodeType":"StructuredDocumentation","src":"13235:226:6","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1142,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13475:13:6","nodeType":"FunctionDefinition","parameters":{"id":1122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"mutability":"mutable","name":"from","nameLocation":"13497:4:6","nodeType":"VariableDeclaration","scope":1142,"src":"13489:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"13489:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"to","nameLocation":"13511:2:6","nodeType":"VariableDeclaration","scope":1142,"src":"13503:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1116,"name":"address","nodeType":"ElementaryTypeName","src":"13503:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1119,"mutability":"mutable","name":"tokenId","nameLocation":"13523:7:6","nodeType":"VariableDeclaration","scope":1142,"src":"13515:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1118,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1121,"mutability":"mutable","name":"data","nameLocation":"13545:4:6","nodeType":"VariableDeclaration","scope":1142,"src":"13532:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1120,"name":"bytes","nodeType":"ElementaryTypeName","src":"13532:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13488:62:6"},"returnParameters":{"id":1123,"nodeType":"ParameterList","parameters":[],"src":"13568:0:6"},"scope":1293,"src":"13466:229:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1159,"nodeType":"Block","src":"14208:50:6","statements":[{"expression":{"arguments":[{"id":1153,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"14227:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1154,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"14231:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1155,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"14240:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14246:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1152,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1160,1226],"referencedDeclaration":1226,"src":"14218:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14218:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1158,"nodeType":"ExpressionStatement","src":"14218:33:6"}]},"documentation":{"id":1143,"nodeType":"StructuredDocumentation","src":"13701:432:6","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1160,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14147:8:6","nodeType":"FunctionDefinition","parameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"to","nameLocation":"14164:2:6","nodeType":"VariableDeclaration","scope":1160,"src":"14156:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1144,"name":"address","nodeType":"ElementaryTypeName","src":"14156:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"tokenId","nameLocation":"14176:7:6","nodeType":"VariableDeclaration","scope":1160,"src":"14168:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1146,"name":"uint256","nodeType":"ElementaryTypeName","src":"14168:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"auth","nameLocation":"14193:4:6","nodeType":"VariableDeclaration","scope":1160,"src":"14185:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1148,"name":"address","nodeType":"ElementaryTypeName","src":"14185:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14155:43:6"},"returnParameters":{"id":1151,"nodeType":"ParameterList","parameters":[],"src":"14208:0:6"},"scope":1293,"src":"14138:120:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1225,"nodeType":"Block","src":"14534:568:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1172,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"14600:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1173,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"14613:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14629:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14621:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1174,"name":"address","nodeType":"ElementaryTypeName","src":"14621:7:6","typeDescriptions":{}}},"id":1177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14621:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14613:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14600:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1218,"nodeType":"IfStatement","src":"14596:460:6","trueBody":{"id":1217,"nodeType":"Block","src":"14633:423:6","statements":[{"assignments":[1181],"declarations":[{"constant":false,"id":1181,"mutability":"mutable","name":"owner","nameLocation":"14655:5:6","nodeType":"VariableDeclaration","scope":1217,"src":"14647:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1180,"name":"address","nodeType":"ElementaryTypeName","src":"14647:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1185,"initialValue":{"arguments":[{"id":1183,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"14677:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1182,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"14663:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14663:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14647:38:6"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1186,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"14813:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14829:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14821:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1187,"name":"address","nodeType":"ElementaryTypeName","src":"14821:7:6","typeDescriptions":{}}},"id":1190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14821:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14813:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1192,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"14835:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1193,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"14844:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14835:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14852:30:6","subExpression":{"arguments":[{"id":1197,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"14870:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1198,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"14877:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1196,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"14853:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14853:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:69:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1207,"nodeType":"IfStatement","src":"14809:142:6","trueBody":{"id":1206,"nodeType":"Block","src":"14884:67:6","statements":[{"errorCall":{"arguments":[{"id":1203,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"14931:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1202,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"14909:21:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14909:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1205,"nodeType":"RevertStatement","src":"14902:34:6"}]}},{"condition":{"id":1208,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"14969:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1216,"nodeType":"IfStatement","src":"14965:81:6","trueBody":{"id":1215,"nodeType":"Block","src":"14980:66:6","statements":[{"eventCall":{"arguments":[{"id":1210,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"15012:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1211,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"15019:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1212,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"15023:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1209,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"15003:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15003:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1214,"nodeType":"EmitStatement","src":"14998:33:6"}]}}]}},{"expression":{"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1219,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"15066:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1221,"indexExpression":{"id":1220,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"15082:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15066:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1222,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"15093:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15066:29:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1224,"nodeType":"ExpressionStatement","src":"15066:29:6"}]},"documentation":{"id":1161,"nodeType":"StructuredDocumentation","src":"14264:171:6","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1226,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14449:8:6","nodeType":"FunctionDefinition","parameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1163,"mutability":"mutable","name":"to","nameLocation":"14466:2:6","nodeType":"VariableDeclaration","scope":1226,"src":"14458:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1162,"name":"address","nodeType":"ElementaryTypeName","src":"14458:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1165,"mutability":"mutable","name":"tokenId","nameLocation":"14478:7:6","nodeType":"VariableDeclaration","scope":1226,"src":"14470:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1164,"name":"uint256","nodeType":"ElementaryTypeName","src":"14470:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1167,"mutability":"mutable","name":"auth","nameLocation":"14495:4:6","nodeType":"VariableDeclaration","scope":1226,"src":"14487:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1166,"name":"address","nodeType":"ElementaryTypeName","src":"14487:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"emitEvent","nameLocation":"14506:9:6","nodeType":"VariableDeclaration","scope":1226,"src":"14501:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1168,"name":"bool","nodeType":"ElementaryTypeName","src":"14501:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14457:59:6"},"returnParameters":{"id":1171,"nodeType":"ParameterList","parameters":[],"src":"14534:0:6"},"scope":1293,"src":"14440:662:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1262,"nodeType":"Block","src":"15404:219:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1236,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"15418:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15438:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15430:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1237,"name":"address","nodeType":"ElementaryTypeName","src":"15430:7:6","typeDescriptions":{}}},"id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15430:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15418:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1247,"nodeType":"IfStatement","src":"15414:91:6","trueBody":{"id":1246,"nodeType":"Block","src":"15442:63:6","statements":[{"errorCall":{"arguments":[{"id":1243,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"15485:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1242,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"15463:21:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15463:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1245,"nodeType":"RevertStatement","src":"15456:38:6"}]}},{"expression":{"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1248,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"15514:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1251,"indexExpression":{"id":1249,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"15533:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15514:25:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1252,"indexExpression":{"id":1250,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"15540:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15514:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1253,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"15552:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15514:46:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1255,"nodeType":"ExpressionStatement","src":"15514:46:6"},{"eventCall":{"arguments":[{"id":1257,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"15590:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1258,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"15597:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1259,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"15607:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1256,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"15575:14:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15575:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1261,"nodeType":"EmitStatement","src":"15570:46:6"}]},"documentation":{"id":1227,"nodeType":"StructuredDocumentation","src":"15108:198:6","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1263,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15320:18:6","nodeType":"FunctionDefinition","parameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1229,"mutability":"mutable","name":"owner","nameLocation":"15347:5:6","nodeType":"VariableDeclaration","scope":1263,"src":"15339:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1228,"name":"address","nodeType":"ElementaryTypeName","src":"15339:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1231,"mutability":"mutable","name":"operator","nameLocation":"15362:8:6","nodeType":"VariableDeclaration","scope":1263,"src":"15354:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1230,"name":"address","nodeType":"ElementaryTypeName","src":"15354:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1233,"mutability":"mutable","name":"approved","nameLocation":"15377:8:6","nodeType":"VariableDeclaration","scope":1263,"src":"15372:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1232,"name":"bool","nodeType":"ElementaryTypeName","src":"15372:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15338:48:6"},"returnParameters":{"id":1235,"nodeType":"ParameterList","parameters":[],"src":"15404:0:6"},"scope":1293,"src":"15311:312:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1291,"nodeType":"Block","src":"15930:169:6","statements":[{"assignments":[1272],"declarations":[{"constant":false,"id":1272,"mutability":"mutable","name":"owner","nameLocation":"15948:5:6","nodeType":"VariableDeclaration","scope":1291,"src":"15940:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1271,"name":"address","nodeType":"ElementaryTypeName","src":"15940:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1276,"initialValue":{"arguments":[{"id":1274,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"15965:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1273,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"15956:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15956:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15940:33:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1277,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"15987:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16004:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15996:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1278,"name":"address","nodeType":"ElementaryTypeName","src":"15996:7:6","typeDescriptions":{}}},"id":1281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15996:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15987:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1288,"nodeType":"IfStatement","src":"15983:88:6","trueBody":{"id":1287,"nodeType":"Block","src":"16008:63:6","statements":[{"errorCall":{"arguments":[{"id":1284,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"16052:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1283,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"16029:22:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16029:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1286,"nodeType":"RevertStatement","src":"16022:38:6"}]}},{"expression":{"id":1289,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"16087:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1270,"id":1290,"nodeType":"Return","src":"16080:12:6"}]},"documentation":{"id":1264,"nodeType":"StructuredDocumentation","src":"15629:224:6","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1292,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"15867:13:6","nodeType":"FunctionDefinition","parameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"tokenId","nameLocation":"15889:7:6","nodeType":"VariableDeclaration","scope":1292,"src":"15881:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1265,"name":"uint256","nodeType":"ElementaryTypeName","src":"15881:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15880:17:6"},"returnParameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1292,"src":"15921:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"15921:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15920:9:6"},"scope":1293,"src":"15858:241:6","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1294,"src":"775:15326:6","usedErrors":[247,252,261,266,271,278,283,288],"usedEvents":[1309,1318,1327]}],"src":"107:15995:6"},"id":6},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[3250],"IERC721":[1410]},"id":1411,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1295,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"108:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1297,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1411,"sourceUnit":3251,"src":"134:62:7","symbolAliases":[{"foreign":{"id":1296,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"142:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1299,"name":"IERC165","nameLocations":["288:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":3250,"src":"288:7:7"},"id":1300,"nodeType":"InheritanceSpecifier","src":"288:7:7"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1298,"nodeType":"StructuredDocumentation","src":"198:68:7","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":1410,"linearizedBaseContracts":[1410,3250],"name":"IERC721","nameLocation":"277:7:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1301,"nodeType":"StructuredDocumentation","src":"302:88:7","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1309,"name":"Transfer","nameLocation":"401:8:7","nodeType":"EventDefinition","parameters":{"id":1308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1303,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:7","nodeType":"VariableDeclaration","scope":1309,"src":"410:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1302,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1305,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:7","nodeType":"VariableDeclaration","scope":1309,"src":"432:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1304,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1307,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:7","nodeType":"VariableDeclaration","scope":1309,"src":"452:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1306,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:7"},"src":"395:82:7"},{"anonymous":false,"documentation":{"id":1310,"nodeType":"StructuredDocumentation","src":"483:94:7","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1318,"name":"Approval","nameLocation":"588:8:7","nodeType":"EventDefinition","parameters":{"id":1317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1312,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:7","nodeType":"VariableDeclaration","scope":1318,"src":"597:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1311,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1314,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:7","nodeType":"VariableDeclaration","scope":1318,"src":"620:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1313,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1316,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:7","nodeType":"VariableDeclaration","scope":1318,"src":"646:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1315,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:7"},"src":"582:89:7"},{"anonymous":false,"documentation":{"id":1319,"nodeType":"StructuredDocumentation","src":"677:117:7","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1327,"name":"ApprovalForAll","nameLocation":"805:14:7","nodeType":"EventDefinition","parameters":{"id":1326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:7","nodeType":"VariableDeclaration","scope":1327,"src":"820:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1320,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1323,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:7","nodeType":"VariableDeclaration","scope":1327,"src":"843:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1322,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1325,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:7","nodeType":"VariableDeclaration","scope":1327,"src":"869:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1324,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:7"},"src":"799:85:7"},{"documentation":{"id":1328,"nodeType":"StructuredDocumentation","src":"890:76:7","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1335,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:7","nodeType":"FunctionDefinition","parameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"mutability":"mutable","name":"owner","nameLocation":"998:5:7","nodeType":"VariableDeclaration","scope":1335,"src":"990:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1329,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:7"},"returnParameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1333,"mutability":"mutable","name":"balance","nameLocation":"1036:7:7","nodeType":"VariableDeclaration","scope":1335,"src":"1028:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1332,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:7"},"scope":1410,"src":"971:74:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1336,"nodeType":"StructuredDocumentation","src":"1051:131:7","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1343,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:7","nodeType":"FunctionDefinition","parameters":{"id":1339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1338,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:7","nodeType":"VariableDeclaration","scope":1343,"src":"1204:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1337,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:7"},"returnParameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1341,"mutability":"mutable","name":"owner","nameLocation":"1252:5:7","nodeType":"VariableDeclaration","scope":1343,"src":"1244:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1340,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:7"},"scope":1410,"src":"1187:72:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1344,"nodeType":"StructuredDocumentation","src":"1265:565:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1355,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:7","nodeType":"FunctionDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"mutability":"mutable","name":"from","nameLocation":"1869:4:7","nodeType":"VariableDeclaration","scope":1355,"src":"1861:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1348,"mutability":"mutable","name":"to","nameLocation":"1883:2:7","nodeType":"VariableDeclaration","scope":1355,"src":"1875:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1347,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1350,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:7","nodeType":"VariableDeclaration","scope":1355,"src":"1887:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1349,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"data","nameLocation":"1919:4:7","nodeType":"VariableDeclaration","scope":1355,"src":"1904:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1351,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:7"},"returnParameters":{"id":1354,"nodeType":"ParameterList","parameters":[],"src":"1933:0:7"},"scope":1410,"src":"1835:99:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1356,"nodeType":"StructuredDocumentation","src":"1940:706:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1365,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:7","nodeType":"FunctionDefinition","parameters":{"id":1363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1358,"mutability":"mutable","name":"from","nameLocation":"2685:4:7","nodeType":"VariableDeclaration","scope":1365,"src":"2677:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1357,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1360,"mutability":"mutable","name":"to","nameLocation":"2699:2:7","nodeType":"VariableDeclaration","scope":1365,"src":"2691:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1359,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1362,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:7","nodeType":"VariableDeclaration","scope":1365,"src":"2703:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1361,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:7"},"returnParameters":{"id":1364,"nodeType":"ParameterList","parameters":[],"src":"2728:0:7"},"scope":1410,"src":"2651:78:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1366,"nodeType":"StructuredDocumentation","src":"2735:733:7","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1375,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:7","nodeType":"FunctionDefinition","parameters":{"id":1373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1368,"mutability":"mutable","name":"from","nameLocation":"3503:4:7","nodeType":"VariableDeclaration","scope":1375,"src":"3495:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1367,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1370,"mutability":"mutable","name":"to","nameLocation":"3517:2:7","nodeType":"VariableDeclaration","scope":1375,"src":"3509:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1369,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1372,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:7","nodeType":"VariableDeclaration","scope":1375,"src":"3521:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1371,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:7"},"returnParameters":{"id":1374,"nodeType":"ParameterList","parameters":[],"src":"3546:0:7"},"scope":1410,"src":"3473:74:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1376,"nodeType":"StructuredDocumentation","src":"3553:452:7","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1383,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:7","nodeType":"FunctionDefinition","parameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1378,"mutability":"mutable","name":"to","nameLocation":"4035:2:7","nodeType":"VariableDeclaration","scope":1383,"src":"4027:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1377,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1380,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:7","nodeType":"VariableDeclaration","scope":1383,"src":"4039:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1379,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:7"},"returnParameters":{"id":1382,"nodeType":"ParameterList","parameters":[],"src":"4064:0:7"},"scope":1410,"src":"4010:55:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1384,"nodeType":"StructuredDocumentation","src":"4071:315:7","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1391,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:7","nodeType":"FunctionDefinition","parameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1386,"mutability":"mutable","name":"operator","nameLocation":"4426:8:7","nodeType":"VariableDeclaration","scope":1391,"src":"4418:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1385,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1388,"mutability":"mutable","name":"approved","nameLocation":"4441:8:7","nodeType":"VariableDeclaration","scope":1391,"src":"4436:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1387,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:7"},"returnParameters":{"id":1390,"nodeType":"ParameterList","parameters":[],"src":"4459:0:7"},"scope":1410,"src":"4391:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1392,"nodeType":"StructuredDocumentation","src":"4466:139:7","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1399,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:7","nodeType":"FunctionDefinition","parameters":{"id":1395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1394,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:7","nodeType":"VariableDeclaration","scope":1399,"src":"4631:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1393,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:7"},"returnParameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"operator","nameLocation":"4679:8:7","nodeType":"VariableDeclaration","scope":1399,"src":"4671:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1396,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:7"},"scope":1410,"src":"4610:79:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1400,"nodeType":"StructuredDocumentation","src":"4695:138:7","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1409,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:7","nodeType":"FunctionDefinition","parameters":{"id":1405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1402,"mutability":"mutable","name":"owner","nameLocation":"4872:5:7","nodeType":"VariableDeclaration","scope":1409,"src":"4864:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1401,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1404,"mutability":"mutable","name":"operator","nameLocation":"4887:8:7","nodeType":"VariableDeclaration","scope":1409,"src":"4879:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1403,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:7"},"returnParameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1409,"src":"4920:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1406,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:7"},"scope":1410,"src":"4838:88:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1411,"src":"267:4661:7","usedErrors":[],"usedEvents":[1309,1318,1327]}],"src":"108:4821:7"},"id":7},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1428]},"id":1429,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1412,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"116:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1413,"nodeType":"StructuredDocumentation","src":"142:154:8","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":1428,"linearizedBaseContracts":[1428],"name":"IERC721Receiver","nameLocation":"307:15:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1414,"nodeType":"StructuredDocumentation","src":"329:500:8","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1427,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:8","nodeType":"FunctionDefinition","parameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1416,"mutability":"mutable","name":"operator","nameLocation":"877:8:8","nodeType":"VariableDeclaration","scope":1427,"src":"869:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1415,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1418,"mutability":"mutable","name":"from","nameLocation":"903:4:8","nodeType":"VariableDeclaration","scope":1427,"src":"895:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1417,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1420,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:8","nodeType":"VariableDeclaration","scope":1427,"src":"917:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1419,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1422,"mutability":"mutable","name":"data","nameLocation":"957:4:8","nodeType":"VariableDeclaration","scope":1427,"src":"942:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1421,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:8"},"returnParameters":{"id":1426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1427,"src":"986:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1424,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:8"},"scope":1428,"src":"834:160:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1429,"src":"297:699:8","usedErrors":[],"usedEvents":[]}],"src":"116:881:8"},"id":8},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"ERC721":[1293],"ERC721URIStorage":[1556],"IERC165":[3250],"IERC4906":[195],"IERC721Metadata":[1584],"Strings":[3214]},"id":1557,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1430,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1432,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1557,"sourceUnit":1294,"src":"154:37:9","symbolAliases":[{"foreign":{"id":1431,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"162:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./IERC721Metadata.sol","id":1434,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1557,"sourceUnit":1585,"src":"192:54:9","symbolAliases":[{"foreign":{"id":1433,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"200:15:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../../utils/Strings.sol","id":1436,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1557,"sourceUnit":3215,"src":"247:51:9","symbolAliases":[{"foreign":{"id":1435,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3214,"src":"255:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","file":"../../../interfaces/IERC4906.sol","id":1438,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1557,"sourceUnit":196,"src":"299:58:9","symbolAliases":[{"foreign":{"id":1437,"name":"IERC4906","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"307:8:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"../../../interfaces/IERC165.sol","id":1440,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1557,"sourceUnit":152,"src":"358:56:9","symbolAliases":[{"foreign":{"id":1439,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"366:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1442,"name":"IERC4906","nameLocations":["525:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":195,"src":"525:8:9"},"id":1443,"nodeType":"InheritanceSpecifier","src":"525:8:9"},{"baseName":{"id":1444,"name":"ERC721","nameLocations":["535:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1293,"src":"535:6:9"},"id":1445,"nodeType":"InheritanceSpecifier","src":"535:6:9"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":1441,"nodeType":"StructuredDocumentation","src":"416:70:9","text":" @dev ERC-721 token with storage based token URI management."},"fullyImplemented":true,"id":1556,"linearizedBaseContracts":[1556,1293,289,1584,195,1410,3238,3250,1691],"name":"ERC721URIStorage","nameLocation":"505:16:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1448,"libraryName":{"id":1446,"name":"Strings","nameLocations":["554:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":3214,"src":"554:7:9"},"nodeType":"UsingForDirective","src":"548:26:9","typeName":{"id":1447,"name":"uint256","nodeType":"ElementaryTypeName","src":"566:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":1454,"mutability":"constant","name":"ERC4906_INTERFACE_ID","nameLocation":"786:20:9","nodeType":"VariableDeclaration","scope":1556,"src":"762:65:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1449,"name":"bytes4","nodeType":"ElementaryTypeName","src":"762:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"hexValue":"30783439303634393036","id":1452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"816:10:9","typeDescriptions":{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"},"value":"0x49064906"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"}],"id":1451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"809:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1450,"name":"bytes4","nodeType":"ElementaryTypeName","src":"809:6:9","typeDescriptions":{}}},"id":1453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"809:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"private"},{"constant":false,"id":1458,"mutability":"mutable","name":"_tokenURIs","nameLocation":"916:10:9","nodeType":"VariableDeclaration","scope":1556,"src":"873:53:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":1457,"keyName":"tokenId","keyNameLocation":"889:7:9","keyType":{"id":1455,"name":"uint256","nodeType":"ElementaryTypeName","src":"881:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"873:34:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1456,"name":"string","nodeType":"ElementaryTypeName","src":"900:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[437,3249],"body":{"id":1478,"nodeType":"Block","src":"1069:99:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1469,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"1086:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1470,"name":"ERC4906_INTERFACE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"1101:20:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1086:35:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1474,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"1149:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1472,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1125:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1556_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1131:17:9","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":437,"src":"1125:23:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1125:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1086:75:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1468,"id":1477,"nodeType":"Return","src":"1079:82:9"}]},"documentation":{"id":1459,"nodeType":"StructuredDocumentation","src":"933:23:9","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":1479,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"970:17:9","nodeType":"FunctionDefinition","overrides":{"id":1465,"nodeType":"OverrideSpecifier","overrides":[{"id":1463,"name":"ERC721","nameLocations":["1037:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1293,"src":"1037:6:9"},{"id":1464,"name":"IERC165","nameLocations":["1045:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":3250,"src":"1045:7:9"}],"src":"1028:25:9"},"parameters":{"id":1462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"interfaceId","nameLocation":"995:11:9","nodeType":"VariableDeclaration","scope":1479,"src":"988:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1460,"name":"bytes4","nodeType":"ElementaryTypeName","src":"988:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"987:20:9"},"returnParameters":{"id":1468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1479,"src":"1063:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1466,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1062:6:9"},"scope":1556,"src":"961:207:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[532],"body":{"id":1535,"nodeType":"Block","src":"1298:505:9","statements":[{"expression":{"arguments":[{"id":1489,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"1322:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1488,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"1308:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1308:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1491,"nodeType":"ExpressionStatement","src":"1308:22:9"},{"assignments":[1493],"declarations":[{"constant":false,"id":1493,"mutability":"mutable","name":"_tokenURI","nameLocation":"1355:9:9","nodeType":"VariableDeclaration","scope":1535,"src":"1341:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1492,"name":"string","nodeType":"ElementaryTypeName","src":"1341:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1497,"initialValue":{"baseExpression":{"id":1494,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"1367:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1496,"indexExpression":{"id":1495,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"1378:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1367:19:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1341:45:9"},{"assignments":[1499],"declarations":[{"constant":false,"id":1499,"mutability":"mutable","name":"base","nameLocation":"1410:4:9","nodeType":"VariableDeclaration","scope":1535,"src":"1396:18:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1498,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1502,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1500,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"1417:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1417:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1396:31:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1505,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"1506:4:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1500:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1503,"name":"bytes","nodeType":"ElementaryTypeName","src":"1500:5:9","typeDescriptions":{}}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1500:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1512:6:9","memberName":"length","nodeType":"MemberAccess","src":"1500:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1522:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1500:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1513,"nodeType":"IfStatement","src":"1496:70:9","trueBody":{"id":1512,"nodeType":"Block","src":"1525:41:9","statements":[{"expression":{"id":1510,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"1546:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1487,"id":1511,"nodeType":"Return","src":"1539:16:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1516,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"1671:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1665:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1514,"name":"bytes","nodeType":"ElementaryTypeName","src":"1665:5:9","typeDescriptions":{}}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1665:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1682:6:9","memberName":"length","nodeType":"MemberAccess","src":"1665:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1691:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1665:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1529,"nodeType":"IfStatement","src":"1661:95:9","trueBody":{"id":1528,"nodeType":"Block","src":"1694:62:9","statements":[{"expression":{"arguments":[{"id":1524,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"1729:4:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1525,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"1735:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1715:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1521,"name":"string","nodeType":"ElementaryTypeName","src":"1715:6:9","typeDescriptions":{}}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1722:6:9","memberName":"concat","nodeType":"MemberAccess","src":"1715:13:9","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1715:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1487,"id":1527,"nodeType":"Return","src":"1708:37:9"}]}},{"expression":{"arguments":[{"id":1532,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"1788:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1530,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1773:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1556_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1779:8:9","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":532,"src":"1773:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1773:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1487,"id":1534,"nodeType":"Return","src":"1766:30:9"}]},"documentation":{"id":1480,"nodeType":"StructuredDocumentation","src":"1174:31:9","text":"@inheritdoc IERC721Metadata"},"functionSelector":"c87b56dd","id":1536,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1219:8:9","nodeType":"FunctionDefinition","overrides":{"id":1484,"nodeType":"OverrideSpecifier","overrides":[],"src":"1265:8:9"},"parameters":{"id":1483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1482,"mutability":"mutable","name":"tokenId","nameLocation":"1236:7:9","nodeType":"VariableDeclaration","scope":1536,"src":"1228:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1481,"name":"uint256","nodeType":"ElementaryTypeName","src":"1228:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1227:17:9"},"returnParameters":{"id":1487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1536,"src":"1283:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1485,"name":"string","nodeType":"ElementaryTypeName","src":"1283:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1282:15:9"},"scope":1556,"src":"1210:593:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1554,"nodeType":"Block","src":"2012:86:9","statements":[{"expression":{"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1544,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"2022:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1546,"indexExpression":{"id":1545,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"2033:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2022:19:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1547,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"2044:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2022:31:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1549,"nodeType":"ExpressionStatement","src":"2022:31:9"},{"eventCall":{"arguments":[{"id":1551,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"2083:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1550,"name":"MetadataUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"2068:14:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2068:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1553,"nodeType":"EmitStatement","src":"2063:28:9"}]},"documentation":{"id":1537,"nodeType":"StructuredDocumentation","src":"1809:117:9","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {IERC4906-MetadataUpdate}."},"id":1555,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1940:12:9","nodeType":"FunctionDefinition","parameters":{"id":1542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1539,"mutability":"mutable","name":"tokenId","nameLocation":"1961:7:9","nodeType":"VariableDeclaration","scope":1555,"src":"1953:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1538,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1541,"mutability":"mutable","name":"_tokenURI","nameLocation":"1984:9:9","nodeType":"VariableDeclaration","scope":1555,"src":"1970:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1540,"name":"string","nodeType":"ElementaryTypeName","src":"1970:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1952:42:9"},"returnParameters":{"id":1543,"nodeType":"ParameterList","parameters":[],"src":"2012:0:9"},"scope":1556,"src":"1931:167:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1557,"src":"487:1613:9","usedErrors":[247,252,261,266,271,278,283,288],"usedEvents":[187,194,1309,1318,1327]}],"src":"128:1973:9"},"id":9},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[1410],"IERC721Metadata":[1584]},"id":1585,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1558,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"127:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1560,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1585,"sourceUnit":1411,"src":"153:39:10","symbolAliases":[{"foreign":{"id":1559,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"161:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1562,"name":"IERC721","nameLocations":["357:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":1410,"src":"357:7:10"},"id":1563,"nodeType":"InheritanceSpecifier","src":"357:7:10"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1561,"nodeType":"StructuredDocumentation","src":"194:133:10","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1584,"linearizedBaseContracts":[1584,1410,3250],"name":"IERC721Metadata","nameLocation":"338:15:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1564,"nodeType":"StructuredDocumentation","src":"371:58:10","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1569,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:10","nodeType":"FunctionDefinition","parameters":{"id":1565,"nodeType":"ParameterList","parameters":[],"src":"447:2:10"},"returnParameters":{"id":1568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1569,"src":"473:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1566,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:10"},"scope":1584,"src":"434:54:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1570,"nodeType":"StructuredDocumentation","src":"494:60:10","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1575,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:10","nodeType":"FunctionDefinition","parameters":{"id":1571,"nodeType":"ParameterList","parameters":[],"src":"574:2:10"},"returnParameters":{"id":1574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1575,"src":"600:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1572,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:10"},"scope":1584,"src":"559:56:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1576,"nodeType":"StructuredDocumentation","src":"621:90:10","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1583,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:10","nodeType":"FunctionDefinition","parameters":{"id":1579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1578,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:10","nodeType":"VariableDeclaration","scope":1583,"src":"734:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1577,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:10"},"returnParameters":{"id":1582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1583,"src":"774:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1580,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:10"},"scope":1584,"src":"716:73:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1585,"src":"328:463:10","usedErrors":[],"usedEvents":[1309,1318,1327]}],"src":"127:665:10"},"id":10},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[1661],"IERC721Errors":[289],"IERC721Receiver":[1428]},"id":1662,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1586,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":1588,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1662,"sourceUnit":1429,"src":"144:55:11","symbolAliases":[{"foreign":{"id":1587,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"152:15:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1590,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1662,"sourceUnit":337,"src":"200:69:11","symbolAliases":[{"foreign":{"id":1589,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"208:13:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1591,"nodeType":"StructuredDocumentation","src":"271:159:11","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":1661,"linearizedBaseContracts":[1661],"name":"ERC721Utils","nameLocation":"439:11:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1659,"nodeType":"Block","src":"1159:760:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1605,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"1173:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1176:4:11","memberName":"code","nodeType":"MemberAccess","src":"1173:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:6:11","memberName":"length","nodeType":"MemberAccess","src":"1173:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1190:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1173:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1658,"nodeType":"IfStatement","src":"1169:744:11","trueBody":{"id":1657,"nodeType":"Block","src":"1193:720:11","statements":[{"clauses":[{"block":{"id":1635,"nodeType":"Block","src":"1303:214:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1622,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"1325:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1623,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"1335:15:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1428_$","typeString":"type(contract IERC721Receiver)"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1351:16:11","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1427,"src":"1335:32:11","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1368:8:11","memberName":"selector","nodeType":"MemberAccess","src":"1335:41:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1325:51:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1634,"nodeType":"IfStatement","src":"1321:182:11","trueBody":{"id":1633,"nodeType":"Block","src":"1378:125:11","statements":[{"errorCall":{"arguments":[{"id":1630,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"1481:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1627,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"1445:13:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$289_$","typeString":"type(contract IERC721Errors)"}},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1459:21:11","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":271,"src":"1445:35:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1632,"nodeType":"RevertStatement","src":"1438:46:11"}]}}]},"errorName":"","id":1636,"nodeType":"TryCatchClause","parameters":{"id":1621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1620,"mutability":"mutable","name":"retval","nameLocation":"1295:6:11","nodeType":"VariableDeclaration","scope":1636,"src":"1288:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1619,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1288:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1287:15:11"},"src":"1279:238:11"},{"block":{"id":1654,"nodeType":"Block","src":"1546:357:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1640,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"1568:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1575:6:11","memberName":"length","nodeType":"MemberAccess","src":"1568:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1585:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1568:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1652,"nodeType":"Block","src":"1736:153:11","statements":[{"AST":{"nodeType":"YulBlock","src":"1783:88:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1820:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"1828:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1816:3:11"},"nodeType":"YulFunctionCall","src":"1816:17:11"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1841:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1835:5:11"},"nodeType":"YulFunctionCall","src":"1835:13:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1809:6:11"},"nodeType":"YulFunctionCall","src":"1809:40:11"},"nodeType":"YulExpressionStatement","src":"1809:40:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":1638,"isOffset":false,"isSlot":false,"src":"1820:6:11","valueSize":1},{"declaration":1638,"isOffset":false,"isSlot":false,"src":"1841:6:11","valueSize":1}],"flags":["memory-safe"],"id":1651,"nodeType":"InlineAssembly","src":"1758:113:11"}]},"id":1653,"nodeType":"IfStatement","src":"1564:325:11","trueBody":{"id":1650,"nodeType":"Block","src":"1588:142:11","statements":[{"errorCall":{"arguments":[{"id":1647,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"1708:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1644,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"1672:13:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$289_$","typeString":"type(contract IERC721Errors)"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1686:21:11","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":271,"src":"1672:35:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1672:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1649,"nodeType":"RevertStatement","src":"1665:46:11"}]}}]},"errorName":"","id":1655,"nodeType":"TryCatchClause","parameters":{"id":1639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1638,"mutability":"mutable","name":"reason","nameLocation":"1538:6:11","nodeType":"VariableDeclaration","scope":1655,"src":"1525:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1637,"name":"bytes","nodeType":"ElementaryTypeName","src":"1525:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1524:21:11"},"src":"1518:385:11"}],"externalCall":{"arguments":[{"id":1614,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"1248:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1615,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"1258:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1616,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"1264:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1617,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"1273:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1611,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"1227:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1610,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"1211:15:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1428_$","typeString":"type(contract IERC721Receiver)"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1428","typeString":"contract IERC721Receiver"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1231:16:11","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1427,"src":"1211:36:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:67:11","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1656,"nodeType":"TryStatement","src":"1207:696:11"}]}}]},"documentation":{"id":1592,"nodeType":"StructuredDocumentation","src":"457:531:11","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":1660,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"1002:21:11","nodeType":"FunctionDefinition","parameters":{"id":1603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"operator","nameLocation":"1041:8:11","nodeType":"VariableDeclaration","scope":1660,"src":"1033:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1593,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1596,"mutability":"mutable","name":"from","nameLocation":"1067:4:11","nodeType":"VariableDeclaration","scope":1660,"src":"1059:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1595,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1598,"mutability":"mutable","name":"to","nameLocation":"1089:2:11","nodeType":"VariableDeclaration","scope":1660,"src":"1081:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1597,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1600,"mutability":"mutable","name":"tokenId","nameLocation":"1109:7:11","nodeType":"VariableDeclaration","scope":1660,"src":"1101:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1599,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1602,"mutability":"mutable","name":"data","nameLocation":"1139:4:11","nodeType":"VariableDeclaration","scope":1660,"src":"1126:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1601,"name":"bytes","nodeType":"ElementaryTypeName","src":"1126:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1023:126:11"},"returnParameters":{"id":1604,"nodeType":"ParameterList","parameters":[],"src":"1159:0:11"},"scope":1661,"src":"993:926:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1662,"src":"431:1490:11","usedErrors":[],"usedEvents":[]}],"src":"118:1804:11"},"id":11},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1691]},"id":1692,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1663,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:12"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1664,"nodeType":"StructuredDocumentation","src":"127:496:12","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1691,"linearizedBaseContracts":[1691],"name":"Context","nameLocation":"642:7:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":1672,"nodeType":"Block","src":"718:34:12","statements":[{"expression":{"expression":{"id":1669,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:12","memberName":"sender","nodeType":"MemberAccess","src":"735:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1668,"id":1671,"nodeType":"Return","src":"728:17:12"}]},"id":1673,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:12","nodeType":"FunctionDefinition","parameters":{"id":1665,"nodeType":"ParameterList","parameters":[],"src":"675:2:12"},"returnParameters":{"id":1668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1673,"src":"709:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1666,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:12"},"scope":1691,"src":"656:96:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1681,"nodeType":"Block","src":"825:32:12","statements":[{"expression":{"expression":{"id":1678,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:12","memberName":"data","nodeType":"MemberAccess","src":"842:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1677,"id":1680,"nodeType":"Return","src":"835:15:12"}]},"id":1682,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:12","nodeType":"FunctionDefinition","parameters":{"id":1674,"nodeType":"ParameterList","parameters":[],"src":"775:2:12"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1682,"src":"809:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1675,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:12"},"scope":1691,"src":"758:99:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1689,"nodeType":"Block","src":"935:25:12","statements":[{"expression":{"hexValue":"30","id":1687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1686,"id":1688,"nodeType":"Return","src":"945:8:12"}]},"id":1690,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:12","nodeType":"FunctionDefinition","parameters":{"id":1683,"nodeType":"ParameterList","parameters":[],"src":"892:2:12"},"returnParameters":{"id":1686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1690,"src":"926:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1684,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:12"},"scope":1691,"src":"863:97:12","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1692,"src":"624:338:12","usedErrors":[],"usedEvents":[]}],"src":"101:862:12"},"id":12},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1743]},"id":1744,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1693,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1694,"nodeType":"StructuredDocumentation","src":"125:489:13","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1743,"linearizedBaseContracts":[1743],"name":"Panic","nameLocation":"665:5:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1695,"nodeType":"StructuredDocumentation","src":"677:36:13","text":"@dev generic / unspecified error"},"id":1698,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:13","nodeType":"VariableDeclaration","scope":1743,"src":"718:40:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1696,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1699,"nodeType":"StructuredDocumentation","src":"764:37:13","text":"@dev used by the assert() builtin"},"id":1702,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:13","nodeType":"VariableDeclaration","scope":1743,"src":"806:39:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1700,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1703,"nodeType":"StructuredDocumentation","src":"851:41:13","text":"@dev arithmetic underflow or overflow"},"id":1706,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:13","nodeType":"VariableDeclaration","scope":1743,"src":"897:47:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1704,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:13","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1707,"nodeType":"StructuredDocumentation","src":"950:35:13","text":"@dev division or modulo by zero"},"id":1710,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:13","nodeType":"VariableDeclaration","scope":1743,"src":"990:49:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1708,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:13","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1711,"nodeType":"StructuredDocumentation","src":"1045:30:13","text":"@dev enum conversion error"},"id":1714,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:13","nodeType":"VariableDeclaration","scope":1743,"src":"1080:54:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1712,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:13","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1715,"nodeType":"StructuredDocumentation","src":"1140:36:13","text":"@dev invalid encoding in storage"},"id":1718,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:13","nodeType":"VariableDeclaration","scope":1743,"src":"1181:55:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1716,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:13","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1719,"nodeType":"StructuredDocumentation","src":"1242:24:13","text":"@dev empty array pop"},"id":1722,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:13","nodeType":"VariableDeclaration","scope":1743,"src":"1271:48:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1720,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:13","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1723,"nodeType":"StructuredDocumentation","src":"1325:35:13","text":"@dev array out of bounds access"},"id":1726,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:13","nodeType":"VariableDeclaration","scope":1743,"src":"1365:52:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1724,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:13","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1727,"nodeType":"StructuredDocumentation","src":"1423:65:13","text":"@dev resource error (too large allocation or too large array)"},"id":1730,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:13","nodeType":"VariableDeclaration","scope":1743,"src":"1493:47:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1728,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:13","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1731,"nodeType":"StructuredDocumentation","src":"1546:42:13","text":"@dev calling invalid internal function"},"id":1734,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:13","nodeType":"VariableDeclaration","scope":1743,"src":"1593:58:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1732,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:13","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1741,"nodeType":"Block","src":"1819:151:13","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:13","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:13"},"nodeType":"YulFunctionCall","src":"1868:24:13"},"nodeType":"YulExpressionStatement","src":"1868:24:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:13","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:13"},"nodeType":"YulFunctionCall","src":"1905:18:13"},"nodeType":"YulExpressionStatement","src":"1905:18:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:13","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:13"},"nodeType":"YulFunctionCall","src":"1936:18:13"},"nodeType":"YulExpressionStatement","src":"1936:18:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":1737,"isOffset":false,"isSlot":false,"src":"1918:4:13","valueSize":1}],"flags":["memory-safe"],"id":1740,"nodeType":"InlineAssembly","src":"1829:135:13"}]},"documentation":{"id":1735,"nodeType":"StructuredDocumentation","src":"1658:113:13","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1742,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:13","nodeType":"FunctionDefinition","parameters":{"id":1738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1737,"mutability":"mutable","name":"code","nameLocation":"1799:4:13","nodeType":"VariableDeclaration","scope":1742,"src":"1791:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1736,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:13"},"returnParameters":{"id":1739,"nodeType":"ParameterList","parameters":[],"src":"1819:0:13"},"scope":1743,"src":"1776:194:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1744,"src":"657:1315:13","usedErrors":[],"usedEvents":[]}],"src":"99:1874:13"},"id":13},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[1812]},"id":1813,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1745,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:14"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":1746,"nodeType":"StructuredDocumentation","src":"135:894:14","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1812,"linearizedBaseContracts":[1812],"name":"ReentrancyGuard","nameLocation":"1048:15:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1749,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:14","nodeType":"VariableDeclaration","scope":1812,"src":"1818:40:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1747,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1752,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:14","nodeType":"VariableDeclaration","scope":1812,"src":"1864:36:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1750,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":1754,"mutability":"mutable","name":"_status","nameLocation":"1923:7:14","nodeType":"VariableDeclaration","scope":1812,"src":"1907:23:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1753,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":1755,"nodeType":"StructuredDocumentation","src":"1937:52:14","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1757,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:14","nodeType":"ErrorDefinition","parameters":{"id":1756,"nodeType":"ParameterList","parameters":[],"src":"2028:2:14"},"src":"1994:37:14"},{"body":{"id":1764,"nodeType":"Block","src":"2051:38:14","statements":[{"expression":{"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1760,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"2061:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1761,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"2071:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1763,"nodeType":"ExpressionStatement","src":"2061:21:14"}]},"id":1765,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1758,"nodeType":"ParameterList","parameters":[],"src":"2048:2:14"},"returnParameters":{"id":1759,"nodeType":"ParameterList","parameters":[],"src":"2051:0:14"},"scope":1812,"src":"2037:52:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1775,"nodeType":"Block","src":"2490:79:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1768,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"2500:19:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1770,"nodeType":"ExpressionStatement","src":"2500:21:14"},{"id":1771,"nodeType":"PlaceholderStatement","src":"2531:1:14"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1772,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"2542:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1774,"nodeType":"ExpressionStatement","src":"2542:20:14"}]},"documentation":{"id":1766,"nodeType":"StructuredDocumentation","src":"2095:366:14","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1776,"name":"nonReentrant","nameLocation":"2475:12:14","nodeType":"ModifierDefinition","parameters":{"id":1767,"nodeType":"ParameterList","parameters":[],"src":"2487:2:14"},"src":"2466:103:14","virtual":false,"visibility":"internal"},{"body":{"id":1791,"nodeType":"Block","src":"2614:268:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1779,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"2702:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1780,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"2713:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1786,"nodeType":"IfStatement","src":"2698:86:14","trueBody":{"id":1785,"nodeType":"Block","src":"2722:62:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1782,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"2743:28:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1784,"nodeType":"RevertStatement","src":"2736:37:14"}]}},{"expression":{"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1787,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"2858:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1788,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"2868:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1790,"nodeType":"ExpressionStatement","src":"2858:17:14"}]},"id":1792,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:14","nodeType":"FunctionDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[],"src":"2603:2:14"},"returnParameters":{"id":1778,"nodeType":"ParameterList","parameters":[],"src":"2614:0:14"},"scope":1812,"src":"2575:307:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1799,"nodeType":"Block","src":"2926:170:14","statements":[{"expression":{"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1795,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"3068:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1796,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"3078:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1798,"nodeType":"ExpressionStatement","src":"3068:21:14"}]},"id":1800,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:14","nodeType":"FunctionDefinition","parameters":{"id":1793,"nodeType":"ParameterList","parameters":[],"src":"2915:2:14"},"returnParameters":{"id":1794,"nodeType":"ParameterList","parameters":[],"src":"2926:0:14"},"scope":1812,"src":"2888:208:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1810,"nodeType":"Block","src":"3339:42:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1806,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"3356:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1807,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"3367:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1805,"id":1809,"nodeType":"Return","src":"3349:25:14"}]},"documentation":{"id":1801,"nodeType":"StructuredDocumentation","src":"3102:168:14","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1811,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:14","nodeType":"FunctionDefinition","parameters":{"id":1802,"nodeType":"ParameterList","parameters":[],"src":"3307:2:14"},"returnParameters":{"id":1805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1811,"src":"3333:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1803,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:14"},"scope":1812,"src":"3275:106:14","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1813,"src":"1030:2353:14","usedErrors":[1757],"usedEvents":[]}],"src":"109:3275:14"},"id":14},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4871],"SafeCast":[6636],"SignedMath":[6780],"Strings":[3214]},"id":3215,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1814,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1816,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3215,"sourceUnit":4872,"src":"127:37:15","symbolAliases":[{"foreign":{"id":1815,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"135:4:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1818,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3215,"sourceUnit":6637,"src":"165:45:15","symbolAliases":[{"foreign":{"id":1817,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"173:8:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1820,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3215,"sourceUnit":6781,"src":"211:49:15","symbolAliases":[{"foreign":{"id":1819,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6780,"src":"219:10:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1821,"nodeType":"StructuredDocumentation","src":"262:34:15","text":" @dev String operations."},"fullyImplemented":true,"id":3214,"linearizedBaseContracts":[3214],"name":"Strings","nameLocation":"305:7:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1823,"libraryName":{"id":1822,"name":"SafeCast","nameLocations":["325:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":6636,"src":"325:8:15"},"nodeType":"UsingForDirective","src":"319:21:15"},{"constant":true,"id":1826,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:15","nodeType":"VariableDeclaration","scope":3214,"src":"346:56:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1824,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1829,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:15","nodeType":"VariableDeclaration","scope":3214,"src":"408:42:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1827,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:15","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":1865,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:15","nodeType":"VariableDeclaration","scope":3214,"src":"456:302:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1830,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":1864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":1859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":1854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":1849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":1844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":1839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":1832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:15","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1834,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:15","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":1837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":1836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:15","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:15","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":1838,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:15","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:15","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":1842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":1841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:15","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":1843,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:15","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:15","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":1847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":1846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:15","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:15","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":1848,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:15","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:15","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":1852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":1851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:15","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:15","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":1853,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:15","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:15","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":1857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":1856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:15","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:15","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":1858,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:15","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:15","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":1862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":1861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:15","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:15","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":1863,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:15","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:15","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":1866,"nodeType":"StructuredDocumentation","src":"778:81:15","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1872,"name":"StringsInsufficientHexLength","nameLocation":"870:28:15","nodeType":"ErrorDefinition","parameters":{"id":1871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1868,"mutability":"mutable","name":"value","nameLocation":"907:5:15","nodeType":"VariableDeclaration","scope":1872,"src":"899:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1867,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1870,"mutability":"mutable","name":"length","nameLocation":"922:6:15","nodeType":"VariableDeclaration","scope":1872,"src":"914:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1869,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:15"},"src":"864:66:15"},{"documentation":{"id":1873,"nodeType":"StructuredDocumentation","src":"936:108:15","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":1875,"name":"StringsInvalidChar","nameLocation":"1055:18:15","nodeType":"ErrorDefinition","parameters":{"id":1874,"nodeType":"ParameterList","parameters":[],"src":"1073:2:15"},"src":"1049:27:15"},{"documentation":{"id":1876,"nodeType":"StructuredDocumentation","src":"1082:84:15","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":1878,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:15","nodeType":"ErrorDefinition","parameters":{"id":1877,"nodeType":"ParameterList","parameters":[],"src":"1204:2:15"},"src":"1171:36:15"},{"body":{"id":1925,"nodeType":"Block","src":"1379:563:15","statements":[{"id":1924,"nodeType":"UncheckedBlock","src":"1389:547:15","statements":[{"assignments":[1887],"declarations":[{"constant":false,"id":1887,"mutability":"mutable","name":"length","nameLocation":"1421:6:15","nodeType":"VariableDeclaration","scope":1924,"src":"1413:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1886,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1894,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"1441:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1888,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"1430:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4871_$","typeString":"type(library Math)"}},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:15","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4703,"src":"1430:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:15"},{"assignments":[1896],"declarations":[{"constant":false,"id":1896,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:15","nodeType":"VariableDeclaration","scope":1924,"src":"1465:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1895,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1901,"initialValue":{"arguments":[{"id":1899,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"1499:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1897,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:15"},{"assignments":[1903],"declarations":[{"constant":false,"id":1903,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:15","nodeType":"VariableDeclaration","scope":1924,"src":"1520:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1902,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1904,"nodeType":"VariableDeclarationStatement","src":"1520:11:15"},{"AST":{"nodeType":"YulBlock","src":"1570:69:15","statements":[{"nodeType":"YulAssignment","src":"1588:37:15","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1603:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1611:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1599:3:15"},"nodeType":"YulFunctionCall","src":"1599:17:15"},{"name":"length","nodeType":"YulIdentifier","src":"1618:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:15"},"nodeType":"YulFunctionCall","src":"1595:30:15"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1588:3:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1896,"isOffset":false,"isSlot":false,"src":"1603:6:15","valueSize":1},{"declaration":1887,"isOffset":false,"isSlot":false,"src":"1618:6:15","valueSize":1},{"declaration":1903,"isOffset":false,"isSlot":false,"src":"1588:3:15","valueSize":1}],"flags":["memory-safe"],"id":1905,"nodeType":"InlineAssembly","src":"1545:94:15"},{"body":{"id":1920,"nodeType":"Block","src":"1665:234:15","statements":[{"expression":{"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:15","subExpression":{"id":1907,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"1683:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1909,"nodeType":"ExpressionStatement","src":"1683:5:15"},{"AST":{"nodeType":"YulBlock","src":"1731:86:15","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1761:3:15"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1775:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"1782:2:15","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1771:3:15"},"nodeType":"YulFunctionCall","src":"1771:14:15"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1787:10:15"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1766:4:15"},"nodeType":"YulFunctionCall","src":"1766:32:15"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1753:7:15"},"nodeType":"YulFunctionCall","src":"1753:46:15"},"nodeType":"YulExpressionStatement","src":"1753:46:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":1826,"isOffset":false,"isSlot":false,"src":"1787:10:15","valueSize":1},{"declaration":1903,"isOffset":false,"isSlot":false,"src":"1761:3:15","valueSize":1},{"declaration":1881,"isOffset":false,"isSlot":false,"src":"1775:5:15","valueSize":1}],"flags":["memory-safe"],"id":1910,"nodeType":"InlineAssembly","src":"1706:111:15"},{"expression":{"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"1834:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1914,"nodeType":"ExpressionStatement","src":"1834:11:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"1867:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1919,"nodeType":"IfStatement","src":"1863:21:15","trueBody":{"id":1918,"nodeType":"Break","src":"1879:5:15"}}]},"condition":{"hexValue":"74727565","id":1906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1921,"nodeType":"WhileStatement","src":"1652:247:15"},{"expression":{"id":1922,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"1919:6:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1885,"id":1923,"nodeType":"Return","src":"1912:13:15"}]}]},"documentation":{"id":1879,"nodeType":"StructuredDocumentation","src":"1213:90:15","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1926,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:15","nodeType":"FunctionDefinition","parameters":{"id":1882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1881,"mutability":"mutable","name":"value","nameLocation":"1334:5:15","nodeType":"VariableDeclaration","scope":1926,"src":"1326:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1880,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:15"},"returnParameters":{"id":1885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1926,"src":"1364:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1883,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:15"},"scope":3214,"src":"1308:634:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1951,"nodeType":"Block","src":"2118:92:15","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"2149:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:15","trueExpression":{"hexValue":"2d","id":1940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"2195:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1944,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6780,"src":"2180:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6780_$","typeString":"type(library SignedMath)"}},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:15","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6779,"src":"2180:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1943,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"2171:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1934,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:15","typeDescriptions":{}}},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:15","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:15","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1933,"id":1950,"nodeType":"Return","src":"2128:75:15"}]},"documentation":{"id":1927,"nodeType":"StructuredDocumentation","src":"1948:89:15","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1952,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:15","nodeType":"FunctionDefinition","parameters":{"id":1930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1929,"mutability":"mutable","name":"value","nameLocation":"2073:5:15","nodeType":"VariableDeclaration","scope":1952,"src":"2066:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1928,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:15"},"returnParameters":{"id":1933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1952,"src":"2103:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1931,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:15"},"scope":3214,"src":"2042:168:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1971,"nodeType":"Block","src":"2389:100:15","statements":[{"id":1970,"nodeType":"UncheckedBlock","src":"2399:84:15","statements":[{"expression":{"arguments":[{"id":1961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"2442:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"2461:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1962,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"2449:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4871_$","typeString":"type(library Math)"}},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:15","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4814,"src":"2449:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1960,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1972,2055,2075],"referencedDeclaration":2055,"src":"2430:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1959,"id":1969,"nodeType":"Return","src":"2423:49:15"}]}]},"documentation":{"id":1953,"nodeType":"StructuredDocumentation","src":"2216:94:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1972,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:15","nodeType":"FunctionDefinition","parameters":{"id":1956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1955,"mutability":"mutable","name":"value","nameLocation":"2344:5:15","nodeType":"VariableDeclaration","scope":1972,"src":"2336:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1954,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:15"},"returnParameters":{"id":1959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1972,"src":"2374:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1957,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:15"},"scope":3214,"src":"2315:174:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2054,"nodeType":"Block","src":"2702:435:15","statements":[{"assignments":[1983],"declarations":[{"constant":false,"id":1983,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:15","nodeType":"VariableDeclaration","scope":2054,"src":"2712:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1982,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1985,"initialValue":{"id":1984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"2733:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:15"},{"assignments":[1987],"declarations":[{"constant":false,"id":1987,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:15","nodeType":"VariableDeclaration","scope":2054,"src":"2748:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1986,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1996,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1991,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"2784:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1988,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:15"},{"expression":{"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1997,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"2805:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1999,"indexExpression":{"hexValue":"30","id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2002,"nodeType":"ExpressionStatement","src":"2805:15:15"},{"expression":{"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2003,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"2830:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2005,"indexExpression":{"hexValue":"31","id":2004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2008,"nodeType":"ExpressionStatement","src":"2830:15:15"},{"body":{"id":2037,"nodeType":"Block","src":"2900:95:15","statements":[{"expression":{"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2023,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"2914:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2025,"indexExpression":{"id":2024,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"2921:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2026,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"2926:10:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2030,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2027,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"2937:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2032,"nodeType":"ExpressionStatement","src":"2914:40:15"},{"expression":{"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2033,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"2968:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2036,"nodeType":"ExpressionStatement","src":"2968:16:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2017,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"2888:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2038,"initializationExpression":{"assignments":[2010],"declarations":[{"constant":false,"id":2010,"mutability":"mutable","name":"i","nameLocation":"2868:1:15","nodeType":"VariableDeclaration","scope":2038,"src":"2860:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2009,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2016,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2012,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"2876:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:15"},"loopExpression":{"expression":{"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:15","subExpression":{"id":2020,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"2897:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2022,"nodeType":"ExpressionStatement","src":"2895:3:15"},"nodeType":"ForStatement","src":"2855:140:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2039,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"3008:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2048,"nodeType":"IfStatement","src":"3004:96:15","trueBody":{"id":2047,"nodeType":"Block","src":"3025:75:15","statements":[{"errorCall":{"arguments":[{"id":2043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"3075:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2044,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"3082:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2042,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"3046:28:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2046,"nodeType":"RevertStatement","src":"3039:50:15"}]}},{"expression":{"arguments":[{"id":2051,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"3123:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2049,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:15","typeDescriptions":{}}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1981,"id":2053,"nodeType":"Return","src":"3109:21:15"}]},"documentation":{"id":1973,"nodeType":"StructuredDocumentation","src":"2495:112:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2055,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:15","nodeType":"FunctionDefinition","parameters":{"id":1978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1975,"mutability":"mutable","name":"value","nameLocation":"2641:5:15","nodeType":"VariableDeclaration","scope":2055,"src":"2633:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1974,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1977,"mutability":"mutable","name":"length","nameLocation":"2656:6:15","nodeType":"VariableDeclaration","scope":2055,"src":"2648:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1976,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:15"},"returnParameters":{"id":1981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2055,"src":"2687:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1979,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:15"},"scope":3214,"src":"2612:525:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2074,"nodeType":"Block","src":"3369:75:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2068,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"3414:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2066,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:15","typeDescriptions":{}}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2064,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:15","typeDescriptions":{}}},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2071,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"3422:14:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2063,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1972,2055,2075],"referencedDeclaration":2055,"src":"3386:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2062,"id":2073,"nodeType":"Return","src":"3379:58:15"}]},"documentation":{"id":2056,"nodeType":"StructuredDocumentation","src":"3143:148:15","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2075,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:15","nodeType":"FunctionDefinition","parameters":{"id":2059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2058,"mutability":"mutable","name":"addr","nameLocation":"3325:4:15","nodeType":"VariableDeclaration","scope":2075,"src":"3317:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2057,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:15"},"returnParameters":{"id":2062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2075,"src":"3354:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2060,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:15"},"scope":3214,"src":"3296:148:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2139,"nodeType":"Block","src":"3701:642:15","statements":[{"assignments":[2084],"declarations":[{"constant":false,"id":2084,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:15","nodeType":"VariableDeclaration","scope":2139,"src":"3711:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2083,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2091,"initialValue":{"arguments":[{"arguments":[{"id":2088,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"3751:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2087,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1972,2055,2075],"referencedDeclaration":2075,"src":"3739:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2085,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:15","typeDescriptions":{}}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:15"},{"assignments":[2093],"declarations":[{"constant":false,"id":2093,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:15","nodeType":"VariableDeclaration","scope":2139,"src":"3842:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2092,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2094,"nodeType":"VariableDeclarationStatement","src":"3842:17:15"},{"AST":{"nodeType":"YulBlock","src":"3894:78:15","statements":[{"nodeType":"YulAssignment","src":"3908:54:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3925:2:15","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3943:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"3951:4:15","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3939:3:15"},"nodeType":"YulFunctionCall","src":"3939:17:15"},{"kind":"number","nodeType":"YulLiteral","src":"3958:2:15","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3929:9:15"},"nodeType":"YulFunctionCall","src":"3929:32:15"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3921:3:15"},"nodeType":"YulFunctionCall","src":"3921:41:15"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3908:9:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2084,"isOffset":false,"isSlot":false,"src":"3943:6:15","valueSize":1},{"declaration":2093,"isOffset":false,"isSlot":false,"src":"3908:9:15","valueSize":1}],"flags":["memory-safe"],"id":2095,"nodeType":"InlineAssembly","src":"3869:103:15"},{"body":{"id":2132,"nodeType":"Block","src":"4015:291:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2106,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"4121:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:15","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2113,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"4150:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2115,"indexExpression":{"id":2114,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"4157:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2111,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:15","typeDescriptions":{}}},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:15","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2127,"nodeType":"IfStatement","src":"4117:150:15","trueBody":{"id":2126,"nodeType":"Block","src":"4167:100:15","statements":[{"expression":{"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2120,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"4235:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2122,"indexExpression":{"id":2121,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"4242:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2125,"nodeType":"ExpressionStatement","src":"4235:17:15"}]}},{"expression":{"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2128,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"4280:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2131,"nodeType":"ExpressionStatement","src":"4280:15:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2100,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"4003:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2133,"initializationExpression":{"assignments":[2097],"declarations":[{"constant":false,"id":2097,"mutability":"mutable","name":"i","nameLocation":"3995:1:15","nodeType":"VariableDeclaration","scope":2133,"src":"3987:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2096,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2099,"initialValue":{"hexValue":"3431","id":2098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:15","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:15"},"loopExpression":{"expression":{"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:15","subExpression":{"id":2103,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"4012:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2105,"nodeType":"ExpressionStatement","src":"4010:3:15"},"nodeType":"ForStatement","src":"3982:324:15"},{"expression":{"arguments":[{"id":2136,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"4329:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2134,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:15","typeDescriptions":{}}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2082,"id":2138,"nodeType":"Return","src":"4315:21:15"}]},"documentation":{"id":2076,"nodeType":"StructuredDocumentation","src":"3450:165:15","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2140,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:15","nodeType":"FunctionDefinition","parameters":{"id":2079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2078,"mutability":"mutable","name":"addr","nameLocation":"3657:4:15","nodeType":"VariableDeclaration","scope":2140,"src":"3649:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2077,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:15"},"returnParameters":{"id":2082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2140,"src":"3686:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2080,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:15"},"scope":3214,"src":"3620:723:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2176,"nodeType":"Block","src":"4498:104:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2152,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"4521:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2150,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:15","typeDescriptions":{}}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:15","memberName":"length","nodeType":"MemberAccess","src":"4515:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2157,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"4540:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2155,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:15","typeDescriptions":{}}},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:15","memberName":"length","nodeType":"MemberAccess","src":"4534:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2164,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"4569:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2162,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:15","typeDescriptions":{}}},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2161,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2170,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"4592:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2168,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:15","typeDescriptions":{}}},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2167,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2149,"id":2175,"nodeType":"Return","src":"4508:87:15"}]},"documentation":{"id":2141,"nodeType":"StructuredDocumentation","src":"4349:66:15","text":" @dev Returns true if the two strings are equal."},"id":2177,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:15","nodeType":"FunctionDefinition","parameters":{"id":2146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2143,"mutability":"mutable","name":"a","nameLocation":"4449:1:15","nodeType":"VariableDeclaration","scope":2177,"src":"4435:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2142,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2145,"mutability":"mutable","name":"b","nameLocation":"4466:1:15","nodeType":"VariableDeclaration","scope":2177,"src":"4452:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2144,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:15"},"returnParameters":{"id":2149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2177,"src":"4492:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2147,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:15"},"scope":3214,"src":"4420:182:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2195,"nodeType":"Block","src":"4899:64:15","statements":[{"expression":{"arguments":[{"id":2186,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"4926:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2190,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"4942:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2188,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:15","typeDescriptions":{}}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:15","memberName":"length","nodeType":"MemberAccess","src":"4936:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2185,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2196,2227],"referencedDeclaration":2227,"src":"4916:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2184,"id":2194,"nodeType":"Return","src":"4909:47:15"}]},"documentation":{"id":2178,"nodeType":"StructuredDocumentation","src":"4608:214:15","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2196,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:15","nodeType":"FunctionDefinition","parameters":{"id":2181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2180,"mutability":"mutable","name":"input","nameLocation":"4860:5:15","nodeType":"VariableDeclaration","scope":2196,"src":"4846:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2179,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:15"},"returnParameters":{"id":2184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2196,"src":"4890:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2182,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:15"},"scope":3214,"src":"4827:136:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2226,"nodeType":"Block","src":"5368:153:15","statements":[{"assignments":[2209,2211],"declarations":[{"constant":false,"id":2209,"mutability":"mutable","name":"success","nameLocation":"5384:7:15","nodeType":"VariableDeclaration","scope":2226,"src":"5379:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2208,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2211,"mutability":"mutable","name":"value","nameLocation":"5401:5:15","nodeType":"VariableDeclaration","scope":2226,"src":"5393:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2210,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2217,"initialValue":{"arguments":[{"id":2213,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"5423:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2214,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"5430:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2215,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"5437:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2212,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2248,2285],"referencedDeclaration":2285,"src":"5410:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:15"},{"condition":{"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:15","subExpression":{"id":2218,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"5456:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2223,"nodeType":"IfStatement","src":"5451:41:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2220,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"5472:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2222,"nodeType":"RevertStatement","src":"5465:27:15"}},{"expression":{"id":2224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"5509:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2207,"id":2225,"nodeType":"Return","src":"5502:12:15"}]},"documentation":{"id":2197,"nodeType":"StructuredDocumentation","src":"4969:294:15","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2227,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:15","nodeType":"FunctionDefinition","parameters":{"id":2204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2199,"mutability":"mutable","name":"input","nameLocation":"5301:5:15","nodeType":"VariableDeclaration","scope":2227,"src":"5287:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2198,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2201,"mutability":"mutable","name":"begin","nameLocation":"5316:5:15","nodeType":"VariableDeclaration","scope":2227,"src":"5308:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2200,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2203,"mutability":"mutable","name":"end","nameLocation":"5331:3:15","nodeType":"VariableDeclaration","scope":2227,"src":"5323:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2202,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:15"},"returnParameters":{"id":2207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2227,"src":"5359:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2205,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:15"},"scope":3214,"src":"5268:253:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2247,"nodeType":"Block","src":"5842:83:15","statements":[{"expression":{"arguments":[{"id":2238,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"5888:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2242,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"5904:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2240,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:15","typeDescriptions":{}}},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:15","memberName":"length","nodeType":"MemberAccess","src":"5898:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2237,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"5859:28:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2236,"id":2246,"nodeType":"Return","src":"5852:66:15"}]},"documentation":{"id":2228,"nodeType":"StructuredDocumentation","src":"5527:215:15","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2248,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:15","nodeType":"FunctionDefinition","parameters":{"id":2231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2230,"mutability":"mutable","name":"input","nameLocation":"5783:5:15","nodeType":"VariableDeclaration","scope":2248,"src":"5769:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2229,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:15"},"returnParameters":{"id":2236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2233,"mutability":"mutable","name":"success","nameLocation":"5818:7:15","nodeType":"VariableDeclaration","scope":2248,"src":"5813:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2232,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2235,"mutability":"mutable","name":"value","nameLocation":"5835:5:15","nodeType":"VariableDeclaration","scope":2248,"src":"5827:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2234,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:15"},"scope":3214,"src":"5747:178:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2284,"nodeType":"Block","src":"6327:144:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2262,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"6341:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2265,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"6353:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2263,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:15","typeDescriptions":{}}},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:15","memberName":"length","nodeType":"MemberAccess","src":"6347:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2269,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"6370:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2270,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"6378:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2277,"nodeType":"IfStatement","src":"6337:63:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2275,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2261,"id":2276,"nodeType":"Return","src":"6383:17:15"}},{"expression":{"arguments":[{"id":2279,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"6446:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2280,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"6453:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2281,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"6460:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2278,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"6417:28:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2261,"id":2283,"nodeType":"Return","src":"6410:54:15"}]},"documentation":{"id":2249,"nodeType":"StructuredDocumentation","src":"5931:238:15","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2285,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:15","nodeType":"FunctionDefinition","parameters":{"id":2256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2251,"mutability":"mutable","name":"input","nameLocation":"6219:5:15","nodeType":"VariableDeclaration","scope":2285,"src":"6205:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2250,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2253,"mutability":"mutable","name":"begin","nameLocation":"6242:5:15","nodeType":"VariableDeclaration","scope":2285,"src":"6234:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2252,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2255,"mutability":"mutable","name":"end","nameLocation":"6265:3:15","nodeType":"VariableDeclaration","scope":2285,"src":"6257:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2254,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:15"},"returnParameters":{"id":2261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2258,"mutability":"mutable","name":"success","nameLocation":"6303:7:15","nodeType":"VariableDeclaration","scope":2285,"src":"6298:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2257,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2260,"mutability":"mutable","name":"value","nameLocation":"6320:5:15","nodeType":"VariableDeclaration","scope":2285,"src":"6312:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2259,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:15"},"scope":3214,"src":"6174:297:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2354,"nodeType":"Block","src":"6874:347:15","statements":[{"assignments":[2300],"declarations":[{"constant":false,"id":2300,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:15","nodeType":"VariableDeclaration","scope":2354,"src":"6884:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2299,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2305,"initialValue":{"arguments":[{"id":2303,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"6912:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2301,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:15","typeDescriptions":{}}},"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:15"},{"assignments":[2307],"declarations":[{"constant":false,"id":2307,"mutability":"mutable","name":"result","nameLocation":"6937:6:15","nodeType":"VariableDeclaration","scope":2354,"src":"6929:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2306,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2309,"initialValue":{"hexValue":"30","id":2308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:15"},{"body":{"id":2348,"nodeType":"Block","src":"6995:189:15","statements":[{"assignments":[2321],"declarations":[{"constant":false,"id":2321,"mutability":"mutable","name":"chr","nameLocation":"7015:3:15","nodeType":"VariableDeclaration","scope":2348,"src":"7009:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2320,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2331,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2326,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"7064:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2327,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"7072:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2325,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"7041:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2323,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:15","typeDescriptions":{}}},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2322,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"7021:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2332,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"7094:3:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:15","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2339,"nodeType":"IfStatement","src":"7090:30:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2337,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2298,"id":2338,"nodeType":"Return","src":"7103:17:15"}},{"expression":{"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2340,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"7134:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2343,"nodeType":"ExpressionStatement","src":"7134:12:15"},{"expression":{"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2344,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"7160:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2345,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"7170:3:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2347,"nodeType":"ExpressionStatement","src":"7160:13:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2314,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"6981:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2315,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"6985:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2349,"initializationExpression":{"assignments":[2311],"declarations":[{"constant":false,"id":2311,"mutability":"mutable","name":"i","nameLocation":"6970:1:15","nodeType":"VariableDeclaration","scope":2349,"src":"6962:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2310,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2313,"initialValue":{"id":2312,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"6974:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:15"},"loopExpression":{"expression":{"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:15","subExpression":{"id":2317,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"6992:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2319,"nodeType":"ExpressionStatement","src":"6990:3:15"},"nodeType":"ForStatement","src":"6957:227:15"},{"expression":{"components":[{"hexValue":"74727565","id":2350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2351,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"7207:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2352,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2298,"id":2353,"nodeType":"Return","src":"7193:21:15"}]},"documentation":{"id":2286,"nodeType":"StructuredDocumentation","src":"6477:224:15","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2355,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:15","nodeType":"FunctionDefinition","parameters":{"id":2293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2288,"mutability":"mutable","name":"input","nameLocation":"6767:5:15","nodeType":"VariableDeclaration","scope":2355,"src":"6753:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2287,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2290,"mutability":"mutable","name":"begin","nameLocation":"6790:5:15","nodeType":"VariableDeclaration","scope":2355,"src":"6782:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2289,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2292,"mutability":"mutable","name":"end","nameLocation":"6813:3:15","nodeType":"VariableDeclaration","scope":2355,"src":"6805:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2291,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:15"},"returnParameters":{"id":2298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2295,"mutability":"mutable","name":"success","nameLocation":"6850:7:15","nodeType":"VariableDeclaration","scope":2355,"src":"6845:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2294,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2297,"mutability":"mutable","name":"value","nameLocation":"6867:5:15","nodeType":"VariableDeclaration","scope":2355,"src":"6859:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2296,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:15"},"scope":3214,"src":"6706:515:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2373,"nodeType":"Block","src":"7518:63:15","statements":[{"expression":{"arguments":[{"id":2364,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"7544:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2368,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"7560:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2366,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:15","typeDescriptions":{}}},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:15","memberName":"length","nodeType":"MemberAccess","src":"7554:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2363,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2374,2405],"referencedDeclaration":2405,"src":"7535:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2362,"id":2372,"nodeType":"Return","src":"7528:46:15"}]},"documentation":{"id":2356,"nodeType":"StructuredDocumentation","src":"7227:216:15","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2374,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:15","nodeType":"FunctionDefinition","parameters":{"id":2359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2358,"mutability":"mutable","name":"input","nameLocation":"7480:5:15","nodeType":"VariableDeclaration","scope":2374,"src":"7466:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2357,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:15"},"returnParameters":{"id":2362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2374,"src":"7510:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2360,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:15"},"scope":3214,"src":"7448:133:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2404,"nodeType":"Block","src":"7986:151:15","statements":[{"assignments":[2387,2389],"declarations":[{"constant":false,"id":2387,"mutability":"mutable","name":"success","nameLocation":"8002:7:15","nodeType":"VariableDeclaration","scope":2404,"src":"7997:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2386,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2389,"mutability":"mutable","name":"value","nameLocation":"8018:5:15","nodeType":"VariableDeclaration","scope":2404,"src":"8011:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2388,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2395,"initialValue":{"arguments":[{"id":2391,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"8039:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2392,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"8046:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2393,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"8053:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2390,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2426,2468],"referencedDeclaration":2468,"src":"8027:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:15"},{"condition":{"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:15","subExpression":{"id":2396,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"8072:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2401,"nodeType":"IfStatement","src":"8067:41:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2398,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"8088:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2400,"nodeType":"RevertStatement","src":"8081:27:15"}},{"expression":{"id":2402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"8125:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2385,"id":2403,"nodeType":"Return","src":"8118:12:15"}]},"documentation":{"id":2375,"nodeType":"StructuredDocumentation","src":"7587:296:15","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2405,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:15","nodeType":"FunctionDefinition","parameters":{"id":2382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2377,"mutability":"mutable","name":"input","nameLocation":"7920:5:15","nodeType":"VariableDeclaration","scope":2405,"src":"7906:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2376,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2379,"mutability":"mutable","name":"begin","nameLocation":"7935:5:15","nodeType":"VariableDeclaration","scope":2405,"src":"7927:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2378,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2381,"mutability":"mutable","name":"end","nameLocation":"7950:3:15","nodeType":"VariableDeclaration","scope":2405,"src":"7942:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2380,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:15"},"returnParameters":{"id":2385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2405,"src":"7978:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2383,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:15"},"scope":3214,"src":"7888:249:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2425,"nodeType":"Block","src":"8528:82:15","statements":[{"expression":{"arguments":[{"id":2416,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"8573:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2420,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"8589:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2418,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:15","typeDescriptions":{}}},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:15","memberName":"length","nodeType":"MemberAccess","src":"8583:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2415,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"8545:27:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2414,"id":2424,"nodeType":"Return","src":"8538:65:15"}]},"documentation":{"id":2406,"nodeType":"StructuredDocumentation","src":"8143:287:15","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2426,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:15","nodeType":"FunctionDefinition","parameters":{"id":2409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2408,"mutability":"mutable","name":"input","nameLocation":"8470:5:15","nodeType":"VariableDeclaration","scope":2426,"src":"8456:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2407,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:15"},"returnParameters":{"id":2414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2411,"mutability":"mutable","name":"success","nameLocation":"8505:7:15","nodeType":"VariableDeclaration","scope":2426,"src":"8500:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2410,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2413,"mutability":"mutable","name":"value","nameLocation":"8521:5:15","nodeType":"VariableDeclaration","scope":2426,"src":"8514:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2412,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:15"},"scope":3214,"src":"8435:175:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2431,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:15","nodeType":"VariableDeclaration","scope":3214,"src":"8616:50:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2427,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:15","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2467,"nodeType":"Block","src":"9132:143:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2445,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"9146:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2448,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"9158:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2446,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:15","typeDescriptions":{}}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:15","memberName":"length","nodeType":"MemberAccess","src":"9152:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2452,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"9175:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2453,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"9183:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2460,"nodeType":"IfStatement","src":"9142:63:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2458,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2444,"id":2459,"nodeType":"Return","src":"9188:17:15"}},{"expression":{"arguments":[{"id":2462,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"9250:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2463,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"9257:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2464,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"9264:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2461,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"9222:27:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2444,"id":2466,"nodeType":"Return","src":"9215:53:15"}]},"documentation":{"id":2432,"nodeType":"StructuredDocumentation","src":"8673:303:15","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2468,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:15","nodeType":"FunctionDefinition","parameters":{"id":2439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2434,"mutability":"mutable","name":"input","nameLocation":"9025:5:15","nodeType":"VariableDeclaration","scope":2468,"src":"9011:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2433,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2436,"mutability":"mutable","name":"begin","nameLocation":"9048:5:15","nodeType":"VariableDeclaration","scope":2468,"src":"9040:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2435,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2438,"mutability":"mutable","name":"end","nameLocation":"9071:3:15","nodeType":"VariableDeclaration","scope":2468,"src":"9063:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2437,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:15"},"returnParameters":{"id":2444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2441,"mutability":"mutable","name":"success","nameLocation":"9109:7:15","nodeType":"VariableDeclaration","scope":2468,"src":"9104:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2440,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2443,"mutability":"mutable","name":"value","nameLocation":"9125:5:15","nodeType":"VariableDeclaration","scope":2468,"src":"9118:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2442,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:15"},"scope":3214,"src":"8981:294:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2588,"nodeType":"Block","src":"9675:812:15","statements":[{"assignments":[2483],"declarations":[{"constant":false,"id":2483,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:15","nodeType":"VariableDeclaration","scope":2588,"src":"9685:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2482,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2488,"initialValue":{"arguments":[{"id":2486,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"9713:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2484,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:15","typeDescriptions":{}}},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:15"},{"assignments":[2490],"declarations":[{"constant":false,"id":2490,"mutability":"mutable","name":"sign","nameLocation":"9783:4:15","nodeType":"VariableDeclaration","scope":2588,"src":"9776:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2489,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2506,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2491,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"9790:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2492,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"9799:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2501,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"9847:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2502,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"9855:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2500,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"9824:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2498,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:15","typeDescriptions":{}}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:15","trueExpression":{"arguments":[{"hexValue":"30","id":2496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2494,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:15","typeDescriptions":{}}},"id":2497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:15"},{"assignments":[2508],"declarations":[{"constant":false,"id":2508,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:15","nodeType":"VariableDeclaration","scope":2588,"src":"9943:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2507,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2515,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2509,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"9963:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2510,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:15","typeDescriptions":{}}},"id":2513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:15"},{"assignments":[2517],"declarations":[{"constant":false,"id":2517,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:15","nodeType":"VariableDeclaration","scope":2588,"src":"9992:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2516,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2524,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2518,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"10012:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2519,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:15","typeDescriptions":{}}},"id":2522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:15"},{"assignments":[2526],"declarations":[{"constant":false,"id":2526,"mutability":"mutable","name":"offset","nameLocation":"10049:6:15","nodeType":"VariableDeclaration","scope":2588,"src":"10041:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2525,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2533,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2527,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"10059:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2528,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"10075:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2530,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6635,"src":"10058:37:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:15"},{"assignments":[2535,2537],"declarations":[{"constant":false,"id":2535,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:15","nodeType":"VariableDeclaration","scope":2588,"src":"10109:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2534,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2537,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:15","nodeType":"VariableDeclaration","scope":2588,"src":"10126:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2536,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2545,"initialValue":{"arguments":[{"id":2539,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"10159:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2540,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"10166:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2541,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"10174:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2543,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"10182:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2538,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2248,2285],"referencedDeclaration":2285,"src":"10146:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:15"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2546,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"10201:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2547,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"10215:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2548,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"10226:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2566,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"10343:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2567,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"10357:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2569,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"10373:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2570,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"10385:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2584,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2481,"id":2585,"nodeType":"Return","src":"10463:17:15"},"id":2586,"nodeType":"IfStatement","src":"10339:141:15","trueBody":{"id":2581,"nodeType":"Block","src":"10401:56:15","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2575,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2574,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:15","memberName":"min","nodeType":"MemberAccess","src":"10429:16:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2579,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2481,"id":2580,"nodeType":"Return","src":"10415:31:15"}]}},"id":2587,"nodeType":"IfStatement","src":"10197:283:15","trueBody":{"id":2565,"nodeType":"Block","src":"10242:91:15","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2552,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"10270:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2560,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"10312:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2558,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:15","typeDescriptions":{}}},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:15","trueExpression":{"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:15","subExpression":{"arguments":[{"id":2555,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"10293:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2553,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:15","typeDescriptions":{}}},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2563,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2481,"id":2564,"nodeType":"Return","src":"10256:66:15"}]}}]},"documentation":{"id":2469,"nodeType":"StructuredDocumentation","src":"9281:223:15","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2589,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:15","nodeType":"FunctionDefinition","parameters":{"id":2476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2471,"mutability":"mutable","name":"input","nameLocation":"9569:5:15","nodeType":"VariableDeclaration","scope":2589,"src":"9555:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2470,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2473,"mutability":"mutable","name":"begin","nameLocation":"9592:5:15","nodeType":"VariableDeclaration","scope":2589,"src":"9584:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2472,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2475,"mutability":"mutable","name":"end","nameLocation":"9615:3:15","nodeType":"VariableDeclaration","scope":2589,"src":"9607:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2474,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:15"},"returnParameters":{"id":2481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2478,"mutability":"mutable","name":"success","nameLocation":"9652:7:15","nodeType":"VariableDeclaration","scope":2589,"src":"9647:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2477,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2480,"mutability":"mutable","name":"value","nameLocation":"9668:5:15","nodeType":"VariableDeclaration","scope":2589,"src":"9661:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2479,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:15"},"scope":3214,"src":"9509:978:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2607,"nodeType":"Block","src":"10832:67:15","statements":[{"expression":{"arguments":[{"id":2598,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"10862:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2602,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"10878:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2600,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:15","typeDescriptions":{}}},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:15","memberName":"length","nodeType":"MemberAccess","src":"10872:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2597,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2608,2639],"referencedDeclaration":2639,"src":"10849:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2596,"id":2606,"nodeType":"Return","src":"10842:50:15"}]},"documentation":{"id":2590,"nodeType":"StructuredDocumentation","src":"10493:259:15","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2608,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:15","nodeType":"FunctionDefinition","parameters":{"id":2593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2592,"mutability":"mutable","name":"input","nameLocation":"10793:5:15","nodeType":"VariableDeclaration","scope":2608,"src":"10779:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2591,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:15"},"returnParameters":{"id":2596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2608,"src":"10823:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2594,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:15"},"scope":3214,"src":"10757:142:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2638,"nodeType":"Block","src":"11320:156:15","statements":[{"assignments":[2621,2623],"declarations":[{"constant":false,"id":2621,"mutability":"mutable","name":"success","nameLocation":"11336:7:15","nodeType":"VariableDeclaration","scope":2638,"src":"11331:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2620,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2623,"mutability":"mutable","name":"value","nameLocation":"11353:5:15","nodeType":"VariableDeclaration","scope":2638,"src":"11345:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2622,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2629,"initialValue":{"arguments":[{"id":2625,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"11378:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2626,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"11385:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2627,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"11392:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2624,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2660,2697],"referencedDeclaration":2697,"src":"11362:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:15"},{"condition":{"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:15","subExpression":{"id":2630,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"11411:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2635,"nodeType":"IfStatement","src":"11406:41:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2632,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"11427:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2634,"nodeType":"RevertStatement","src":"11420:27:15"}},{"expression":{"id":2636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"11464:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2619,"id":2637,"nodeType":"Return","src":"11457:12:15"}]},"documentation":{"id":2609,"nodeType":"StructuredDocumentation","src":"10905:307:15","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2639,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:15","nodeType":"FunctionDefinition","parameters":{"id":2616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2611,"mutability":"mutable","name":"input","nameLocation":"11253:5:15","nodeType":"VariableDeclaration","scope":2639,"src":"11239:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2610,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2613,"mutability":"mutable","name":"begin","nameLocation":"11268:5:15","nodeType":"VariableDeclaration","scope":2639,"src":"11260:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2612,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2615,"mutability":"mutable","name":"end","nameLocation":"11283:3:15","nodeType":"VariableDeclaration","scope":2639,"src":"11275:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2614,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:15"},"returnParameters":{"id":2619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2639,"src":"11311:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2617,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:15"},"scope":3214,"src":"11217:259:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2659,"nodeType":"Block","src":"11803:86:15","statements":[{"expression":{"arguments":[{"id":2650,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"11852:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2654,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"11868:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2652,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:15","typeDescriptions":{}}},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:15","memberName":"length","nodeType":"MemberAccess","src":"11862:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2649,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"11820:31:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2648,"id":2658,"nodeType":"Return","src":"11813:69:15"}]},"documentation":{"id":2640,"nodeType":"StructuredDocumentation","src":"11482:218:15","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2660,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:15","nodeType":"FunctionDefinition","parameters":{"id":2643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2642,"mutability":"mutable","name":"input","nameLocation":"11744:5:15","nodeType":"VariableDeclaration","scope":2660,"src":"11730:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2641,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:15"},"returnParameters":{"id":2648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2645,"mutability":"mutable","name":"success","nameLocation":"11779:7:15","nodeType":"VariableDeclaration","scope":2660,"src":"11774:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2644,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2647,"mutability":"mutable","name":"value","nameLocation":"11796:5:15","nodeType":"VariableDeclaration","scope":2660,"src":"11788:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2646,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:15"},"scope":3214,"src":"11705:184:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2696,"nodeType":"Block","src":"12297:147:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2674,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"12311:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2677,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2663,"src":"12323:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2675,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:15","typeDescriptions":{}}},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:15","memberName":"length","nodeType":"MemberAccess","src":"12317:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2681,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"12340:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2682,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"12348:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2689,"nodeType":"IfStatement","src":"12307:63:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2687,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2673,"id":2688,"nodeType":"Return","src":"12353:17:15"}},{"expression":{"arguments":[{"id":2691,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2663,"src":"12419:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2692,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"12426:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2693,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"12433:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2690,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"12387:31:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2673,"id":2695,"nodeType":"Return","src":"12380:57:15"}]},"documentation":{"id":2661,"nodeType":"StructuredDocumentation","src":"11895:241:15","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2697,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:15","nodeType":"FunctionDefinition","parameters":{"id":2668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2663,"mutability":"mutable","name":"input","nameLocation":"12189:5:15","nodeType":"VariableDeclaration","scope":2697,"src":"12175:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2662,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2665,"mutability":"mutable","name":"begin","nameLocation":"12212:5:15","nodeType":"VariableDeclaration","scope":2697,"src":"12204:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2664,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2667,"mutability":"mutable","name":"end","nameLocation":"12235:3:15","nodeType":"VariableDeclaration","scope":2697,"src":"12227:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2666,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:15"},"returnParameters":{"id":2673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2670,"mutability":"mutable","name":"success","nameLocation":"12273:7:15","nodeType":"VariableDeclaration","scope":2697,"src":"12268:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2669,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2672,"mutability":"mutable","name":"value","nameLocation":"12290:5:15","nodeType":"VariableDeclaration","scope":2697,"src":"12282:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2671,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:15"},"scope":3214,"src":"12141:303:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2799,"nodeType":"Block","src":"12853:881:15","statements":[{"assignments":[2712],"declarations":[{"constant":false,"id":2712,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:15","nodeType":"VariableDeclaration","scope":2799,"src":"12863:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2711,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2717,"initialValue":{"arguments":[{"id":2715,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"12891:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2713,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:15","typeDescriptions":{}}},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:15"},{"assignments":[2719],"declarations":[{"constant":false,"id":2719,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:15","nodeType":"VariableDeclaration","scope":2799,"src":"12945:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2718,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2739,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2720,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"12963:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2721,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"12969:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2725,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2729,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"13013:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2730,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"13021:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2728,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"12990:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2726,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:15","typeDescriptions":{}}},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2733,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:15","typeDescriptions":{}}},"id":2736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:15"},{"assignments":[2741],"declarations":[{"constant":false,"id":2741,"mutability":"mutable","name":"offset","nameLocation":"13133:6:15","nodeType":"VariableDeclaration","scope":2799,"src":"13125:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2740,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2747,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2742,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"13142:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6635,"src":"13142:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:15"},{"assignments":[2749],"declarations":[{"constant":false,"id":2749,"mutability":"mutable","name":"result","nameLocation":"13183:6:15","nodeType":"VariableDeclaration","scope":2799,"src":"13175:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2748,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2751,"initialValue":{"hexValue":"30","id":2750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:15"},{"body":{"id":2793,"nodeType":"Block","src":"13250:447:15","statements":[{"assignments":[2765],"declarations":[{"constant":false,"id":2765,"mutability":"mutable","name":"chr","nameLocation":"13270:3:15","nodeType":"VariableDeclaration","scope":2793,"src":"13264:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2764,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2775,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2770,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"13319:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2771,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"13327:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2769,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"13296:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2767,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:15","typeDescriptions":{}}},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2766,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"13276:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2776,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"13349:3:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2783,"nodeType":"IfStatement","src":"13345:31:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2781,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2710,"id":2782,"nodeType":"Return","src":"13359:17:15"}},{"expression":{"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2784,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"13390:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2787,"nodeType":"ExpressionStatement","src":"13390:12:15"},{"id":2792,"nodeType":"UncheckedBlock","src":"13416:271:15","statements":[{"expression":{"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2788,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"13659:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2789,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"13669:3:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2791,"nodeType":"ExpressionStatement","src":"13659:13:15"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2758,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"13236:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2759,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"13240:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2794,"initializationExpression":{"assignments":[2753],"declarations":[{"constant":false,"id":2753,"mutability":"mutable","name":"i","nameLocation":"13216:1:15","nodeType":"VariableDeclaration","scope":2794,"src":"13208:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2752,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2757,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2754,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"13220:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2755,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"13228:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:15"},"loopExpression":{"expression":{"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:15","subExpression":{"id":2761,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"13247:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2763,"nodeType":"ExpressionStatement","src":"13245:3:15"},"nodeType":"ForStatement","src":"13203:494:15"},{"expression":{"components":[{"hexValue":"74727565","id":2795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2796,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"13720:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2797,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2710,"id":2798,"nodeType":"Return","src":"13706:21:15"}]},"documentation":{"id":2698,"nodeType":"StructuredDocumentation","src":"12450:227:15","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2800,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:15","nodeType":"FunctionDefinition","parameters":{"id":2705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"mutability":"mutable","name":"input","nameLocation":"12746:5:15","nodeType":"VariableDeclaration","scope":2800,"src":"12732:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2699,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2702,"mutability":"mutable","name":"begin","nameLocation":"12769:5:15","nodeType":"VariableDeclaration","scope":2800,"src":"12761:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2701,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2704,"mutability":"mutable","name":"end","nameLocation":"12792:3:15","nodeType":"VariableDeclaration","scope":2800,"src":"12784:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2703,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:15"},"returnParameters":{"id":2710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2707,"mutability":"mutable","name":"success","nameLocation":"12829:7:15","nodeType":"VariableDeclaration","scope":2800,"src":"12824:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2706,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2709,"mutability":"mutable","name":"value","nameLocation":"12846:5:15","nodeType":"VariableDeclaration","scope":2800,"src":"12838:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2708,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:15"},"scope":3214,"src":"12682:1052:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2818,"nodeType":"Block","src":"14032:67:15","statements":[{"expression":{"arguments":[{"id":2809,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"14062:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2813,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"14078:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2811,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:15","typeDescriptions":{}}},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:15","memberName":"length","nodeType":"MemberAccess","src":"14072:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2808,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2819,2850],"referencedDeclaration":2850,"src":"14049:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2807,"id":2817,"nodeType":"Return","src":"14042:50:15"}]},"documentation":{"id":2801,"nodeType":"StructuredDocumentation","src":"13740:212:15","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2819,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:15","nodeType":"FunctionDefinition","parameters":{"id":2804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2803,"mutability":"mutable","name":"input","nameLocation":"13993:5:15","nodeType":"VariableDeclaration","scope":2819,"src":"13979:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2802,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:15"},"returnParameters":{"id":2807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2819,"src":"14023:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2805,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:15"},"scope":3214,"src":"13957:142:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2849,"nodeType":"Block","src":"14472:165:15","statements":[{"assignments":[2832,2834],"declarations":[{"constant":false,"id":2832,"mutability":"mutable","name":"success","nameLocation":"14488:7:15","nodeType":"VariableDeclaration","scope":2849,"src":"14483:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2831,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2834,"mutability":"mutable","name":"value","nameLocation":"14505:5:15","nodeType":"VariableDeclaration","scope":2849,"src":"14497:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2833,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2840,"initialValue":{"arguments":[{"id":2836,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"14530:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2837,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"14537:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2838,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"14544:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2835,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2871,2975],"referencedDeclaration":2975,"src":"14514:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:15"},{"condition":{"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:15","subExpression":{"id":2841,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"14563:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2846,"nodeType":"IfStatement","src":"14558:50:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2843,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"14579:27:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2845,"nodeType":"RevertStatement","src":"14572:36:15"}},{"expression":{"id":2847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"14625:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2830,"id":2848,"nodeType":"Return","src":"14618:12:15"}]},"documentation":{"id":2820,"nodeType":"StructuredDocumentation","src":"14105:259:15","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2850,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:15","nodeType":"FunctionDefinition","parameters":{"id":2827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2822,"mutability":"mutable","name":"input","nameLocation":"14405:5:15","nodeType":"VariableDeclaration","scope":2850,"src":"14391:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2821,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2824,"mutability":"mutable","name":"begin","nameLocation":"14420:5:15","nodeType":"VariableDeclaration","scope":2850,"src":"14412:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2823,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2826,"mutability":"mutable","name":"end","nameLocation":"14435:3:15","nodeType":"VariableDeclaration","scope":2850,"src":"14427:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2825,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:15"},"returnParameters":{"id":2830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2850,"src":"14463:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2828,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:15"},"scope":3214,"src":"14369:268:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2870,"nodeType":"Block","src":"14944:70:15","statements":[{"expression":{"arguments":[{"id":2861,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"14977:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2865,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"14993:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2863,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:15","typeDescriptions":{}}},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:15","memberName":"length","nodeType":"MemberAccess","src":"14987:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2860,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2871,2975],"referencedDeclaration":2975,"src":"14961:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2859,"id":2869,"nodeType":"Return","src":"14954:53:15"}]},"documentation":{"id":2851,"nodeType":"StructuredDocumentation","src":"14643:198:15","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":2871,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:15","nodeType":"FunctionDefinition","parameters":{"id":2854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"mutability":"mutable","name":"input","nameLocation":"14885:5:15","nodeType":"VariableDeclaration","scope":2871,"src":"14871:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2852,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:15"},"returnParameters":{"id":2859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2856,"mutability":"mutable","name":"success","nameLocation":"14920:7:15","nodeType":"VariableDeclaration","scope":2871,"src":"14915:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2855,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2858,"mutability":"mutable","name":"value","nameLocation":"14937:5:15","nodeType":"VariableDeclaration","scope":2871,"src":"14929:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2857,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:15"},"scope":3214,"src":"14846:168:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2974,"nodeType":"Block","src":"15407:733:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2885,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"15421:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2888,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"15433:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2886,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:15","typeDescriptions":{}}},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:15","memberName":"length","nodeType":"MemberAccess","src":"15427:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2892,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"15450:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2893,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"15458:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2903,"nodeType":"IfStatement","src":"15417:72:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2897,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:15","typeDescriptions":{}}},"id":2900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2901,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2884,"id":2902,"nodeType":"Return","src":"15463:26:15"}},{"assignments":[2905],"declarations":[{"constant":false,"id":2905,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:15","nodeType":"VariableDeclaration","scope":2974,"src":"15500:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2904,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2928,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2906,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"15518:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2907,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"15524:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2911,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2917,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"15574:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2915,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:15","typeDescriptions":{}}},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2919,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"15582:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2914,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"15545:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2912,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:15","typeDescriptions":{}}},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2922,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:15","typeDescriptions":{}}},"id":2925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:15"},{"assignments":[2930],"declarations":[{"constant":false,"id":2930,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:15","nodeType":"VariableDeclaration","scope":2974,"src":"15686:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2929,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2938,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":2931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:15","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2932,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"15716:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6635,"src":"15716:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2939,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"15803:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2940,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"15809:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2942,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"15818:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2972,"nodeType":"Block","src":"16083:51:15","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":2965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2966,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:15","typeDescriptions":{}}},"id":2969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2970,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2884,"id":2971,"nodeType":"Return","src":"16097:26:15"}]},"id":2973,"nodeType":"IfStatement","src":"15799:335:15","trueBody":{"id":2964,"nodeType":"Block","src":"15834:243:15","statements":[{"assignments":[2945,2947],"declarations":[{"constant":false,"id":2945,"mutability":"mutable","name":"s","nameLocation":"15955:1:15","nodeType":"VariableDeclaration","scope":2964,"src":"15950:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2944,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2947,"mutability":"mutable","name":"v","nameLocation":"15966:1:15","nodeType":"VariableDeclaration","scope":2964,"src":"15958:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2946,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2953,"initialValue":{"arguments":[{"id":2949,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"16003:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2950,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"16010:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2951,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"16017:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2948,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"15971:31:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:15"},{"expression":{"components":[{"id":2954,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"16043:1:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":2959,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"16062:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2957,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:15","typeDescriptions":{}}},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2955,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:15","typeDescriptions":{}}},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2962,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2884,"id":2963,"nodeType":"Return","src":"16035:31:15"}]}}]},"documentation":{"id":2872,"nodeType":"StructuredDocumentation","src":"15020:226:15","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":2975,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:15","nodeType":"FunctionDefinition","parameters":{"id":2879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2874,"mutability":"mutable","name":"input","nameLocation":"15299:5:15","nodeType":"VariableDeclaration","scope":2975,"src":"15285:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2873,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2876,"mutability":"mutable","name":"begin","nameLocation":"15322:5:15","nodeType":"VariableDeclaration","scope":2975,"src":"15314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2875,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2878,"mutability":"mutable","name":"end","nameLocation":"15345:3:15","nodeType":"VariableDeclaration","scope":2975,"src":"15337:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2877,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:15"},"returnParameters":{"id":2884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2881,"mutability":"mutable","name":"success","nameLocation":"15383:7:15","nodeType":"VariableDeclaration","scope":2975,"src":"15378:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2880,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2883,"mutability":"mutable","name":"value","nameLocation":"15400:5:15","nodeType":"VariableDeclaration","scope":2975,"src":"15392:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2882,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:15"},"scope":3214,"src":"15251:889:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3034,"nodeType":"Block","src":"16209:461:15","statements":[{"assignments":[2983],"declarations":[{"constant":false,"id":2983,"mutability":"mutable","name":"value","nameLocation":"16225:5:15","nodeType":"VariableDeclaration","scope":3034,"src":"16219:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2982,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2988,"initialValue":{"arguments":[{"id":2986,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"16239:3:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2984,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:15","typeDescriptions":{}}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:15"},{"id":3031,"nodeType":"UncheckedBlock","src":"16403:238:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"16431:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:15","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"16445:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":2993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:15","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"16491:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:15","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"16505:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":3004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:15","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"16552:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":3012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"16566:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":3015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:15","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":3024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3023,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3022,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:15","memberName":"max","nodeType":"MemberAccess","src":"16615:15:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2981,"id":3027,"nodeType":"Return","src":"16608:22:15"},"id":3028,"nodeType":"IfStatement","src":"16548:82:15","trueBody":{"expression":{"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"16578:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:15","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3021,"nodeType":"ExpressionStatement","src":"16578:11:15"}},"id":3029,"nodeType":"IfStatement","src":"16487:143:15","trueBody":{"expression":{"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"16518:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":3008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:15","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3010,"nodeType":"ExpressionStatement","src":"16518:11:15"}},"id":3030,"nodeType":"IfStatement","src":"16427:203:15","trueBody":{"expression":{"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"16457:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":2997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:15","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2999,"nodeType":"ExpressionStatement","src":"16457:11:15"}}]},{"expression":{"id":3032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"16658:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2981,"id":3033,"nodeType":"Return","src":"16651:12:15"}]},"id":3035,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:15","nodeType":"FunctionDefinition","parameters":{"id":2978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2977,"mutability":"mutable","name":"chr","nameLocation":"16175:3:15","nodeType":"VariableDeclaration","scope":3035,"src":"16168:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2976,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:15"},"returnParameters":{"id":2981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3035,"src":"16202:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2979,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:15"},"scope":3214,"src":"16146:524:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3200,"nodeType":"Block","src":"17336:1331:15","statements":[{"assignments":[3044],"declarations":[{"constant":false,"id":3044,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:15","nodeType":"VariableDeclaration","scope":3200,"src":"17346:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3043,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3049,"initialValue":{"arguments":[{"id":3047,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"17374:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3045,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:15","typeDescriptions":{}}},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:15"},{"assignments":[3051],"declarations":[{"constant":false,"id":3051,"mutability":"mutable","name":"output","nameLocation":"17403:6:15","nodeType":"VariableDeclaration","scope":3200,"src":"17390:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3050,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3059,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3055,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"17426:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:15","memberName":"length","nodeType":"MemberAccess","src":"17426:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3052,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:15"},{"assignments":[3061],"declarations":[{"constant":false,"id":3061,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:15","nodeType":"VariableDeclaration","scope":3200,"src":"17473:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3060,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3063,"initialValue":{"hexValue":"30","id":3062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:15"},{"body":{"id":3192,"nodeType":"Block","src":"17548:854:15","statements":[{"assignments":[3075],"declarations":[{"constant":false,"id":3075,"mutability":"mutable","name":"char","nameLocation":"17569:4:15","nodeType":"VariableDeclaration","scope":3192,"src":"17562:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3074,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3083,"initialValue":{"arguments":[{"arguments":[{"id":3079,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"17606:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3080,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"17614:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3078,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"17583:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3076,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:15","typeDescriptions":{}}},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:15"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3084,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"17637:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":3088,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"17672:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3086,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:15","typeDescriptions":{}}},"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3091,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3093,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3096,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3190,"nodeType":"Block","src":"18330:62:15","statements":[{"expression":{"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3183,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"18348:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3186,"indexExpression":{"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:15","subExpression":{"id":3184,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"18355:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3187,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"18373:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3189,"nodeType":"ExpressionStatement","src":"18348:29:15"}]},"id":3191,"nodeType":"IfStatement","src":"17631:761:15","trueBody":{"id":3182,"nodeType":"Block","src":"17687:637:15","statements":[{"expression":{"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3097,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"17705:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3100,"indexExpression":{"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:15","subExpression":{"id":3098,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"17712:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3103,"nodeType":"ExpressionStatement","src":"17705:29:15"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3104,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"17756:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":3105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3114,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"17825:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":3115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:15","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3124,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"17894:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":3125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3134,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"17963:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":3135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:15","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3144,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"18032:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":3145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:15","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3154,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"18101:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:15","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3164,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"18171:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":3165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:15","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3175,"nodeType":"IfStatement","src":"18167:143:15","trueBody":{"id":3174,"nodeType":"Block","src":"18185:125:15","statements":[{"expression":{"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3167,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"18263:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3170,"indexExpression":{"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:15","subExpression":{"id":3168,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"18270:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":3171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3173,"nodeType":"ExpressionStatement","src":"18263:28:15"}]}},"id":3176,"nodeType":"IfStatement","src":"18097:213:15","trueBody":{"expression":{"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3157,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"18115:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3160,"indexExpression":{"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:15","subExpression":{"id":3158,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"18122:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3163,"nodeType":"ExpressionStatement","src":"18115:29:15"}},"id":3177,"nodeType":"IfStatement","src":"18028:282:15","trueBody":{"expression":{"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3147,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"18046:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3150,"indexExpression":{"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:15","subExpression":{"id":3148,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"18053:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":3151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3153,"nodeType":"ExpressionStatement","src":"18046:28:15"}},"id":3178,"nodeType":"IfStatement","src":"17959:351:15","trueBody":{"expression":{"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3137,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"17977:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3140,"indexExpression":{"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:15","subExpression":{"id":3138,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"17984:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":3141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3143,"nodeType":"ExpressionStatement","src":"17977:28:15"}},"id":3179,"nodeType":"IfStatement","src":"17890:420:15","trueBody":{"expression":{"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3127,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"17908:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3130,"indexExpression":{"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:15","subExpression":{"id":3128,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"17915:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":3131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3133,"nodeType":"ExpressionStatement","src":"17908:28:15"}},"id":3180,"nodeType":"IfStatement","src":"17821:489:15","trueBody":{"expression":{"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3117,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"17839:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3120,"indexExpression":{"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:15","subExpression":{"id":3118,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"17846:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":3121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3123,"nodeType":"ExpressionStatement","src":"17839:28:15"}},"id":3181,"nodeType":"IfStatement","src":"17752:558:15","trueBody":{"expression":{"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3107,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"17770:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3110,"indexExpression":{"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:15","subExpression":{"id":3108,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"17777:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":3111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3113,"nodeType":"ExpressionStatement","src":"17770:28:15"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3067,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"17524:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3068,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"17528:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:15","memberName":"length","nodeType":"MemberAccess","src":"17528:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3193,"initializationExpression":{"assignments":[3065],"declarations":[{"constant":false,"id":3065,"mutability":"mutable","name":"i","nameLocation":"17521:1:15","nodeType":"VariableDeclaration","scope":3193,"src":"17513:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3064,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3066,"nodeType":"VariableDeclarationStatement","src":"17513:9:15"},"loopExpression":{"expression":{"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:15","subExpression":{"id":3071,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"17545:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3073,"nodeType":"ExpressionStatement","src":"17543:3:15"},"nodeType":"ForStatement","src":"17508:894:15"},{"AST":{"nodeType":"YulBlock","src":"18500:129:15","statements":[{"expression":{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18521:6:15"},{"name":"outputLength","nodeType":"YulIdentifier","src":"18529:12:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18514:6:15"},"nodeType":"YulFunctionCall","src":"18514:28:15"},"nodeType":"YulExpressionStatement","src":"18514:28:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18562:4:15","type":"","value":"0x40"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18572:6:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18584:1:15","type":"","value":"5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18591:1:15","type":"","value":"5"},{"arguments":[{"name":"outputLength","nodeType":"YulIdentifier","src":"18598:12:15"},{"kind":"number","nodeType":"YulLiteral","src":"18612:2:15","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18594:3:15"},"nodeType":"YulFunctionCall","src":"18594:21:15"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18587:3:15"},"nodeType":"YulFunctionCall","src":"18587:29:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18580:3:15"},"nodeType":"YulFunctionCall","src":"18580:37:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18568:3:15"},"nodeType":"YulFunctionCall","src":"18568:50:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18555:6:15"},"nodeType":"YulFunctionCall","src":"18555:64:15"},"nodeType":"YulExpressionStatement","src":"18555:64:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":3051,"isOffset":false,"isSlot":false,"src":"18521:6:15","valueSize":1},{"declaration":3051,"isOffset":false,"isSlot":false,"src":"18572:6:15","valueSize":1},{"declaration":3061,"isOffset":false,"isSlot":false,"src":"18529:12:15","valueSize":1},{"declaration":3061,"isOffset":false,"isSlot":false,"src":"18598:12:15","valueSize":1}],"flags":["memory-safe"],"id":3194,"nodeType":"InlineAssembly","src":"18475:154:15"},{"expression":{"arguments":[{"id":3197,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"18653:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3195,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:15","typeDescriptions":{}}},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3042,"id":3199,"nodeType":"Return","src":"18639:21:15"}]},"documentation":{"id":3036,"nodeType":"StructuredDocumentation","src":"16676:576:15","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":3201,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:15","nodeType":"FunctionDefinition","parameters":{"id":3039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3038,"mutability":"mutable","name":"input","nameLocation":"17291:5:15","nodeType":"VariableDeclaration","scope":3201,"src":"17277:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3037,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:15"},"returnParameters":{"id":3042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3201,"src":"17321:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3040,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:15"},"scope":3214,"src":"17257:1410:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3212,"nodeType":"Block","src":"19052:225:15","statements":[{"AST":{"nodeType":"YulBlock","src":"19201:70:15","statements":[{"nodeType":"YulAssignment","src":"19215:46:15","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"19238:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"19246:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19234:3:15"},"nodeType":"YulFunctionCall","src":"19234:17:15"},{"name":"offset","nodeType":"YulIdentifier","src":"19253:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19230:3:15"},"nodeType":"YulFunctionCall","src":"19230:30:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19224:5:15"},"nodeType":"YulFunctionCall","src":"19224:37:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19215:5:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3204,"isOffset":false,"isSlot":false,"src":"19238:6:15","valueSize":1},{"declaration":3206,"isOffset":false,"isSlot":false,"src":"19253:6:15","valueSize":1},{"declaration":3209,"isOffset":false,"isSlot":false,"src":"19215:5:15","valueSize":1}],"flags":["memory-safe"],"id":3211,"nodeType":"InlineAssembly","src":"19176:95:15"}]},"documentation":{"id":3202,"nodeType":"StructuredDocumentation","src":"18673:268:15","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3213,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:15","nodeType":"FunctionDefinition","parameters":{"id":3207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3204,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:15","nodeType":"VariableDeclaration","scope":3213,"src":"18978:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3203,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3206,"mutability":"mutable","name":"offset","nameLocation":"19007:6:15","nodeType":"VariableDeclaration","scope":3213,"src":"18999:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3205,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:15"},"returnParameters":{"id":3210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3209,"mutability":"mutable","name":"value","nameLocation":"19045:5:15","nodeType":"VariableDeclaration","scope":3213,"src":"19037:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3208,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:15"},"scope":3214,"src":"18946:331:15","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3215,"src":"297:18982:15","usedErrors":[1872,1875,1878],"usedEvents":[]}],"src":"101:19179:15"},"id":15},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3238],"IERC165":[3250]},"id":3239,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3216,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3218,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3239,"sourceUnit":3251,"src":"140:38:16","symbolAliases":[{"foreign":{"id":3217,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"148:7:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3220,"name":"IERC165","nameLocations":["688:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":3250,"src":"688:7:16"},"id":3221,"nodeType":"InheritanceSpecifier","src":"688:7:16"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3219,"nodeType":"StructuredDocumentation","src":"180:479:16","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":3238,"linearizedBaseContracts":[3238,3250],"name":"ERC165","nameLocation":"678:6:16","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3249],"body":{"id":3236,"nodeType":"Block","src":"812:64:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3229,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"829:11:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3231,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"849:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3250_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3250_$","typeString":"type(contract IERC165)"}],"id":3230,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"844:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"844:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3250","typeString":"type(contract IERC165)"}},"id":3233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"858:11:16","memberName":"interfaceId","nodeType":"MemberAccess","src":"844:25:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"829:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3228,"id":3235,"nodeType":"Return","src":"822:47:16"}]},"documentation":{"id":3222,"nodeType":"StructuredDocumentation","src":"702:23:16","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":3237,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"739:17:16","nodeType":"FunctionDefinition","parameters":{"id":3225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3224,"mutability":"mutable","name":"interfaceId","nameLocation":"764:11:16","nodeType":"VariableDeclaration","scope":3237,"src":"757:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3223,"name":"bytes4","nodeType":"ElementaryTypeName","src":"757:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"756:20:16"},"returnParameters":{"id":3228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3237,"src":"806:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3226,"name":"bool","nodeType":"ElementaryTypeName","src":"806:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"805:6:16"},"scope":3238,"src":"730:146:16","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3239,"src":"660:218:16","usedErrors":[],"usedEvents":[]}],"src":"114:765:16"},"id":16},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3250]},"id":3251,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3240,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3241,"nodeType":"StructuredDocumentation","src":"142:280:17","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3250,"linearizedBaseContracts":[3250],"name":"IERC165","nameLocation":"433:7:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3242,"nodeType":"StructuredDocumentation","src":"447:340:17","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3249,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:17","nodeType":"FunctionDefinition","parameters":{"id":3245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:17","nodeType":"VariableDeclaration","scope":3249,"src":"819:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3243,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:17"},"returnParameters":{"id":3248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3249,"src":"862:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3246,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:17"},"scope":3250,"src":"792:76:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3251,"src":"423:447:17","usedErrors":[],"usedEvents":[]}],"src":"115:756:17"},"id":17},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4871],"Panic":[1743],"SafeCast":[6636]},"id":4872,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3252,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3254,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4872,"sourceUnit":1744,"src":"129:35:18","symbolAliases":[{"foreign":{"id":3253,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"137:5:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3256,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4872,"sourceUnit":6637,"src":"165:40:18","symbolAliases":[{"foreign":{"id":3255,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"173:8:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3257,"nodeType":"StructuredDocumentation","src":"207:73:18","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4871,"linearizedBaseContracts":[4871],"name":"Math","nameLocation":"289:4:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3262,"members":[{"id":3258,"name":"Floor","nameLocation":"324:5:18","nodeType":"EnumValue","src":"324:5:18"},{"id":3259,"name":"Ceil","nameLocation":"367:4:18","nodeType":"EnumValue","src":"367:4:18"},{"id":3260,"name":"Trunc","nameLocation":"409:5:18","nodeType":"EnumValue","src":"409:5:18"},{"id":3261,"name":"Expand","nameLocation":"439:6:18","nodeType":"EnumValue","src":"439:6:18"}],"name":"Rounding","nameLocation":"305:8:18","nodeType":"EnumDefinition","src":"300:169:18"},{"body":{"id":3275,"nodeType":"Block","src":"731:112:18","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:18","statements":[{"nodeType":"YulAssignment","src":"780:16:18","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:18"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:18"},"nodeType":"YulFunctionCall","src":"787:9:18"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:18"}]},{"nodeType":"YulAssignment","src":"809:18:18","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:18"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:18"},"nodeType":"YulFunctionCall","src":"817:10:18"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3265,"isOffset":false,"isSlot":false,"src":"791:1:18","valueSize":1},{"declaration":3265,"isOffset":false,"isSlot":false,"src":"825:1:18","valueSize":1},{"declaration":3267,"isOffset":false,"isSlot":false,"src":"794:1:18","valueSize":1},{"declaration":3270,"isOffset":false,"isSlot":false,"src":"809:4:18","valueSize":1},{"declaration":3272,"isOffset":false,"isSlot":false,"src":"780:3:18","valueSize":1},{"declaration":3272,"isOffset":false,"isSlot":false,"src":"820:3:18","valueSize":1}],"flags":["memory-safe"],"id":3274,"nodeType":"InlineAssembly","src":"741:96:18"}]},"documentation":{"id":3263,"nodeType":"StructuredDocumentation","src":"475:163:18","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":3276,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:18","nodeType":"FunctionDefinition","parameters":{"id":3268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3265,"mutability":"mutable","name":"a","nameLocation":"667:1:18","nodeType":"VariableDeclaration","scope":3276,"src":"659:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3264,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3267,"mutability":"mutable","name":"b","nameLocation":"678:1:18","nodeType":"VariableDeclaration","scope":3276,"src":"670:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3266,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:18"},"returnParameters":{"id":3273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3270,"mutability":"mutable","name":"high","nameLocation":"712:4:18","nodeType":"VariableDeclaration","scope":3276,"src":"704:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3269,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3272,"mutability":"mutable","name":"low","nameLocation":"726:3:18","nodeType":"VariableDeclaration","scope":3276,"src":"718:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3271,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:18"},"scope":4871,"src":"643:200:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3289,"nodeType":"Block","src":"1115:462:18","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:18","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:18"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:18"},"nodeType":"YulFunctionCall","src":"1474:6:18"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:18"},"nodeType":"YulFunctionCall","src":"1461:20:18"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:18","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:18","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:18"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:18"},"nodeType":"YulFunctionCall","src":"1501:9:18"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:18"}]},{"nodeType":"YulAssignment","src":"1523:38:18","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:18"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:18"},"nodeType":"YulFunctionCall","src":"1535:12:18"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:18"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:18"},"nodeType":"YulFunctionCall","src":"1549:11:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:18"},"nodeType":"YulFunctionCall","src":"1531:30:18"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3279,"isOffset":false,"isSlot":false,"src":"1468:1:18","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"1505:1:18","valueSize":1},{"declaration":3281,"isOffset":false,"isSlot":false,"src":"1471:1:18","valueSize":1},{"declaration":3281,"isOffset":false,"isSlot":false,"src":"1508:1:18","valueSize":1},{"declaration":3284,"isOffset":false,"isSlot":false,"src":"1523:4:18","valueSize":1},{"declaration":3286,"isOffset":false,"isSlot":false,"src":"1494:3:18","valueSize":1},{"declaration":3286,"isOffset":false,"isSlot":false,"src":"1543:3:18","valueSize":1},{"declaration":3286,"isOffset":false,"isSlot":false,"src":"1556:3:18","valueSize":1}],"flags":["memory-safe"],"id":3288,"nodeType":"InlineAssembly","src":"1412:159:18"}]},"documentation":{"id":3277,"nodeType":"StructuredDocumentation","src":"849:173:18","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":3290,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:18","nodeType":"FunctionDefinition","parameters":{"id":3282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3279,"mutability":"mutable","name":"a","nameLocation":"1051:1:18","nodeType":"VariableDeclaration","scope":3290,"src":"1043:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3278,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3281,"mutability":"mutable","name":"b","nameLocation":"1062:1:18","nodeType":"VariableDeclaration","scope":3290,"src":"1054:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3280,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:18"},"returnParameters":{"id":3287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3284,"mutability":"mutable","name":"high","nameLocation":"1096:4:18","nodeType":"VariableDeclaration","scope":3290,"src":"1088:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3283,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3286,"mutability":"mutable","name":"low","nameLocation":"1110:3:18","nodeType":"VariableDeclaration","scope":3290,"src":"1102:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3285,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:18"},"scope":4871,"src":"1027:550:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3324,"nodeType":"Block","src":"1784:149:18","statements":[{"id":3323,"nodeType":"UncheckedBlock","src":"1794:133:18","statements":[{"assignments":[3303],"declarations":[{"constant":false,"id":3303,"mutability":"mutable","name":"c","nameLocation":"1826:1:18","nodeType":"VariableDeclaration","scope":3323,"src":"1818:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3302,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3307,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3304,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"1830:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3305,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"1834:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:18"},{"expression":{"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3308,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"1849:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3309,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"1859:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3310,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"1864:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3313,"nodeType":"ExpressionStatement","src":"1849:16:18"},{"expression":{"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3314,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"1879:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3315,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"1888:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3318,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"1908:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3316,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"1892:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6636_$","typeString":"type(library SafeCast)"}},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6635,"src":"1892:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3322,"nodeType":"ExpressionStatement","src":"1879:37:18"}]}]},"documentation":{"id":3291,"nodeType":"StructuredDocumentation","src":"1583:105:18","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":3325,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:18","nodeType":"FunctionDefinition","parameters":{"id":3296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3293,"mutability":"mutable","name":"a","nameLocation":"1717:1:18","nodeType":"VariableDeclaration","scope":3325,"src":"1709:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3292,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3295,"mutability":"mutable","name":"b","nameLocation":"1728:1:18","nodeType":"VariableDeclaration","scope":3325,"src":"1720:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3294,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:18"},"returnParameters":{"id":3301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3298,"mutability":"mutable","name":"success","nameLocation":"1759:7:18","nodeType":"VariableDeclaration","scope":3325,"src":"1754:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3297,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3300,"mutability":"mutable","name":"result","nameLocation":"1776:6:18","nodeType":"VariableDeclaration","scope":3325,"src":"1768:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3299,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:18"},"scope":4871,"src":"1693:240:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3359,"nodeType":"Block","src":"2143:149:18","statements":[{"id":3358,"nodeType":"UncheckedBlock","src":"2153:133:18","statements":[{"assignments":[3338],"declarations":[{"constant":false,"id":3338,"mutability":"mutable","name":"c","nameLocation":"2185:1:18","nodeType":"VariableDeclaration","scope":3358,"src":"2177:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3337,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3342,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3339,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"2189:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3340,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"2193:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:18"},{"expression":{"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3343,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"2208:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3344,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"2218:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3345,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"2223:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3348,"nodeType":"ExpressionStatement","src":"2208:16:18"},{"expression":{"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3349,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"2238:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3350,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"2247:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3353,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"2267:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3351,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"2251:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6636_$","typeString":"type(library SafeCast)"}},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6635,"src":"2251:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3357,"nodeType":"ExpressionStatement","src":"2238:37:18"}]}]},"documentation":{"id":3326,"nodeType":"StructuredDocumentation","src":"1939:108:18","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":3360,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:18","nodeType":"FunctionDefinition","parameters":{"id":3331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3328,"mutability":"mutable","name":"a","nameLocation":"2076:1:18","nodeType":"VariableDeclaration","scope":3360,"src":"2068:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3327,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3330,"mutability":"mutable","name":"b","nameLocation":"2087:1:18","nodeType":"VariableDeclaration","scope":3360,"src":"2079:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3329,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:18"},"returnParameters":{"id":3336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3333,"mutability":"mutable","name":"success","nameLocation":"2118:7:18","nodeType":"VariableDeclaration","scope":3360,"src":"2113:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3332,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3335,"mutability":"mutable","name":"result","nameLocation":"2135:6:18","nodeType":"VariableDeclaration","scope":3360,"src":"2127:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3334,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:18"},"scope":4871,"src":"2052:240:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3389,"nodeType":"Block","src":"2505:391:18","statements":[{"id":3388,"nodeType":"UncheckedBlock","src":"2515:375:18","statements":[{"assignments":[3373],"declarations":[{"constant":false,"id":3373,"mutability":"mutable","name":"c","nameLocation":"2547:1:18","nodeType":"VariableDeclaration","scope":3388,"src":"2539:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3372,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3377,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3374,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"2551:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3375,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"2555:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:18"},{"AST":{"nodeType":"YulBlock","src":"2595:188:18","statements":[{"nodeType":"YulAssignment","src":"2727:42:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:18"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:18"},"nodeType":"YulFunctionCall","src":"2744:9:18"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:18"},"nodeType":"YulFunctionCall","src":"2741:16:18"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:18"},"nodeType":"YulFunctionCall","src":"2759:9:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:18"},"nodeType":"YulFunctionCall","src":"2738:31:18"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3363,"isOffset":false,"isSlot":false,"src":"2751:1:18","valueSize":1},{"declaration":3363,"isOffset":false,"isSlot":false,"src":"2766:1:18","valueSize":1},{"declaration":3365,"isOffset":false,"isSlot":false,"src":"2755:1:18","valueSize":1},{"declaration":3373,"isOffset":false,"isSlot":false,"src":"2748:1:18","valueSize":1},{"declaration":3368,"isOffset":false,"isSlot":false,"src":"2727:7:18","valueSize":1}],"flags":["memory-safe"],"id":3378,"nodeType":"InlineAssembly","src":"2570:213:18"},{"expression":{"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3379,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"2842:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3380,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"2851:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3383,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"2871:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3381,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"2855:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6636_$","typeString":"type(library SafeCast)"}},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6635,"src":"2855:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3387,"nodeType":"ExpressionStatement","src":"2842:37:18"}]}]},"documentation":{"id":3361,"nodeType":"StructuredDocumentation","src":"2298:111:18","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":3390,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:18","nodeType":"FunctionDefinition","parameters":{"id":3366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3363,"mutability":"mutable","name":"a","nameLocation":"2438:1:18","nodeType":"VariableDeclaration","scope":3390,"src":"2430:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3362,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3365,"mutability":"mutable","name":"b","nameLocation":"2449:1:18","nodeType":"VariableDeclaration","scope":3390,"src":"2441:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3364,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:18"},"returnParameters":{"id":3371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3368,"mutability":"mutable","name":"success","nameLocation":"2480:7:18","nodeType":"VariableDeclaration","scope":3390,"src":"2475:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3367,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3370,"mutability":"mutable","name":"result","nameLocation":"2497:6:18","nodeType":"VariableDeclaration","scope":3390,"src":"2489:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3369,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:18"},"scope":4871,"src":"2414:482:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3410,"nodeType":"Block","src":"3111:231:18","statements":[{"id":3409,"nodeType":"UncheckedBlock","src":"3121:215:18","statements":[{"expression":{"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3402,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"3145:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3403,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"3155:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3407,"nodeType":"ExpressionStatement","src":"3145:15:18"},{"AST":{"nodeType":"YulBlock","src":"3199:127:18","statements":[{"nodeType":"YulAssignment","src":"3293:19:18","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:18"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:18"},"nodeType":"YulFunctionCall","src":"3303:9:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3393,"isOffset":false,"isSlot":false,"src":"3307:1:18","valueSize":1},{"declaration":3395,"isOffset":false,"isSlot":false,"src":"3310:1:18","valueSize":1},{"declaration":3400,"isOffset":false,"isSlot":false,"src":"3293:6:18","valueSize":1}],"flags":["memory-safe"],"id":3408,"nodeType":"InlineAssembly","src":"3174:152:18"}]}]},"documentation":{"id":3391,"nodeType":"StructuredDocumentation","src":"2902:113:18","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3411,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:18","nodeType":"FunctionDefinition","parameters":{"id":3396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3393,"mutability":"mutable","name":"a","nameLocation":"3044:1:18","nodeType":"VariableDeclaration","scope":3411,"src":"3036:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3392,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3395,"mutability":"mutable","name":"b","nameLocation":"3055:1:18","nodeType":"VariableDeclaration","scope":3411,"src":"3047:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3394,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:18"},"returnParameters":{"id":3401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3398,"mutability":"mutable","name":"success","nameLocation":"3086:7:18","nodeType":"VariableDeclaration","scope":3411,"src":"3081:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3397,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3400,"mutability":"mutable","name":"result","nameLocation":"3103:6:18","nodeType":"VariableDeclaration","scope":3411,"src":"3095:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3399,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:18"},"scope":4871,"src":"3020:322:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3431,"nodeType":"Block","src":"3567:231:18","statements":[{"id":3430,"nodeType":"UncheckedBlock","src":"3577:215:18","statements":[{"expression":{"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3423,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"3601:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3424,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"3611:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3428,"nodeType":"ExpressionStatement","src":"3601:15:18"},{"AST":{"nodeType":"YulBlock","src":"3655:127:18","statements":[{"nodeType":"YulAssignment","src":"3749:19:18","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:18"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:18"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:18"},"nodeType":"YulFunctionCall","src":"3759:9:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3414,"isOffset":false,"isSlot":false,"src":"3763:1:18","valueSize":1},{"declaration":3416,"isOffset":false,"isSlot":false,"src":"3766:1:18","valueSize":1},{"declaration":3421,"isOffset":false,"isSlot":false,"src":"3749:6:18","valueSize":1}],"flags":["memory-safe"],"id":3429,"nodeType":"InlineAssembly","src":"3630:152:18"}]}]},"documentation":{"id":3412,"nodeType":"StructuredDocumentation","src":"3348:123:18","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3432,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:18","nodeType":"FunctionDefinition","parameters":{"id":3417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3414,"mutability":"mutable","name":"a","nameLocation":"3500:1:18","nodeType":"VariableDeclaration","scope":3432,"src":"3492:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3413,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3416,"mutability":"mutable","name":"b","nameLocation":"3511:1:18","nodeType":"VariableDeclaration","scope":3432,"src":"3503:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3415,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:18"},"returnParameters":{"id":3422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3419,"mutability":"mutable","name":"success","nameLocation":"3542:7:18","nodeType":"VariableDeclaration","scope":3432,"src":"3537:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3418,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3421,"mutability":"mutable","name":"result","nameLocation":"3559:6:18","nodeType":"VariableDeclaration","scope":3432,"src":"3551:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3420,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:18"},"scope":4871,"src":"3476:322:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3461,"nodeType":"Block","src":"3989:122:18","statements":[{"assignments":[3443,3445],"declarations":[{"constant":false,"id":3443,"mutability":"mutable","name":"success","nameLocation":"4005:7:18","nodeType":"VariableDeclaration","scope":3461,"src":"4000:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3442,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3445,"mutability":"mutable","name":"result","nameLocation":"4022:6:18","nodeType":"VariableDeclaration","scope":3461,"src":"4014:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3444,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3450,"initialValue":{"arguments":[{"id":3447,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"4039:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3448,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"4042:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3446,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"4032:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:18"},{"expression":{"arguments":[{"id":3452,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"4069:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3453,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"4078:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3455,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3454,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:18","memberName":"max","nodeType":"MemberAccess","src":"4086:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3451,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"4061:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3441,"id":3460,"nodeType":"Return","src":"4054:50:18"}]},"documentation":{"id":3433,"nodeType":"StructuredDocumentation","src":"3804:103:18","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3462,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:18","nodeType":"FunctionDefinition","parameters":{"id":3438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3435,"mutability":"mutable","name":"a","nameLocation":"3943:1:18","nodeType":"VariableDeclaration","scope":3462,"src":"3935:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3434,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3437,"mutability":"mutable","name":"b","nameLocation":"3954:1:18","nodeType":"VariableDeclaration","scope":3462,"src":"3946:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3436,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:18"},"returnParameters":{"id":3441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3462,"src":"3980:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3439,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:18"},"scope":4871,"src":"3912:199:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3481,"nodeType":"Block","src":"4294:73:18","statements":[{"assignments":[null,3473],"declarations":[null,{"constant":false,"id":3473,"mutability":"mutable","name":"result","nameLocation":"4315:6:18","nodeType":"VariableDeclaration","scope":3481,"src":"4307:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3472,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3478,"initialValue":{"arguments":[{"id":3475,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"4332:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3476,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"4335:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3474,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3360,"src":"4325:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:18"},{"expression":{"id":3479,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"4354:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3471,"id":3480,"nodeType":"Return","src":"4347:13:18"}]},"documentation":{"id":3463,"nodeType":"StructuredDocumentation","src":"4117:95:18","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":3482,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:18","nodeType":"FunctionDefinition","parameters":{"id":3468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3465,"mutability":"mutable","name":"a","nameLocation":"4248:1:18","nodeType":"VariableDeclaration","scope":3482,"src":"4240:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3464,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3467,"mutability":"mutable","name":"b","nameLocation":"4259:1:18","nodeType":"VariableDeclaration","scope":3482,"src":"4251:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3466,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:18"},"returnParameters":{"id":3471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3482,"src":"4285:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3469,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:18"},"scope":4871,"src":"4217:150:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3511,"nodeType":"Block","src":"4564:122:18","statements":[{"assignments":[3493,3495],"declarations":[{"constant":false,"id":3493,"mutability":"mutable","name":"success","nameLocation":"4580:7:18","nodeType":"VariableDeclaration","scope":3511,"src":"4575:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3492,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3495,"mutability":"mutable","name":"result","nameLocation":"4597:6:18","nodeType":"VariableDeclaration","scope":3511,"src":"4589:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3494,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3500,"initialValue":{"arguments":[{"id":3497,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"4614:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3498,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"4617:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3496,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"4607:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:18"},{"expression":{"arguments":[{"id":3502,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"4644:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3503,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"4653:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3505,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3504,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:18","memberName":"max","nodeType":"MemberAccess","src":"4661:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3501,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"4636:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3491,"id":3510,"nodeType":"Return","src":"4629:50:18"}]},"documentation":{"id":3483,"nodeType":"StructuredDocumentation","src":"4373:109:18","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3512,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:18","nodeType":"FunctionDefinition","parameters":{"id":3488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3485,"mutability":"mutable","name":"a","nameLocation":"4518:1:18","nodeType":"VariableDeclaration","scope":3512,"src":"4510:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3484,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3487,"mutability":"mutable","name":"b","nameLocation":"4529:1:18","nodeType":"VariableDeclaration","scope":3512,"src":"4521:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3486,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:18"},"returnParameters":{"id":3491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3512,"src":"4555:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3489,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:18"},"scope":4871,"src":"4487:199:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3538,"nodeType":"Block","src":"5158:207:18","statements":[{"id":3537,"nodeType":"UncheckedBlock","src":"5168:191:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3524,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"5306:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3525,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3517,"src":"5312:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3526,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"5316:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3528,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3531,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"5337:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3529,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"5321:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6636_$","typeString":"type(library SafeCast)"}},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6635,"src":"5321:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3534,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3523,"id":3536,"nodeType":"Return","src":"5299:49:18"}]}]},"documentation":{"id":3513,"nodeType":"StructuredDocumentation","src":"4692:374:18","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3539,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:18","nodeType":"FunctionDefinition","parameters":{"id":3520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3515,"mutability":"mutable","name":"condition","nameLocation":"5093:9:18","nodeType":"VariableDeclaration","scope":3539,"src":"5088:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3514,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3517,"mutability":"mutable","name":"a","nameLocation":"5112:1:18","nodeType":"VariableDeclaration","scope":3539,"src":"5104:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3516,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3519,"mutability":"mutable","name":"b","nameLocation":"5123:1:18","nodeType":"VariableDeclaration","scope":3539,"src":"5115:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3518,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:18"},"returnParameters":{"id":3523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3539,"src":"5149:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3521,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:18"},"scope":4871,"src":"5071:294:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3557,"nodeType":"Block","src":"5502:44:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3550,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"5527:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3551,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"5531:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3553,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"5534:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3554,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"5537:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3549,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"5519:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3548,"id":3556,"nodeType":"Return","src":"5512:27:18"}]},"documentation":{"id":3540,"nodeType":"StructuredDocumentation","src":"5371:59:18","text":" @dev Returns the largest of two numbers."},"id":3558,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:18","nodeType":"FunctionDefinition","parameters":{"id":3545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3542,"mutability":"mutable","name":"a","nameLocation":"5456:1:18","nodeType":"VariableDeclaration","scope":3558,"src":"5448:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3541,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3544,"mutability":"mutable","name":"b","nameLocation":"5467:1:18","nodeType":"VariableDeclaration","scope":3558,"src":"5459:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3543,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:18"},"returnParameters":{"id":3548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3558,"src":"5493:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3546,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:18"},"scope":4871,"src":"5435:111:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3576,"nodeType":"Block","src":"5684:44:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3569,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"5709:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3570,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"5713:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3572,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"5716:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3573,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"5719:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3568,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"5701:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3567,"id":3575,"nodeType":"Return","src":"5694:27:18"}]},"documentation":{"id":3559,"nodeType":"StructuredDocumentation","src":"5552:60:18","text":" @dev Returns the smallest of two numbers."},"id":3577,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:18","nodeType":"FunctionDefinition","parameters":{"id":3564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3561,"mutability":"mutable","name":"a","nameLocation":"5638:1:18","nodeType":"VariableDeclaration","scope":3577,"src":"5630:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3560,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3563,"mutability":"mutable","name":"b","nameLocation":"5649:1:18","nodeType":"VariableDeclaration","scope":3577,"src":"5641:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3562,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:18"},"returnParameters":{"id":3567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3577,"src":"5675:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3565,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:18"},"scope":4871,"src":"5617:111:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3599,"nodeType":"Block","src":"5912:82:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3587,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"5967:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3588,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"5971:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3590,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3591,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"5977:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3592,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"5981:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3594,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3586,"id":3598,"nodeType":"Return","src":"5959:28:18"}]},"documentation":{"id":3578,"nodeType":"StructuredDocumentation","src":"5734:102:18","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3600,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:18","nodeType":"FunctionDefinition","parameters":{"id":3583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3580,"mutability":"mutable","name":"a","nameLocation":"5866:1:18","nodeType":"VariableDeclaration","scope":3600,"src":"5858:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3579,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3582,"mutability":"mutable","name":"b","nameLocation":"5877:1:18","nodeType":"VariableDeclaration","scope":3600,"src":"5869:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3581,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:18"},"returnParameters":{"id":3586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3600,"src":"5903:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3584,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:18"},"scope":4871,"src":"5841:153:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3640,"nodeType":"Block","src":"6286:633:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3610,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"6300:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3621,"nodeType":"IfStatement","src":"6296:150:18","trueBody":{"id":3620,"nodeType":"Block","src":"6308:138:18","statements":[{"expression":{"arguments":[{"expression":{"id":3616,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"6412:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1743_$","typeString":"type(library Panic)"}},"id":3617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:18","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1710,"src":"6412:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3613,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"6400:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1743_$","typeString":"type(library Panic)"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"6400:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3619,"nodeType":"ExpressionStatement","src":"6400:35:18"}]}},{"id":3639,"nodeType":"UncheckedBlock","src":"6829:84:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3624,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"6876:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3622,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"6860:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6636_$","typeString":"type(library SafeCast)"}},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6635,"src":"6860:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3628,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"6887:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3631,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3632,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"6896:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3636,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3609,"id":3638,"nodeType":"Return","src":"6853:49:18"}]}]},"documentation":{"id":3601,"nodeType":"StructuredDocumentation","src":"6000:210:18","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3641,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:18","nodeType":"FunctionDefinition","parameters":{"id":3606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3603,"mutability":"mutable","name":"a","nameLocation":"6240:1:18","nodeType":"VariableDeclaration","scope":3641,"src":"6232:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3602,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3605,"mutability":"mutable","name":"b","nameLocation":"6251:1:18","nodeType":"VariableDeclaration","scope":3641,"src":"6243:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3604,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:18"},"returnParameters":{"id":3609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3641,"src":"6277:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3607,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:18"},"scope":4871,"src":"6215:704:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3776,"nodeType":"Block","src":"7340:3585:18","statements":[{"id":3775,"nodeType":"UncheckedBlock","src":"7350:3569:18","statements":[{"assignments":[3654,3656],"declarations":[{"constant":false,"id":3654,"mutability":"mutable","name":"high","nameLocation":"7383:4:18","nodeType":"VariableDeclaration","scope":3775,"src":"7375:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3653,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3656,"mutability":"mutable","name":"low","nameLocation":"7397:3:18","nodeType":"VariableDeclaration","scope":3775,"src":"7389:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3655,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3661,"initialValue":{"arguments":[{"id":3658,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3644,"src":"7411:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3659,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"7414:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3657,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"7404:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3662,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"7498:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3670,"nodeType":"IfStatement","src":"7494:365:18","trueBody":{"id":3669,"nodeType":"Block","src":"7509:350:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3665,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"7827:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3666,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"7833:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3652,"id":3668,"nodeType":"Return","src":"7820:24:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3671,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"7969:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3672,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"7984:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3689,"nodeType":"IfStatement","src":"7965:142:18","trueBody":{"id":3688,"nodeType":"Block","src":"7990:117:18","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3678,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"8028:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3681,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"8046:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1743_$","typeString":"type(library Panic)"}},"id":3682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:18","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1710,"src":"8046:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3683,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"8070:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1743_$","typeString":"type(library Panic)"}},"id":3684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:18","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1706,"src":"8070:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3677,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"8020:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3674,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"8008:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1743_$","typeString":"type(library Panic)"}},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"8008:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3687,"nodeType":"ExpressionStatement","src":"8008:84:18"}]}},{"assignments":[3691],"declarations":[{"constant":false,"id":3691,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:18","nodeType":"VariableDeclaration","scope":3775,"src":"8359:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3690,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3692,"nodeType":"VariableDeclarationStatement","src":"8359:17:18"},{"AST":{"nodeType":"YulBlock","src":"8415:283:18","statements":[{"nodeType":"YulAssignment","src":"8484:38:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:18"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:18"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:18"},"nodeType":"YulFunctionCall","src":"8497:25:18"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:18"}]},{"nodeType":"YulAssignment","src":"8604:37:18","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:18"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:18"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:18"},"nodeType":"YulFunctionCall","src":"8622:18:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:18"},"nodeType":"YulFunctionCall","src":"8612:29:18"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:18"}]},{"nodeType":"YulAssignment","src":"8658:26:18","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:18"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:18"},"nodeType":"YulFunctionCall","src":"8665:19:18"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3648,"isOffset":false,"isSlot":false,"src":"8510:11:18","valueSize":1},{"declaration":3654,"isOffset":false,"isSlot":false,"src":"8604:4:18","valueSize":1},{"declaration":3654,"isOffset":false,"isSlot":false,"src":"8616:4:18","valueSize":1},{"declaration":3656,"isOffset":false,"isSlot":false,"src":"8636:3:18","valueSize":1},{"declaration":3656,"isOffset":false,"isSlot":false,"src":"8658:3:18","valueSize":1},{"declaration":3656,"isOffset":false,"isSlot":false,"src":"8669:3:18","valueSize":1},{"declaration":3691,"isOffset":false,"isSlot":false,"src":"8484:9:18","valueSize":1},{"declaration":3691,"isOffset":false,"isSlot":false,"src":"8625:9:18","valueSize":1},{"declaration":3691,"isOffset":false,"isSlot":false,"src":"8674:9:18","valueSize":1},{"declaration":3644,"isOffset":false,"isSlot":false,"src":"8504:1:18","valueSize":1},{"declaration":3646,"isOffset":false,"isSlot":false,"src":"8507:1:18","valueSize":1}],"flags":["memory-safe"],"id":3693,"nodeType":"InlineAssembly","src":"8390:308:18"},{"assignments":[3695],"declarations":[{"constant":false,"id":3695,"mutability":"mutable","name":"twos","nameLocation":"8910:4:18","nodeType":"VariableDeclaration","scope":3775,"src":"8902:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3694,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3702,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3696,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"8917:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3698,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"8936:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3700,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:18"},{"AST":{"nodeType":"YulBlock","src":"8987:359:18","statements":[{"nodeType":"YulAssignment","src":"9052:37:18","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:18"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:18"},"nodeType":"YulFunctionCall","src":"9067:22:18"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:18"}]},{"nodeType":"YulAssignment","src":"9153:21:18","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:18"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:18"},"nodeType":"YulFunctionCall","src":"9160:14:18"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:18"}]},{"nodeType":"YulAssignment","src":"9293:39:18","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:18","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:18"},"nodeType":"YulFunctionCall","src":"9309:12:18"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:18"},"nodeType":"YulFunctionCall","src":"9305:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:18"},"nodeType":"YulFunctionCall","src":"9301:31:18"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3648,"isOffset":false,"isSlot":false,"src":"9052:11:18","valueSize":1},{"declaration":3648,"isOffset":false,"isSlot":false,"src":"9071:11:18","valueSize":1},{"declaration":3656,"isOffset":false,"isSlot":false,"src":"9153:3:18","valueSize":1},{"declaration":3656,"isOffset":false,"isSlot":false,"src":"9164:3:18","valueSize":1},{"declaration":3695,"isOffset":false,"isSlot":false,"src":"9084:4:18","valueSize":1},{"declaration":3695,"isOffset":false,"isSlot":false,"src":"9169:4:18","valueSize":1},{"declaration":3695,"isOffset":false,"isSlot":false,"src":"9293:4:18","valueSize":1},{"declaration":3695,"isOffset":false,"isSlot":false,"src":"9316:4:18","valueSize":1},{"declaration":3695,"isOffset":false,"isSlot":false,"src":"9323:4:18","valueSize":1}],"flags":["memory-safe"],"id":3703,"nodeType":"InlineAssembly","src":"8962:384:18"},{"expression":{"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3704,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"9409:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3705,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"9416:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3706,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"9423:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3709,"nodeType":"ExpressionStatement","src":"9409:18:18"},{"assignments":[3711],"declarations":[{"constant":false,"id":3711,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:18","nodeType":"VariableDeclaration","scope":3775,"src":"9762:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3710,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3718,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3713,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"9785:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3715,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:18"},{"expression":{"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3719,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"10018:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3721,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"10033:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3722,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"10047:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3726,"nodeType":"ExpressionStatement","src":"10018:36:18"},{"expression":{"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3727,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"10088:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3729,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"10103:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3730,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"10117:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3734,"nodeType":"ExpressionStatement","src":"10088:36:18"},{"expression":{"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3735,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"10160:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3737,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"10175:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3738,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"10189:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3742,"nodeType":"ExpressionStatement","src":"10160:36:18"},{"expression":{"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3743,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"10231:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3745,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"10246:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3746,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"10260:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3750,"nodeType":"ExpressionStatement","src":"10231:36:18"},{"expression":{"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3751,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"10304:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3753,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"10319:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3754,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"10333:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3758,"nodeType":"ExpressionStatement","src":"10304:36:18"},{"expression":{"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3759,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"10378:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3761,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"10393:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3762,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"10407:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3766,"nodeType":"ExpressionStatement","src":"10378:36:18"},{"expression":{"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3767,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"10859:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3768,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"10868:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3769,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"10874:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3772,"nodeType":"ExpressionStatement","src":"10859:22:18"},{"expression":{"id":3773,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"10902:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3652,"id":3774,"nodeType":"Return","src":"10895:13:18"}]}]},"documentation":{"id":3642,"nodeType":"StructuredDocumentation","src":"6925:312:18","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3777,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:18","nodeType":"FunctionDefinition","parameters":{"id":3649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3644,"mutability":"mutable","name":"x","nameLocation":"7266:1:18","nodeType":"VariableDeclaration","scope":3777,"src":"7258:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3643,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3646,"mutability":"mutable","name":"y","nameLocation":"7277:1:18","nodeType":"VariableDeclaration","scope":3777,"src":"7269:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3645,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3648,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:18","nodeType":"VariableDeclaration","scope":3777,"src":"7280:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3647,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:18"},"returnParameters":{"id":3652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3651,"mutability":"mutable","name":"result","nameLocation":"7332:6:18","nodeType":"VariableDeclaration","scope":3777,"src":"7324:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3650,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:18"},"scope":4871,"src":"7242:3683:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3813,"nodeType":"Block","src":"11164:128:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3793,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"11188:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3794,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"11191:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3795,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"11194:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3792,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3777,3814],"referencedDeclaration":3777,"src":"11181:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3800,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"11242:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3262","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3262","typeString":"enum Math.Rounding"}],"id":3799,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"11225:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3262_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3803,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"11262:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3804,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"11265:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3805,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"11268:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3802,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:18","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3797,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"11209:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6636_$","typeString":"type(library SafeCast)"}},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6635,"src":"11209:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3791,"id":3812,"nodeType":"Return","src":"11174:111:18"}]},"documentation":{"id":3778,"nodeType":"StructuredDocumentation","src":"10931:118:18","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3814,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:18","nodeType":"FunctionDefinition","parameters":{"id":3788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3780,"mutability":"mutable","name":"x","nameLocation":"11078:1:18","nodeType":"VariableDeclaration","scope":3814,"src":"11070:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3779,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3782,"mutability":"mutable","name":"y","nameLocation":"11089:1:18","nodeType":"VariableDeclaration","scope":3814,"src":"11081:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3781,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3784,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:18","nodeType":"VariableDeclaration","scope":3814,"src":"11092:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3783,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3787,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:18","nodeType":"VariableDeclaration","scope":3814,"src":"11113:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3262","typeString":"enum Math.Rounding"},"typeName":{"id":3786,"nodeType":"UserDefinedTypeName","pathNode":{"id":3785,"name":"Rounding","nameLocations":["11113:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3262,"src":"11113:8:18"},"referencedDeclaration":3262,"src":"11113:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3262","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:18"},"returnParameters":{"id":3791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3814,"src":"11155:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3789,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:18"},"scope":4871,"src":"11054:238:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3863,"nodeType":"Block","src":"11500:245:18","statements":[{"id":3862,"nodeType":"UncheckedBlock","src":"11510:229:18","statements":[{"assignments":[3827,3829],"declarations":[{"constant":false,"id":3827,"mutability":"mutable","name":"high","nameLocation":"11543:4:18","nodeType":"VariableDeclaration","scope":3862,"src":"11535:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3826,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3829,"mutability":"mutable","name":"low","nameLocation":"11557:3:18","nodeType":"VariableDeclaration","scope":3862,"src":"11549:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3828,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3834,"initialValue":{"arguments":[{"id":3831,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"11571:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3832,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"11574:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3830,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"11564:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3835,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"11594:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3837,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"11607:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3848,"nodeType":"IfStatement","src":"11590:86:18","trueBody":{"id":3847,"nodeType":"Block","src":"11610:66:18","statements":[{"expression":{"arguments":[{"expression":{"id":3843,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"11640:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1743_$","typeString":"type(library Panic)"}},"id":3844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:18","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1706,"src":"11640:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3840,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"11628:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1743_$","typeString":"type(library Panic)"}},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"11628:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3846,"nodeType":"ExpressionStatement","src":"11628:33:18"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3849,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"11697:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":3850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3851,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"11712:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":3853,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3855,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3856,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"11719:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3857,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"11726:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3859,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3825,"id":3861,"nodeType":"Return","src":"11689:39:18"}]}]},"documentation":{"id":3815,"nodeType":"StructuredDocumentation","src":"11298:111:18","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":3864,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:18","nodeType":"FunctionDefinition","parameters":{"id":3822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3817,"mutability":"mutable","name":"x","nameLocation":"11438:1:18","nodeType":"VariableDeclaration","scope":3864,"src":"11430:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3816,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3819,"mutability":"mutable","name":"y","nameLocation":"11449:1:18","nodeType":"VariableDeclaration","scope":3864,"src":"11441:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3818,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3821,"mutability":"mutable","name":"n","nameLocation":"11458:1:18","nodeType":"VariableDeclaration","scope":3864,"src":"11452:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3820,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:18"},"returnParameters":{"id":3825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3824,"mutability":"mutable","name":"result","nameLocation":"11492:6:18","nodeType":"VariableDeclaration","scope":3864,"src":"11484:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3823,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:18"},"scope":4871,"src":"11414:331:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3902,"nodeType":"Block","src":"11963:113:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3880,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"11987:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3881,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"11990:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3882,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"11993:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3879,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[3864,3903],"referencedDeclaration":3864,"src":"11980:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3887,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"12031:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3262","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3262","typeString":"enum Math.Rounding"}],"id":3886,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"12014:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3262_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3890,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"12051:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3891,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"12054:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3893,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"12062:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3889,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:18","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3884,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"11998:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6636_$","typeString":"type(library SafeCast)"}},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6635,"src":"11998:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3878,"id":3901,"nodeType":"Return","src":"11973:96:18"}]},"documentation":{"id":3865,"nodeType":"StructuredDocumentation","src":"11751:109:18","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":3903,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:18","nodeType":"FunctionDefinition","parameters":{"id":3875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3867,"mutability":"mutable","name":"x","nameLocation":"11889:1:18","nodeType":"VariableDeclaration","scope":3903,"src":"11881:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3866,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3869,"mutability":"mutable","name":"y","nameLocation":"11900:1:18","nodeType":"VariableDeclaration","scope":3903,"src":"11892:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3868,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3871,"mutability":"mutable","name":"n","nameLocation":"11909:1:18","nodeType":"VariableDeclaration","scope":3903,"src":"11903:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3870,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3874,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:18","nodeType":"VariableDeclaration","scope":3903,"src":"11912:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3262","typeString":"enum Math.Rounding"},"typeName":{"id":3873,"nodeType":"UserDefinedTypeName","pathNode":{"id":3872,"name":"Rounding","nameLocations":["11912:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3262,"src":"11912:8:18"},"referencedDeclaration":3262,"src":"11912:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3262","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:18"},"returnParameters":{"id":3878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3903,"src":"11954:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3876,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:18"},"scope":4871,"src":"11865:211:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3999,"nodeType":"Block","src":"12710:1849:18","statements":[{"id":3998,"nodeType":"UncheckedBlock","src":"12720:1833:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3913,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"12748:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3918,"nodeType":"IfStatement","src":"12744:20:18","trueBody":{"expression":{"hexValue":"30","id":3916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3912,"id":3917,"nodeType":"Return","src":"12756:8:18"}},{"assignments":[3920],"declarations":[{"constant":false,"id":3920,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:18","nodeType":"VariableDeclaration","scope":3998,"src":"13235:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3919,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3924,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3921,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3906,"src":"13255:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3922,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"13259:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:18"},{"assignments":[3926],"declarations":[{"constant":false,"id":3926,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:18","nodeType":"VariableDeclaration","scope":3998,"src":"13274:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3925,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3928,"initialValue":{"id":3927,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"13288:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:18"},{"assignments":[3930],"declarations":[{"constant":false,"id":3930,"mutability":"mutable","name":"x","nameLocation":"13432:1:18","nodeType":"VariableDeclaration","scope":3998,"src":"13425:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3929,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3932,"initialValue":{"hexValue":"30","id":3931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:18"},{"assignments":[3934],"declarations":[{"constant":false,"id":3934,"mutability":"mutable","name":"y","nameLocation":"13458:1:18","nodeType":"VariableDeclaration","scope":3998,"src":"13451:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3933,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3936,"initialValue":{"hexValue":"31","id":3935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:18"},{"body":{"id":3973,"nodeType":"Block","src":"13501:882:18","statements":[{"assignments":[3941],"declarations":[{"constant":false,"id":3941,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:18","nodeType":"VariableDeclaration","scope":3973,"src":"13519:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3940,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3945,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3942,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"13538:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3943,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"13544:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:18"},{"expression":{"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3946,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"13573:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3947,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"13578:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3948,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3949,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"13678:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3950,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"13923:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3951,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"13929:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3952,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"13941:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3955,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:18","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3957,"nodeType":"ExpressionStatement","src":"13572:395:18"},{"expression":{"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3958,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"13987:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3959,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"13990:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3960,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3961,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"14072:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3962,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"14326:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3963,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"14330:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3966,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"14341:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3964,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:18","typeDescriptions":{}}},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3970,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:18","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3972,"nodeType":"ExpressionStatement","src":"13986:382:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3937,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"13485:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3974,"nodeType":"WhileStatement","src":"13478:905:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3975,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"14401:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3980,"nodeType":"IfStatement","src":"14397:22:18","trueBody":{"expression":{"hexValue":"30","id":3978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3912,"id":3979,"nodeType":"Return","src":"14411:8:18"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3982,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"14470:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3985,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"14477:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:18","subExpression":{"id":3988,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"14490:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3986,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:18","typeDescriptions":{}}},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3994,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"14502:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3992,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:18","typeDescriptions":{}}},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3981,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"14462:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3912,"id":3997,"nodeType":"Return","src":"14455:50:18"}]}]},"documentation":{"id":3904,"nodeType":"StructuredDocumentation","src":"12082:553:18","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4000,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:18","nodeType":"FunctionDefinition","parameters":{"id":3909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3906,"mutability":"mutable","name":"a","nameLocation":"12664:1:18","nodeType":"VariableDeclaration","scope":4000,"src":"12656:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3905,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3908,"mutability":"mutable","name":"n","nameLocation":"12675:1:18","nodeType":"VariableDeclaration","scope":4000,"src":"12667:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3907,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:18"},"returnParameters":{"id":3912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4000,"src":"12701:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3910,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:18"},"scope":4871,"src":"12640:1919:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4020,"nodeType":"Block","src":"15159:82:18","statements":[{"id":4019,"nodeType":"UncheckedBlock","src":"15169:66:18","statements":[{"expression":{"arguments":[{"id":4012,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"15212:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4013,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"15215:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4016,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"15222:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4010,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"15200:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4871_$","typeString":"type(library Math)"}},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:18","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4057,"src":"15200:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4009,"id":4018,"nodeType":"Return","src":"15193:31:18"}]}]},"documentation":{"id":4001,"nodeType":"StructuredDocumentation","src":"14565:514:18","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4021,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:18","nodeType":"FunctionDefinition","parameters":{"id":4006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4003,"mutability":"mutable","name":"a","nameLocation":"15113:1:18","nodeType":"VariableDeclaration","scope":4021,"src":"15105:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4002,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4005,"mutability":"mutable","name":"p","nameLocation":"15124:1:18","nodeType":"VariableDeclaration","scope":4021,"src":"15116:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4004,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:18"},"returnParameters":{"id":4009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4021,"src":"15150:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4007,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:18"},"scope":4871,"src":"15084:157:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4056,"nodeType":"Block","src":"16011:174:18","statements":[{"assignments":[4034,4036],"declarations":[{"constant":false,"id":4034,"mutability":"mutable","name":"success","nameLocation":"16027:7:18","nodeType":"VariableDeclaration","scope":4056,"src":"16022:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4033,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4036,"mutability":"mutable","name":"result","nameLocation":"16044:6:18","nodeType":"VariableDeclaration","scope":4056,"src":"16036:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4035,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4042,"initialValue":{"arguments":[{"id":4038,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"16064:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4039,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"16067:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4040,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"16070:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4037,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4081,4163],"referencedDeclaration":4081,"src":"16054:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:18"},{"condition":{"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:18","subExpression":{"id":4043,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"16087:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4053,"nodeType":"IfStatement","src":"16082:74:18","trueBody":{"id":4052,"nodeType":"Block","src":"16096:60:18","statements":[{"expression":{"arguments":[{"expression":{"id":4048,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"16122:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1743_$","typeString":"type(library Panic)"}},"id":4049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:18","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1710,"src":"16122:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4045,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"16110:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1743_$","typeString":"type(library Panic)"}},"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"16110:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4051,"nodeType":"ExpressionStatement","src":"16110:35:18"}]}},{"expression":{"id":4054,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4036,"src":"16172:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4032,"id":4055,"nodeType":"Return","src":"16165:13:18"}]},"documentation":{"id":4022,"nodeType":"StructuredDocumentation","src":"15247:678:18","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4057,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:18","nodeType":"FunctionDefinition","parameters":{"id":4029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4024,"mutability":"mutable","name":"b","nameLocation":"15954:1:18","nodeType":"VariableDeclaration","scope":4057,"src":"15946:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4023,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4026,"mutability":"mutable","name":"e","nameLocation":"15965:1:18","nodeType":"VariableDeclaration","scope":4057,"src":"15957:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4025,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4028,"mutability":"mutable","name":"m","nameLocation":"15976:1:18","nodeType":"VariableDeclaration","scope":4057,"src":"15968:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4027,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:18"},"returnParameters":{"id":4032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4031,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4057,"src":"16002:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4030,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:18"},"scope":4871,"src":"15930:255:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4080,"nodeType":"Block","src":"17039:1493:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4071,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"17053:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4078,"nodeType":"IfStatement","src":"17049:29:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4076,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4070,"id":4077,"nodeType":"Return","src":"17061:17:18"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:18","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:18","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:18"},"nodeType":"YulFunctionCall","src":"17138:11:18"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:18","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:18","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:18"},"nodeType":"YulFunctionCall","src":"18050:17:18"},"nodeType":"YulExpressionStatement","src":"18050:17:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:18"},"nodeType":"YulFunctionCall","src":"18087:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:18","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:18"},"nodeType":"YulFunctionCall","src":"18080:28:18"},"nodeType":"YulExpressionStatement","src":"18080:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:18"},"nodeType":"YulFunctionCall","src":"18128:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:18","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:18"},"nodeType":"YulFunctionCall","src":"18121:28:18"},"nodeType":"YulExpressionStatement","src":"18121:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:18"},"nodeType":"YulFunctionCall","src":"18169:14:18"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:18"},"nodeType":"YulFunctionCall","src":"18162:25:18"},"nodeType":"YulExpressionStatement","src":"18162:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:18"},"nodeType":"YulFunctionCall","src":"18207:14:18"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:18"},"nodeType":"YulFunctionCall","src":"18200:25:18"},"nodeType":"YulExpressionStatement","src":"18200:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:18","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:18"},"nodeType":"YulFunctionCall","src":"18245:14:18"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:18"},"nodeType":"YulFunctionCall","src":"18238:25:18"},"nodeType":"YulExpressionStatement","src":"18238:25:18"},{"nodeType":"YulAssignment","src":"18425:57:18","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:18"},"nodeType":"YulFunctionCall","src":"18447:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:18","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:18","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:18","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:18","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:18"},"nodeType":"YulFunctionCall","src":"18436:46:18"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:18"}]},{"nodeType":"YulAssignment","src":"18495:21:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:18","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:18"},"nodeType":"YulFunctionCall","src":"18505:11:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4060,"isOffset":false,"isSlot":false,"src":"18185:1:18","valueSize":1},{"declaration":4062,"isOffset":false,"isSlot":false,"src":"18223:1:18","valueSize":1},{"declaration":4064,"isOffset":false,"isSlot":false,"src":"18261:1:18","valueSize":1},{"declaration":4069,"isOffset":false,"isSlot":false,"src":"18495:6:18","valueSize":1},{"declaration":4067,"isOffset":false,"isSlot":false,"src":"18425:7:18","valueSize":1}],"flags":["memory-safe"],"id":4079,"nodeType":"InlineAssembly","src":"17088:1438:18"}]},"documentation":{"id":4058,"nodeType":"StructuredDocumentation","src":"16191:738:18","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4081,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:18","nodeType":"FunctionDefinition","parameters":{"id":4065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4060,"mutability":"mutable","name":"b","nameLocation":"16961:1:18","nodeType":"VariableDeclaration","scope":4081,"src":"16953:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4059,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4062,"mutability":"mutable","name":"e","nameLocation":"16972:1:18","nodeType":"VariableDeclaration","scope":4081,"src":"16964:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4061,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4064,"mutability":"mutable","name":"m","nameLocation":"16983:1:18","nodeType":"VariableDeclaration","scope":4081,"src":"16975:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4063,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:18"},"returnParameters":{"id":4070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4067,"mutability":"mutable","name":"success","nameLocation":"17014:7:18","nodeType":"VariableDeclaration","scope":4081,"src":"17009:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4066,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4069,"mutability":"mutable","name":"result","nameLocation":"17031:6:18","nodeType":"VariableDeclaration","scope":4081,"src":"17023:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4068,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:18"},"scope":4871,"src":"16934:1598:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4116,"nodeType":"Block","src":"18729:179:18","statements":[{"assignments":[4094,4096],"declarations":[{"constant":false,"id":4094,"mutability":"mutable","name":"success","nameLocation":"18745:7:18","nodeType":"VariableDeclaration","scope":4116,"src":"18740:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4093,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4096,"mutability":"mutable","name":"result","nameLocation":"18767:6:18","nodeType":"VariableDeclaration","scope":4116,"src":"18754:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4095,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4102,"initialValue":{"arguments":[{"id":4098,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"18787:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4099,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"18790:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4100,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"18793:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4097,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4081,4163],"referencedDeclaration":4163,"src":"18777:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:18"},{"condition":{"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:18","subExpression":{"id":4103,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"18810:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4113,"nodeType":"IfStatement","src":"18805:74:18","trueBody":{"id":4112,"nodeType":"Block","src":"18819:60:18","statements":[{"expression":{"arguments":[{"expression":{"id":4108,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"18845:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1743_$","typeString":"type(library Panic)"}},"id":4109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:18","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1710,"src":"18845:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4105,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"18833:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1743_$","typeString":"type(library Panic)"}},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"18833:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4111,"nodeType":"ExpressionStatement","src":"18833:35:18"}]}},{"expression":{"id":4114,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"18895:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4092,"id":4115,"nodeType":"Return","src":"18888:13:18"}]},"documentation":{"id":4082,"nodeType":"StructuredDocumentation","src":"18538:85:18","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4117,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:18","nodeType":"FunctionDefinition","parameters":{"id":4089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4084,"mutability":"mutable","name":"b","nameLocation":"18657:1:18","nodeType":"VariableDeclaration","scope":4117,"src":"18644:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4083,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4086,"mutability":"mutable","name":"e","nameLocation":"18673:1:18","nodeType":"VariableDeclaration","scope":4117,"src":"18660:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4085,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4088,"mutability":"mutable","name":"m","nameLocation":"18689:1:18","nodeType":"VariableDeclaration","scope":4117,"src":"18676:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4087,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:18"},"returnParameters":{"id":4092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4117,"src":"18715:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4090,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:18"},"scope":4871,"src":"18628:280:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4162,"nodeType":"Block","src":"19162:771:18","statements":[{"condition":{"arguments":[{"id":4132,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"19187:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4131,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4196,"src":"19176:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4141,"nodeType":"IfStatement","src":"19172:47:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4135,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4139,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4130,"id":4140,"nodeType":"Return","src":"19191:28:18"}},{"assignments":[4143],"declarations":[{"constant":false,"id":4143,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:18","nodeType":"VariableDeclaration","scope":4162,"src":"19230:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4142,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4146,"initialValue":{"expression":{"id":4144,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"19245:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:18","memberName":"length","nodeType":"MemberAccess","src":"19245:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:18"},{"expression":{"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4147,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4129,"src":"19335:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4150,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"19361:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:18","memberName":"length","nodeType":"MemberAccess","src":"19361:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4152,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"19371:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:18","memberName":"length","nodeType":"MemberAccess","src":"19371:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4154,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"19381:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4155,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"19387:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4156,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"19390:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4157,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"19393:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4148,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4160,"nodeType":"ExpressionStatement","src":"19335:60:18"},{"AST":{"nodeType":"YulBlock","src":"19431:496:18","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:18","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:18"},"nodeType":"YulFunctionCall","src":"19460:17:18"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:18","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:18","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:18"},"nodeType":"YulFunctionCall","src":"19589:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:18","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:18"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:18"},"nodeType":"YulFunctionCall","src":"19611:13:18"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:18"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:18"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:18"},"nodeType":"YulFunctionCall","src":"19578:62:18"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:18"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:18"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:18"},"nodeType":"YulFunctionCall","src":"19789:20:18"},"nodeType":"YulExpressionStatement","src":"19789:20:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:18","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:18"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:18"},"nodeType":"YulFunctionCall","src":"19898:18:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:18"},"nodeType":"YulFunctionCall","src":"19885:32:18"},"nodeType":"YulExpressionStatement","src":"19885:32:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":4143,"isOffset":false,"isSlot":false,"src":"19635:4:18","valueSize":1},{"declaration":4143,"isOffset":false,"isSlot":false,"src":"19804:4:18","valueSize":1},{"declaration":4143,"isOffset":false,"isSlot":false,"src":"19911:4:18","valueSize":1},{"declaration":4129,"isOffset":false,"isSlot":false,"src":"19464:6:18","valueSize":1},{"declaration":4129,"isOffset":false,"isSlot":false,"src":"19617:6:18","valueSize":1},{"declaration":4129,"isOffset":false,"isSlot":false,"src":"19796:6:18","valueSize":1},{"declaration":4127,"isOffset":false,"isSlot":false,"src":"19567:7:18","valueSize":1}],"flags":["memory-safe"],"id":4161,"nodeType":"InlineAssembly","src":"19406:521:18"}]},"documentation":{"id":4118,"nodeType":"StructuredDocumentation","src":"18914:88:18","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4163,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:18","nodeType":"FunctionDefinition","parameters":{"id":4125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4120,"mutability":"mutable","name":"b","nameLocation":"19048:1:18","nodeType":"VariableDeclaration","scope":4163,"src":"19035:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4119,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4122,"mutability":"mutable","name":"e","nameLocation":"19072:1:18","nodeType":"VariableDeclaration","scope":4163,"src":"19059:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4121,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4124,"mutability":"mutable","name":"m","nameLocation":"19096:1:18","nodeType":"VariableDeclaration","scope":4163,"src":"19083:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4123,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:18"},"returnParameters":{"id":4130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4127,"mutability":"mutable","name":"success","nameLocation":"19132:7:18","nodeType":"VariableDeclaration","scope":4163,"src":"19127:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4126,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4129,"mutability":"mutable","name":"result","nameLocation":"19154:6:18","nodeType":"VariableDeclaration","scope":4163,"src":"19141:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4128,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:18"},"scope":4871,"src":"19007:926:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4195,"nodeType":"Block","src":"20088:176:18","statements":[{"body":{"id":4191,"nodeType":"Block","src":"20145:92:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4182,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"20163:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4184,"indexExpression":{"id":4183,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"20173:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4190,"nodeType":"IfStatement","src":"20159:68:18","trueBody":{"id":4189,"nodeType":"Block","src":"20182:45:18","statements":[{"expression":{"hexValue":"66616c7365","id":4187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4170,"id":4188,"nodeType":"Return","src":"20200:12:18"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4175,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"20118:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4176,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"20122:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:18","memberName":"length","nodeType":"MemberAccess","src":"20122:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4192,"initializationExpression":{"assignments":[4172],"declarations":[{"constant":false,"id":4172,"mutability":"mutable","name":"i","nameLocation":"20111:1:18","nodeType":"VariableDeclaration","scope":4192,"src":"20103:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4171,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4174,"initialValue":{"hexValue":"30","id":4173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:18"},"loopExpression":{"expression":{"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:18","subExpression":{"id":4179,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"20142:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4181,"nodeType":"ExpressionStatement","src":"20140:3:18"},"nodeType":"ForStatement","src":"20098:139:18"},{"expression":{"hexValue":"74727565","id":4193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4170,"id":4194,"nodeType":"Return","src":"20246:11:18"}]},"documentation":{"id":4164,"nodeType":"StructuredDocumentation","src":"19939:72:18","text":" @dev Returns whether the provided byte array is zero."},"id":4196,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:18","nodeType":"FunctionDefinition","parameters":{"id":4167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4166,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:18","nodeType":"VariableDeclaration","scope":4196,"src":"20036:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4165,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:18"},"returnParameters":{"id":4170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4196,"src":"20082:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4168,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:18"},"scope":4871,"src":"20016:248:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4414,"nodeType":"Block","src":"20624:5124:18","statements":[{"id":4413,"nodeType":"UncheckedBlock","src":"20634:5108:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4204,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"20728:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4210,"nodeType":"IfStatement","src":"20724:53:18","trueBody":{"id":4209,"nodeType":"Block","src":"20736:41:18","statements":[{"expression":{"id":4207,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"20761:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4203,"id":4208,"nodeType":"Return","src":"20754:8:18"}]}},{"assignments":[4212],"declarations":[{"constant":false,"id":4212,"mutability":"mutable","name":"aa","nameLocation":"21712:2:18","nodeType":"VariableDeclaration","scope":4413,"src":"21704:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4211,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4214,"initialValue":{"id":4213,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"21717:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:18"},{"assignments":[4216],"declarations":[{"constant":false,"id":4216,"mutability":"mutable","name":"xn","nameLocation":"21740:2:18","nodeType":"VariableDeclaration","scope":4413,"src":"21732:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4215,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4218,"initialValue":{"hexValue":"31","id":4217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4219,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"21765:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4223,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4234,"nodeType":"IfStatement","src":"21761:92:18","trueBody":{"id":4233,"nodeType":"Block","src":"21783:70:18","statements":[{"expression":{"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4225,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"21801:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4228,"nodeType":"ExpressionStatement","src":"21801:10:18"},{"expression":{"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4229,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"21829:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4232,"nodeType":"ExpressionStatement","src":"21829:9:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4235,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"21870:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4239,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4250,"nodeType":"IfStatement","src":"21866:90:18","trueBody":{"id":4249,"nodeType":"Block","src":"21887:69:18","statements":[{"expression":{"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4241,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"21905:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4244,"nodeType":"ExpressionStatement","src":"21905:9:18"},{"expression":{"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4245,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"21932:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4248,"nodeType":"ExpressionStatement","src":"21932:9:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4251,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"21973:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4255,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4266,"nodeType":"IfStatement","src":"21969:90:18","trueBody":{"id":4265,"nodeType":"Block","src":"21990:69:18","statements":[{"expression":{"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4257,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"22008:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4260,"nodeType":"ExpressionStatement","src":"22008:9:18"},{"expression":{"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4261,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"22035:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4264,"nodeType":"ExpressionStatement","src":"22035:9:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4267,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"22076:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:18","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4271,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:18","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4282,"nodeType":"IfStatement","src":"22072:89:18","trueBody":{"id":4281,"nodeType":"Block","src":"22093:68:18","statements":[{"expression":{"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4273,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"22111:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4276,"nodeType":"ExpressionStatement","src":"22111:9:18"},{"expression":{"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4277,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"22138:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4280,"nodeType":"ExpressionStatement","src":"22138:8:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4283,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"22178:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4287,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4298,"nodeType":"IfStatement","src":"22174:87:18","trueBody":{"id":4297,"nodeType":"Block","src":"22194:67:18","statements":[{"expression":{"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4289,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"22212:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4292,"nodeType":"ExpressionStatement","src":"22212:8:18"},{"expression":{"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4293,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"22238:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4296,"nodeType":"ExpressionStatement","src":"22238:8:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4299,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"22278:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4303,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4314,"nodeType":"IfStatement","src":"22274:87:18","trueBody":{"id":4313,"nodeType":"Block","src":"22294:67:18","statements":[{"expression":{"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4305,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"22312:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4308,"nodeType":"ExpressionStatement","src":"22312:8:18"},{"expression":{"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4309,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"22338:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4312,"nodeType":"ExpressionStatement","src":"22338:8:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4315,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"22378:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4319,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4326,"nodeType":"IfStatement","src":"22374:61:18","trueBody":{"id":4325,"nodeType":"Block","src":"22394:41:18","statements":[{"expression":{"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4321,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"22412:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4324,"nodeType":"ExpressionStatement","src":"22412:8:18"}]}},{"expression":{"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4327,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"22855:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4329,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"22865:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4331,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4335,"nodeType":"ExpressionStatement","src":"22855:18:18"},{"expression":{"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4336,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"24760:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4337,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"24766:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4338,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"24771:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4339,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"24775:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4342,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4346,"nodeType":"ExpressionStatement","src":"24760:23:18"},{"expression":{"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4347,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"24869:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4348,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"24875:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4349,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"24880:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4350,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"24884:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4353,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4357,"nodeType":"ExpressionStatement","src":"24869:23:18"},{"expression":{"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4358,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"24980:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4359,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"24986:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4360,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"24991:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4361,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"24995:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4364,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4368,"nodeType":"ExpressionStatement","src":"24980:23:18"},{"expression":{"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4369,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"25089:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4370,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"25095:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4371,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"25100:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4372,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"25104:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4375,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4379,"nodeType":"ExpressionStatement","src":"25089:23:18"},{"expression":{"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4380,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"25199:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4381,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"25205:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4382,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"25210:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4383,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"25214:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4386,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4390,"nodeType":"ExpressionStatement","src":"25199:23:18"},{"expression":{"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4391,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"25309:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4392,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"25315:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4393,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"25320:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4394,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"25324:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4397,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4401,"nodeType":"ExpressionStatement","src":"25309:23:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4402,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"25698:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4405,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"25719:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4406,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"25724:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4407,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"25728:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4403,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"25703:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6636_$","typeString":"type(library SafeCast)"}},"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6635,"src":"25703:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4203,"id":4412,"nodeType":"Return","src":"25691:40:18"}]}]},"documentation":{"id":4197,"nodeType":"StructuredDocumentation","src":"20270:292:18","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4415,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:18","nodeType":"FunctionDefinition","parameters":{"id":4200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4199,"mutability":"mutable","name":"a","nameLocation":"20589:1:18","nodeType":"VariableDeclaration","scope":4415,"src":"20581:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4198,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:18"},"returnParameters":{"id":4203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4415,"src":"20615:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4201,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:18"},"scope":4871,"src":"20567:5181:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4448,"nodeType":"Block","src":"25921:171:18","statements":[{"id":4447,"nodeType":"UncheckedBlock","src":"25931:155:18","statements":[{"assignments":[4427],"declarations":[{"constant":false,"id":4427,"mutability":"mutable","name":"result","nameLocation":"25963:6:18","nodeType":"VariableDeclaration","scope":4447,"src":"25955:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4426,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4431,"initialValue":{"arguments":[{"id":4429,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"25977:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4428,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4415,4449],"referencedDeclaration":4415,"src":"25972:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4432,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"26000:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4436,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"26042:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3262","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3262","typeString":"enum Math.Rounding"}],"id":4435,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"26025:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3262_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4438,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"26055:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4439,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"26064:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4441,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"26073:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4433,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"26009:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6636_$","typeString":"type(library SafeCast)"}},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6635,"src":"26009:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4425,"id":4446,"nodeType":"Return","src":"25993:82:18"}]}]},"documentation":{"id":4416,"nodeType":"StructuredDocumentation","src":"25754:86:18","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4449,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:18","nodeType":"FunctionDefinition","parameters":{"id":4422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4418,"mutability":"mutable","name":"a","nameLocation":"25867:1:18","nodeType":"VariableDeclaration","scope":4449,"src":"25859:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4417,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4421,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:18","nodeType":"VariableDeclaration","scope":4449,"src":"25870:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3262","typeString":"enum Math.Rounding"},"typeName":{"id":4420,"nodeType":"UserDefinedTypeName","pathNode":{"id":4419,"name":"Rounding","nameLocations":["25870:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3262,"src":"25870:8:18"},"referencedDeclaration":3262,"src":"25870:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3262","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:18"},"returnParameters":{"id":4425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4449,"src":"25912:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4423,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:18"},"scope":4871,"src":"25845:247:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4539,"nodeType":"Block","src":"26281:2334:18","statements":[{"expression":{"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4457,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"26363:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4460,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"26383:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4458,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"26367:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6636_$","typeString":"type(library SafeCast)"}},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6635,"src":"26367:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:18","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4467,"nodeType":"ExpressionStatement","src":"26363:64:18"},{"expression":{"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4468,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"26503:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4471,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"26525:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4472,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"26530:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4474,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4469,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"26508:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6636_$","typeString":"type(library SafeCast)"}},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6635,"src":"26508:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:18","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4481,"nodeType":"ExpressionStatement","src":"26503:56:18"},{"expression":{"id":4494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4482,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"26634:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4485,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"26656:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4486,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"26661:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4488,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4483,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"26639:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6636_$","typeString":"type(library SafeCast)"}},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6635,"src":"26639:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:18","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4495,"nodeType":"ExpressionStatement","src":"26634:48:18"},{"expression":{"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4496,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"26757:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4499,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"26779:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4500,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"26784:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4502,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:18","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4497,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"26762:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6636_$","typeString":"type(library SafeCast)"}},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6635,"src":"26762:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4509,"nodeType":"ExpressionStatement","src":"26757:44:18"},{"expression":{"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4510,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"26874:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4513,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"26896:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4514,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"26901:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4516,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4511,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"26879:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6636_$","typeString":"type(library SafeCast)"}},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6635,"src":"26879:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4523,"nodeType":"ExpressionStatement","src":"26874:42:18"},{"expression":{"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4524,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"26988:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4527,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"27010:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4528,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"27015:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4530,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":4531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4525,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"26993:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6636_$","typeString":"type(library SafeCast)"}},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6635,"src":"26993:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4537,"nodeType":"ExpressionStatement","src":"26988:41:18"},{"AST":{"nodeType":"YulBlock","src":"28490:119:18","statements":[{"nodeType":"YulAssignment","src":"28504:95:18","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:18"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:18"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:18"},"nodeType":"YulFunctionCall","src":"28520:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:18","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:18"},"nodeType":"YulFunctionCall","src":"28515:83:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:18"},"nodeType":"YulFunctionCall","src":"28509:90:18"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4455,"isOffset":false,"isSlot":false,"src":"28504:1:18","valueSize":1},{"declaration":4455,"isOffset":false,"isSlot":false,"src":"28512:1:18","valueSize":1},{"declaration":4455,"isOffset":false,"isSlot":false,"src":"28524:1:18","valueSize":1},{"declaration":4452,"isOffset":false,"isSlot":false,"src":"28527:1:18","valueSize":1}],"flags":["memory-safe"],"id":4538,"nodeType":"InlineAssembly","src":"28465:144:18"}]},"documentation":{"id":4450,"nodeType":"StructuredDocumentation","src":"26098:119:18","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4540,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:18","nodeType":"FunctionDefinition","parameters":{"id":4453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4452,"mutability":"mutable","name":"x","nameLocation":"26244:1:18","nodeType":"VariableDeclaration","scope":4540,"src":"26236:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4451,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:18"},"returnParameters":{"id":4456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4455,"mutability":"mutable","name":"r","nameLocation":"26278:1:18","nodeType":"VariableDeclaration","scope":4540,"src":"26270:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4454,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:18"},"scope":4871,"src":"26222:2393:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4573,"nodeType":"Block","src":"28848:175:18","statements":[{"id":4572,"nodeType":"UncheckedBlock","src":"28858:159:18","statements":[{"assignments":[4552],"declarations":[{"constant":false,"id":4552,"mutability":"mutable","name":"result","nameLocation":"28890:6:18","nodeType":"VariableDeclaration","scope":4572,"src":"28882:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4551,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4556,"initialValue":{"arguments":[{"id":4554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"28904:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4553,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4540,4574],"referencedDeclaration":4540,"src":"28899:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4557,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"28931:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4561,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4546,"src":"28973:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3262","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3262","typeString":"enum Math.Rounding"}],"id":4560,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"28956:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3262_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4564,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"28991:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"29000:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4558,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"28940:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6636_$","typeString":"type(library SafeCast)"}},"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6635,"src":"28940:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4550,"id":4571,"nodeType":"Return","src":"28924:82:18"}]}]},"documentation":{"id":4541,"nodeType":"StructuredDocumentation","src":"28621:142:18","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4574,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:18","nodeType":"FunctionDefinition","parameters":{"id":4547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4543,"mutability":"mutable","name":"value","nameLocation":"28790:5:18","nodeType":"VariableDeclaration","scope":4574,"src":"28782:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4542,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4546,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:18","nodeType":"VariableDeclaration","scope":4574,"src":"28797:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3262","typeString":"enum Math.Rounding"},"typeName":{"id":4545,"nodeType":"UserDefinedTypeName","pathNode":{"id":4544,"name":"Rounding","nameLocations":["28797:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3262,"src":"28797:8:18"},"referencedDeclaration":3262,"src":"28797:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3262","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:18"},"returnParameters":{"id":4550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4574,"src":"28839:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4548,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:18"},"scope":4871,"src":"28768:255:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4702,"nodeType":"Block","src":"29216:854:18","statements":[{"assignments":[4583],"declarations":[{"constant":false,"id":4583,"mutability":"mutable","name":"result","nameLocation":"29234:6:18","nodeType":"VariableDeclaration","scope":4702,"src":"29226:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4582,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4585,"initialValue":{"hexValue":"30","id":4584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:18"},{"id":4699,"nodeType":"UncheckedBlock","src":"29254:787:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"29282:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4602,"nodeType":"IfStatement","src":"29278:103:18","trueBody":{"id":4601,"nodeType":"Block","src":"29301:80:18","statements":[{"expression":{"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"29319:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4596,"nodeType":"ExpressionStatement","src":"29319:17:18"},{"expression":{"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4597,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"29354:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4600,"nodeType":"ExpressionStatement","src":"29354:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"29398:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4619,"nodeType":"IfStatement","src":"29394:103:18","trueBody":{"id":4618,"nodeType":"Block","src":"29417:80:18","statements":[{"expression":{"id":4612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"29435:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4613,"nodeType":"ExpressionStatement","src":"29435:17:18"},{"expression":{"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4614,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"29470:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4617,"nodeType":"ExpressionStatement","src":"29470:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"29514:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4636,"nodeType":"IfStatement","src":"29510:103:18","trueBody":{"id":4635,"nodeType":"Block","src":"29533:80:18","statements":[{"expression":{"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"29551:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4630,"nodeType":"ExpressionStatement","src":"29551:17:18"},{"expression":{"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4631,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"29586:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4634,"nodeType":"ExpressionStatement","src":"29586:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"29630:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4653,"nodeType":"IfStatement","src":"29626:100:18","trueBody":{"id":4652,"nodeType":"Block","src":"29648:78:18","statements":[{"expression":{"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"29666:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4647,"nodeType":"ExpressionStatement","src":"29666:16:18"},{"expression":{"id":4650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4648,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"29700:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4651,"nodeType":"ExpressionStatement","src":"29700:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"29743:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4670,"nodeType":"IfStatement","src":"29739:100:18","trueBody":{"id":4669,"nodeType":"Block","src":"29761:78:18","statements":[{"expression":{"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"29779:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4664,"nodeType":"ExpressionStatement","src":"29779:16:18"},{"expression":{"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4665,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"29813:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4668,"nodeType":"ExpressionStatement","src":"29813:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"29856:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4687,"nodeType":"IfStatement","src":"29852:100:18","trueBody":{"id":4686,"nodeType":"Block","src":"29874:78:18","statements":[{"expression":{"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"29892:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4681,"nodeType":"ExpressionStatement","src":"29892:16:18"},{"expression":{"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4682,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"29926:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4685,"nodeType":"ExpressionStatement","src":"29926:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"29969:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4698,"nodeType":"IfStatement","src":"29965:66:18","trueBody":{"id":4697,"nodeType":"Block","src":"29987:44:18","statements":[{"expression":{"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4693,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"30005:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4696,"nodeType":"ExpressionStatement","src":"30005:11:18"}]}}]},{"expression":{"id":4700,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"30057:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4581,"id":4701,"nodeType":"Return","src":"30050:13:18"}]},"documentation":{"id":4575,"nodeType":"StructuredDocumentation","src":"29029:120:18","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4703,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:18","nodeType":"FunctionDefinition","parameters":{"id":4578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4577,"mutability":"mutable","name":"value","nameLocation":"29177:5:18","nodeType":"VariableDeclaration","scope":4703,"src":"29169:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4576,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:18"},"returnParameters":{"id":4581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4703,"src":"29207:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4579,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:18"},"scope":4871,"src":"29154:916:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4736,"nodeType":"Block","src":"30305:177:18","statements":[{"id":4735,"nodeType":"UncheckedBlock","src":"30315:161:18","statements":[{"assignments":[4715],"declarations":[{"constant":false,"id":4715,"mutability":"mutable","name":"result","nameLocation":"30347:6:18","nodeType":"VariableDeclaration","scope":4735,"src":"30339:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4714,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4719,"initialValue":{"arguments":[{"id":4717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"30362:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4716,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4703,4737],"referencedDeclaration":4703,"src":"30356:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4720,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"30389:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4724,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4709,"src":"30431:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3262","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3262","typeString":"enum Math.Rounding"}],"id":4723,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"30414:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3262_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4727,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"30450:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"30459:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4721,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"30398:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6636_$","typeString":"type(library SafeCast)"}},"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6635,"src":"30398:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4713,"id":4734,"nodeType":"Return","src":"30382:83:18"}]}]},"documentation":{"id":4704,"nodeType":"StructuredDocumentation","src":"30076:143:18","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4737,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:18","nodeType":"FunctionDefinition","parameters":{"id":4710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4706,"mutability":"mutable","name":"value","nameLocation":"30247:5:18","nodeType":"VariableDeclaration","scope":4737,"src":"30239:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4705,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4709,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:18","nodeType":"VariableDeclaration","scope":4737,"src":"30254:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3262","typeString":"enum Math.Rounding"},"typeName":{"id":4708,"nodeType":"UserDefinedTypeName","pathNode":{"id":4707,"name":"Rounding","nameLocations":["30254:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3262,"src":"30254:8:18"},"referencedDeclaration":3262,"src":"30254:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3262","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:18"},"returnParameters":{"id":4713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4737,"src":"30296:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4711,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:18"},"scope":4871,"src":"30224:258:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4813,"nodeType":"Block","src":"30800:675:18","statements":[{"expression":{"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4745,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"30882:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4748,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4740,"src":"30902:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4746,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"30886:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6636_$","typeString":"type(library SafeCast)"}},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6635,"src":"30886:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:18","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4755,"nodeType":"ExpressionStatement","src":"30882:64:18"},{"expression":{"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4756,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"31022:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4759,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4740,"src":"31044:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4760,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"31049:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4762,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4757,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"31027:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6636_$","typeString":"type(library SafeCast)"}},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6635,"src":"31027:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:18","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4769,"nodeType":"ExpressionStatement","src":"31022:56:18"},{"expression":{"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4770,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"31153:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4773,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4740,"src":"31175:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4774,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"31180:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4776,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4771,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"31158:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6636_$","typeString":"type(library SafeCast)"}},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6635,"src":"31158:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:18","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4783,"nodeType":"ExpressionStatement","src":"31153:48:18"},{"expression":{"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4784,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"31276:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4787,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4740,"src":"31298:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4788,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"31303:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4790,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:18","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4785,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"31281:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6636_$","typeString":"type(library SafeCast)"}},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6635,"src":"31281:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4797,"nodeType":"ExpressionStatement","src":"31276:44:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4798,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"31426:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":4799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4801,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4804,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4740,"src":"31453:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4805,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"31458:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4807,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4802,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"31436:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6636_$","typeString":"type(library SafeCast)"}},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6635,"src":"31436:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4744,"id":4812,"nodeType":"Return","src":"31418:50:18"}]},"documentation":{"id":4738,"nodeType":"StructuredDocumentation","src":"30488:246:18","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4814,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:18","nodeType":"FunctionDefinition","parameters":{"id":4741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4740,"mutability":"mutable","name":"x","nameLocation":"30763:1:18","nodeType":"VariableDeclaration","scope":4814,"src":"30755:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4739,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:18"},"returnParameters":{"id":4744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4743,"mutability":"mutable","name":"r","nameLocation":"30797:1:18","nodeType":"VariableDeclaration","scope":4814,"src":"30789:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4742,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:18"},"scope":4871,"src":"30739:736:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4850,"nodeType":"Block","src":"31712:184:18","statements":[{"id":4849,"nodeType":"UncheckedBlock","src":"31722:168:18","statements":[{"assignments":[4826],"declarations":[{"constant":false,"id":4826,"mutability":"mutable","name":"result","nameLocation":"31754:6:18","nodeType":"VariableDeclaration","scope":4849,"src":"31746:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4825,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4830,"initialValue":{"arguments":[{"id":4828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"31770:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4827,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4814,4851],"referencedDeclaration":4814,"src":"31763:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4831,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"31797:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4835,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"31839:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3262","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3262","typeString":"enum Math.Rounding"}],"id":4834,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"31822:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3262_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4838,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"31858:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4841,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"31873:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4832,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"31806:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6636_$","typeString":"type(library SafeCast)"}},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6635,"src":"31806:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4824,"id":4848,"nodeType":"Return","src":"31790:89:18"}]}]},"documentation":{"id":4815,"nodeType":"StructuredDocumentation","src":"31481:144:18","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4851,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:18","nodeType":"FunctionDefinition","parameters":{"id":4821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4817,"mutability":"mutable","name":"value","nameLocation":"31654:5:18","nodeType":"VariableDeclaration","scope":4851,"src":"31646:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4816,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4820,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:18","nodeType":"VariableDeclaration","scope":4851,"src":"31661:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3262","typeString":"enum Math.Rounding"},"typeName":{"id":4819,"nodeType":"UserDefinedTypeName","pathNode":{"id":4818,"name":"Rounding","nameLocations":["31661:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3262,"src":"31661:8:18"},"referencedDeclaration":3262,"src":"31661:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3262","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:18"},"returnParameters":{"id":4824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4851,"src":"31703:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4822,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:18"},"scope":4871,"src":"31630:266:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4869,"nodeType":"Block","src":"32094:48:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4862,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"32117:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3262","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3262","typeString":"enum Math.Rounding"}],"id":4861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4860,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:18","typeDescriptions":{}}},"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4859,"id":4868,"nodeType":"Return","src":"32104:31:18"}]},"documentation":{"id":4852,"nodeType":"StructuredDocumentation","src":"31902:113:18","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4870,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:18","nodeType":"FunctionDefinition","parameters":{"id":4856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4855,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:18","nodeType":"VariableDeclaration","scope":4870,"src":"32046:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3262","typeString":"enum Math.Rounding"},"typeName":{"id":4854,"nodeType":"UserDefinedTypeName","pathNode":{"id":4853,"name":"Rounding","nameLocations":["32046:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3262,"src":"32046:8:18"},"referencedDeclaration":3262,"src":"32046:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3262","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:18"},"returnParameters":{"id":4859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4870,"src":"32088:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4857,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:18"},"scope":4871,"src":"32020:122:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4872,"src":"281:31863:18","usedErrors":[],"usedEvents":[]}],"src":"103:32042:18"},"id":18},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6636]},"id":6637,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4873,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4874,"nodeType":"StructuredDocumentation","src":"218:550:19","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6636,"linearizedBaseContracts":[6636],"name":"SafeCast","nameLocation":"777:8:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4875,"nodeType":"StructuredDocumentation","src":"792:68:19","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4881,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:19","nodeType":"ErrorDefinition","parameters":{"id":4880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4877,"mutability":"mutable","name":"bits","nameLocation":"908:4:19","nodeType":"VariableDeclaration","scope":4881,"src":"902:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4876,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4879,"mutability":"mutable","name":"value","nameLocation":"922:5:19","nodeType":"VariableDeclaration","scope":4881,"src":"914:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4878,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:19"},"src":"865:64:19"},{"documentation":{"id":4882,"nodeType":"StructuredDocumentation","src":"935:75:19","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4886,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:19","nodeType":"ErrorDefinition","parameters":{"id":4885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4884,"mutability":"mutable","name":"value","nameLocation":"1056:5:19","nodeType":"VariableDeclaration","scope":4886,"src":"1049:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4883,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:19"},"src":"1015:48:19"},{"documentation":{"id":4887,"nodeType":"StructuredDocumentation","src":"1069:67:19","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4893,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:19","nodeType":"ErrorDefinition","parameters":{"id":4892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4889,"mutability":"mutable","name":"bits","nameLocation":"1183:4:19","nodeType":"VariableDeclaration","scope":4893,"src":"1177:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4888,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4891,"mutability":"mutable","name":"value","nameLocation":"1196:5:19","nodeType":"VariableDeclaration","scope":4893,"src":"1189:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4890,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:19"},"src":"1141:62:19"},{"documentation":{"id":4894,"nodeType":"StructuredDocumentation","src":"1209:75:19","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4898,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:19","nodeType":"ErrorDefinition","parameters":{"id":4897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4896,"mutability":"mutable","name":"value","nameLocation":"1331:5:19","nodeType":"VariableDeclaration","scope":4898,"src":"1323:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4895,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:19"},"src":"1289:49:19"},{"body":{"id":4925,"nodeType":"Block","src":"1695:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"1709:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4908,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4907,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:19","memberName":"max","nodeType":"MemberAccess","src":"1717:17:19","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4919,"nodeType":"IfStatement","src":"1705:105:19","trueBody":{"id":4918,"nodeType":"Block","src":"1736:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:19","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"1793:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4913,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"1757:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4917,"nodeType":"RevertStatement","src":"1750:49:19"}]}},{"expression":{"arguments":[{"id":4922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"1834:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4920,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:19","typeDescriptions":{}}},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4905,"id":4924,"nodeType":"Return","src":"1819:21:19"}]},"documentation":{"id":4899,"nodeType":"StructuredDocumentation","src":"1344:280:19","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4926,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:19","nodeType":"FunctionDefinition","parameters":{"id":4902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4901,"mutability":"mutable","name":"value","nameLocation":"1656:5:19","nodeType":"VariableDeclaration","scope":4926,"src":"1648:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4900,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:19"},"returnParameters":{"id":4905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4926,"src":"1686:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4903,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:19","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:19"},"scope":6636,"src":"1629:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4953,"nodeType":"Block","src":"2204:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"2218:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4936,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4935,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:19","memberName":"max","nodeType":"MemberAccess","src":"2226:17:19","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4947,"nodeType":"IfStatement","src":"2214:105:19","trueBody":{"id":4946,"nodeType":"Block","src":"2245:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:19","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"2302:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4941,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"2266:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4945,"nodeType":"RevertStatement","src":"2259:49:19"}]}},{"expression":{"arguments":[{"id":4950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"2343:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4948,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:19","typeDescriptions":{}}},"id":4951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4933,"id":4952,"nodeType":"Return","src":"2328:21:19"}]},"documentation":{"id":4927,"nodeType":"StructuredDocumentation","src":"1853:280:19","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4954,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:19","nodeType":"FunctionDefinition","parameters":{"id":4930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4929,"mutability":"mutable","name":"value","nameLocation":"2165:5:19","nodeType":"VariableDeclaration","scope":4954,"src":"2157:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4928,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:19"},"returnParameters":{"id":4933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4954,"src":"2195:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4931,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:19","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:19"},"scope":6636,"src":"2138:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4981,"nodeType":"Block","src":"2713:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"2727:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4964,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4963,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:19","memberName":"max","nodeType":"MemberAccess","src":"2735:17:19","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4975,"nodeType":"IfStatement","src":"2723:105:19","trueBody":{"id":4974,"nodeType":"Block","src":"2754:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:19","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"2811:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4969,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"2775:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4973,"nodeType":"RevertStatement","src":"2768:49:19"}]}},{"expression":{"arguments":[{"id":4978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"2852:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4976,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:19","typeDescriptions":{}}},"id":4979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4961,"id":4980,"nodeType":"Return","src":"2837:21:19"}]},"documentation":{"id":4955,"nodeType":"StructuredDocumentation","src":"2362:280:19","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4982,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:19","nodeType":"FunctionDefinition","parameters":{"id":4958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4957,"mutability":"mutable","name":"value","nameLocation":"2674:5:19","nodeType":"VariableDeclaration","scope":4982,"src":"2666:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4956,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:19"},"returnParameters":{"id":4961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4982,"src":"2704:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4959,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:19","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:19"},"scope":6636,"src":"2647:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5009,"nodeType":"Block","src":"3222:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"3236:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4992,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4991,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:19","memberName":"max","nodeType":"MemberAccess","src":"3244:17:19","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5003,"nodeType":"IfStatement","src":"3232:105:19","trueBody":{"id":5002,"nodeType":"Block","src":"3263:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:19","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"3320:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4997,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"3284:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5001,"nodeType":"RevertStatement","src":"3277:49:19"}]}},{"expression":{"arguments":[{"id":5006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"3361:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5004,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:19","typeDescriptions":{}}},"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4989,"id":5008,"nodeType":"Return","src":"3346:21:19"}]},"documentation":{"id":4983,"nodeType":"StructuredDocumentation","src":"2871:280:19","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5010,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:19","nodeType":"FunctionDefinition","parameters":{"id":4986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4985,"mutability":"mutable","name":"value","nameLocation":"3183:5:19","nodeType":"VariableDeclaration","scope":5010,"src":"3175:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4984,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:19"},"returnParameters":{"id":4989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5010,"src":"3213:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4987,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:19","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:19"},"scope":6636,"src":"3156:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5037,"nodeType":"Block","src":"3731:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"3745:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5020,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5019,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:19","memberName":"max","nodeType":"MemberAccess","src":"3753:17:19","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5031,"nodeType":"IfStatement","src":"3741:105:19","trueBody":{"id":5030,"nodeType":"Block","src":"3772:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:19","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"3829:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5025,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"3793:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5029,"nodeType":"RevertStatement","src":"3786:49:19"}]}},{"expression":{"arguments":[{"id":5034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"3870:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5032,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:19","typeDescriptions":{}}},"id":5035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5017,"id":5036,"nodeType":"Return","src":"3855:21:19"}]},"documentation":{"id":5011,"nodeType":"StructuredDocumentation","src":"3380:280:19","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5038,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:19","nodeType":"FunctionDefinition","parameters":{"id":5014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5013,"mutability":"mutable","name":"value","nameLocation":"3692:5:19","nodeType":"VariableDeclaration","scope":5038,"src":"3684:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5012,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:19"},"returnParameters":{"id":5017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5038,"src":"3722:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5015,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:19","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:19"},"scope":6636,"src":"3665:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5065,"nodeType":"Block","src":"4240:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5041,"src":"4254:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5048,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5047,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:19","memberName":"max","nodeType":"MemberAccess","src":"4262:17:19","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5059,"nodeType":"IfStatement","src":"4250:105:19","trueBody":{"id":5058,"nodeType":"Block","src":"4281:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:19","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5041,"src":"4338:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5053,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"4302:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5057,"nodeType":"RevertStatement","src":"4295:49:19"}]}},{"expression":{"arguments":[{"id":5062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5041,"src":"4379:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5060,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:19","typeDescriptions":{}}},"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5045,"id":5064,"nodeType":"Return","src":"4364:21:19"}]},"documentation":{"id":5039,"nodeType":"StructuredDocumentation","src":"3889:280:19","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5066,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:19","nodeType":"FunctionDefinition","parameters":{"id":5042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5041,"mutability":"mutable","name":"value","nameLocation":"4201:5:19","nodeType":"VariableDeclaration","scope":5066,"src":"4193:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5040,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:19"},"returnParameters":{"id":5045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5066,"src":"4231:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5043,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:19","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:19"},"scope":6636,"src":"4174:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5093,"nodeType":"Block","src":"4749:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"4763:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5076,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5075,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:19","memberName":"max","nodeType":"MemberAccess","src":"4771:17:19","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5087,"nodeType":"IfStatement","src":"4759:105:19","trueBody":{"id":5086,"nodeType":"Block","src":"4790:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:19","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"4847:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5081,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"4811:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5085,"nodeType":"RevertStatement","src":"4804:49:19"}]}},{"expression":{"arguments":[{"id":5090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"4888:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5088,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:19","typeDescriptions":{}}},"id":5091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5073,"id":5092,"nodeType":"Return","src":"4873:21:19"}]},"documentation":{"id":5067,"nodeType":"StructuredDocumentation","src":"4398:280:19","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5094,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:19","nodeType":"FunctionDefinition","parameters":{"id":5070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5069,"mutability":"mutable","name":"value","nameLocation":"4710:5:19","nodeType":"VariableDeclaration","scope":5094,"src":"4702:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5068,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:19"},"returnParameters":{"id":5073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5072,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5094,"src":"4740:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5071,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:19","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:19"},"scope":6636,"src":"4683:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5121,"nodeType":"Block","src":"5258:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5097,"src":"5272:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5104,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5103,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:19","memberName":"max","nodeType":"MemberAccess","src":"5280:17:19","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5115,"nodeType":"IfStatement","src":"5268:105:19","trueBody":{"id":5114,"nodeType":"Block","src":"5299:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:19","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5097,"src":"5356:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5109,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"5320:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5113,"nodeType":"RevertStatement","src":"5313:49:19"}]}},{"expression":{"arguments":[{"id":5118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5097,"src":"5397:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5116,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:19","typeDescriptions":{}}},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5101,"id":5120,"nodeType":"Return","src":"5382:21:19"}]},"documentation":{"id":5095,"nodeType":"StructuredDocumentation","src":"4907:280:19","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5122,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:19","nodeType":"FunctionDefinition","parameters":{"id":5098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5097,"mutability":"mutable","name":"value","nameLocation":"5219:5:19","nodeType":"VariableDeclaration","scope":5122,"src":"5211:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5096,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:19"},"returnParameters":{"id":5101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5122,"src":"5249:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5099,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:19","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:19"},"scope":6636,"src":"5192:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5149,"nodeType":"Block","src":"5767:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"5781:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5132,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5131,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:19","memberName":"max","nodeType":"MemberAccess","src":"5789:17:19","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5143,"nodeType":"IfStatement","src":"5777:105:19","trueBody":{"id":5142,"nodeType":"Block","src":"5808:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:19","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"5865:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5137,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"5829:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5141,"nodeType":"RevertStatement","src":"5822:49:19"}]}},{"expression":{"arguments":[{"id":5146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"5906:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5144,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:19","typeDescriptions":{}}},"id":5147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5129,"id":5148,"nodeType":"Return","src":"5891:21:19"}]},"documentation":{"id":5123,"nodeType":"StructuredDocumentation","src":"5416:280:19","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5150,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:19","nodeType":"FunctionDefinition","parameters":{"id":5126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5125,"mutability":"mutable","name":"value","nameLocation":"5728:5:19","nodeType":"VariableDeclaration","scope":5150,"src":"5720:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5124,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:19"},"returnParameters":{"id":5129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5150,"src":"5758:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5127,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:19","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:19"},"scope":6636,"src":"5701:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5177,"nodeType":"Block","src":"6276:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"6290:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5160,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5159,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:19","memberName":"max","nodeType":"MemberAccess","src":"6298:17:19","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5171,"nodeType":"IfStatement","src":"6286:105:19","trueBody":{"id":5170,"nodeType":"Block","src":"6317:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:19","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"6374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5165,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"6338:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5169,"nodeType":"RevertStatement","src":"6331:49:19"}]}},{"expression":{"arguments":[{"id":5174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"6415:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5172,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:19","typeDescriptions":{}}},"id":5175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5157,"id":5176,"nodeType":"Return","src":"6400:21:19"}]},"documentation":{"id":5151,"nodeType":"StructuredDocumentation","src":"5925:280:19","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5178,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:19","nodeType":"FunctionDefinition","parameters":{"id":5154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5153,"mutability":"mutable","name":"value","nameLocation":"6237:5:19","nodeType":"VariableDeclaration","scope":5178,"src":"6229:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5152,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:19"},"returnParameters":{"id":5157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5178,"src":"6267:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5155,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:19","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:19"},"scope":6636,"src":"6210:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5205,"nodeType":"Block","src":"6785:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"6799:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5188,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5187,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:19","memberName":"max","nodeType":"MemberAccess","src":"6807:17:19","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5199,"nodeType":"IfStatement","src":"6795:105:19","trueBody":{"id":5198,"nodeType":"Block","src":"6826:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:19","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"6883:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5193,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"6847:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5197,"nodeType":"RevertStatement","src":"6840:49:19"}]}},{"expression":{"arguments":[{"id":5202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"6924:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5200,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:19","typeDescriptions":{}}},"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5185,"id":5204,"nodeType":"Return","src":"6909:21:19"}]},"documentation":{"id":5179,"nodeType":"StructuredDocumentation","src":"6434:280:19","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5206,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:19","nodeType":"FunctionDefinition","parameters":{"id":5182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5181,"mutability":"mutable","name":"value","nameLocation":"6746:5:19","nodeType":"VariableDeclaration","scope":5206,"src":"6738:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5180,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:19"},"returnParameters":{"id":5185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5206,"src":"6776:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5183,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:19","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:19"},"scope":6636,"src":"6719:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5233,"nodeType":"Block","src":"7294:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"7308:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5216,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5215,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:19","memberName":"max","nodeType":"MemberAccess","src":"7316:17:19","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5227,"nodeType":"IfStatement","src":"7304:105:19","trueBody":{"id":5226,"nodeType":"Block","src":"7335:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:19","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"7392:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5221,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"7356:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5225,"nodeType":"RevertStatement","src":"7349:49:19"}]}},{"expression":{"arguments":[{"id":5230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"7433:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5228,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:19","typeDescriptions":{}}},"id":5231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5213,"id":5232,"nodeType":"Return","src":"7418:21:19"}]},"documentation":{"id":5207,"nodeType":"StructuredDocumentation","src":"6943:280:19","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5234,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:19","nodeType":"FunctionDefinition","parameters":{"id":5210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5209,"mutability":"mutable","name":"value","nameLocation":"7255:5:19","nodeType":"VariableDeclaration","scope":5234,"src":"7247:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5208,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:19"},"returnParameters":{"id":5213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5234,"src":"7285:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5211,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:19","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:19"},"scope":6636,"src":"7228:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5261,"nodeType":"Block","src":"7803:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5237,"src":"7817:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5244,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5243,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:19","memberName":"max","nodeType":"MemberAccess","src":"7825:17:19","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5255,"nodeType":"IfStatement","src":"7813:105:19","trueBody":{"id":5254,"nodeType":"Block","src":"7844:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:19","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5237,"src":"7901:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5249,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"7865:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5253,"nodeType":"RevertStatement","src":"7858:49:19"}]}},{"expression":{"arguments":[{"id":5258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5237,"src":"7942:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5256,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:19","typeDescriptions":{}}},"id":5259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5241,"id":5260,"nodeType":"Return","src":"7927:21:19"}]},"documentation":{"id":5235,"nodeType":"StructuredDocumentation","src":"7452:280:19","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5262,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:19","nodeType":"FunctionDefinition","parameters":{"id":5238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5237,"mutability":"mutable","name":"value","nameLocation":"7764:5:19","nodeType":"VariableDeclaration","scope":5262,"src":"7756:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5236,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:19"},"returnParameters":{"id":5241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5262,"src":"7794:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5239,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:19","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:19"},"scope":6636,"src":"7737:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5289,"nodeType":"Block","src":"8312:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"8326:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5272,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5271,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:19","memberName":"max","nodeType":"MemberAccess","src":"8334:17:19","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5283,"nodeType":"IfStatement","src":"8322:105:19","trueBody":{"id":5282,"nodeType":"Block","src":"8353:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:19","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"8410:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5277,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"8374:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5281,"nodeType":"RevertStatement","src":"8367:49:19"}]}},{"expression":{"arguments":[{"id":5286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"8451:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5284,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:19","typeDescriptions":{}}},"id":5287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5269,"id":5288,"nodeType":"Return","src":"8436:21:19"}]},"documentation":{"id":5263,"nodeType":"StructuredDocumentation","src":"7961:280:19","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5290,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:19","nodeType":"FunctionDefinition","parameters":{"id":5266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5265,"mutability":"mutable","name":"value","nameLocation":"8273:5:19","nodeType":"VariableDeclaration","scope":5290,"src":"8265:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5264,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:19"},"returnParameters":{"id":5269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5290,"src":"8303:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5267,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:19","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:19"},"scope":6636,"src":"8246:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5317,"nodeType":"Block","src":"8821:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5293,"src":"8835:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5300,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5299,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:19","memberName":"max","nodeType":"MemberAccess","src":"8843:17:19","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5311,"nodeType":"IfStatement","src":"8831:105:19","trueBody":{"id":5310,"nodeType":"Block","src":"8862:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:19","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5293,"src":"8919:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5305,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"8883:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5309,"nodeType":"RevertStatement","src":"8876:49:19"}]}},{"expression":{"arguments":[{"id":5314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5293,"src":"8960:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5312,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:19","typeDescriptions":{}}},"id":5315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5297,"id":5316,"nodeType":"Return","src":"8945:21:19"}]},"documentation":{"id":5291,"nodeType":"StructuredDocumentation","src":"8470:280:19","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5318,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:19","nodeType":"FunctionDefinition","parameters":{"id":5294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5293,"mutability":"mutable","name":"value","nameLocation":"8782:5:19","nodeType":"VariableDeclaration","scope":5318,"src":"8774:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5292,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:19"},"returnParameters":{"id":5297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5318,"src":"8812:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5295,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:19","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:19"},"scope":6636,"src":"8755:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5345,"nodeType":"Block","src":"9330:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"9344:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5328,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5327,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:19","memberName":"max","nodeType":"MemberAccess","src":"9352:17:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5339,"nodeType":"IfStatement","src":"9340:105:19","trueBody":{"id":5338,"nodeType":"Block","src":"9371:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"9428:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5333,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"9392:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5337,"nodeType":"RevertStatement","src":"9385:49:19"}]}},{"expression":{"arguments":[{"id":5342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"9469:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5340,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:19","typeDescriptions":{}}},"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5325,"id":5344,"nodeType":"Return","src":"9454:21:19"}]},"documentation":{"id":5319,"nodeType":"StructuredDocumentation","src":"8979:280:19","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5346,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:19","nodeType":"FunctionDefinition","parameters":{"id":5322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5321,"mutability":"mutable","name":"value","nameLocation":"9291:5:19","nodeType":"VariableDeclaration","scope":5346,"src":"9283:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5320,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:19"},"returnParameters":{"id":5325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5346,"src":"9321:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5323,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:19"},"scope":6636,"src":"9264:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5373,"nodeType":"Block","src":"9839:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5349,"src":"9853:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5356,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5355,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:19","memberName":"max","nodeType":"MemberAccess","src":"9861:17:19","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5367,"nodeType":"IfStatement","src":"9849:105:19","trueBody":{"id":5366,"nodeType":"Block","src":"9880:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:19","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5349,"src":"9937:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5361,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"9901:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5365,"nodeType":"RevertStatement","src":"9894:49:19"}]}},{"expression":{"arguments":[{"id":5370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5349,"src":"9978:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5368,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:19","typeDescriptions":{}}},"id":5371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5353,"id":5372,"nodeType":"Return","src":"9963:21:19"}]},"documentation":{"id":5347,"nodeType":"StructuredDocumentation","src":"9488:280:19","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5374,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:19","nodeType":"FunctionDefinition","parameters":{"id":5350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5349,"mutability":"mutable","name":"value","nameLocation":"9800:5:19","nodeType":"VariableDeclaration","scope":5374,"src":"9792:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5348,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:19"},"returnParameters":{"id":5353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5374,"src":"9830:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5351,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:19","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:19"},"scope":6636,"src":"9773:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5401,"nodeType":"Block","src":"10348:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"10362:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5384,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5383,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:19","memberName":"max","nodeType":"MemberAccess","src":"10370:17:19","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5395,"nodeType":"IfStatement","src":"10358:105:19","trueBody":{"id":5394,"nodeType":"Block","src":"10389:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:19","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"10446:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5389,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"10410:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5393,"nodeType":"RevertStatement","src":"10403:49:19"}]}},{"expression":{"arguments":[{"id":5398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"10487:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5396,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:19","typeDescriptions":{}}},"id":5399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5381,"id":5400,"nodeType":"Return","src":"10472:21:19"}]},"documentation":{"id":5375,"nodeType":"StructuredDocumentation","src":"9997:280:19","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5402,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:19","nodeType":"FunctionDefinition","parameters":{"id":5378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5377,"mutability":"mutable","name":"value","nameLocation":"10309:5:19","nodeType":"VariableDeclaration","scope":5402,"src":"10301:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5376,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:19"},"returnParameters":{"id":5381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5402,"src":"10339:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5379,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:19","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:19"},"scope":6636,"src":"10282:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5429,"nodeType":"Block","src":"10857:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"10871:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5412,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5411,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:19","memberName":"max","nodeType":"MemberAccess","src":"10879:17:19","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5423,"nodeType":"IfStatement","src":"10867:105:19","trueBody":{"id":5422,"nodeType":"Block","src":"10898:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:19","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"10955:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5417,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"10919:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5421,"nodeType":"RevertStatement","src":"10912:49:19"}]}},{"expression":{"arguments":[{"id":5426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"10996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5424,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:19","typeDescriptions":{}}},"id":5427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5409,"id":5428,"nodeType":"Return","src":"10981:21:19"}]},"documentation":{"id":5403,"nodeType":"StructuredDocumentation","src":"10506:280:19","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5430,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:19","nodeType":"FunctionDefinition","parameters":{"id":5406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5405,"mutability":"mutable","name":"value","nameLocation":"10818:5:19","nodeType":"VariableDeclaration","scope":5430,"src":"10810:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5404,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:19"},"returnParameters":{"id":5409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5430,"src":"10848:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5407,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:19","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:19"},"scope":6636,"src":"10791:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5457,"nodeType":"Block","src":"11360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"11374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5440,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5439,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:19","memberName":"max","nodeType":"MemberAccess","src":"11382:16:19","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5451,"nodeType":"IfStatement","src":"11370:103:19","trueBody":{"id":5450,"nodeType":"Block","src":"11400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"11456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5445,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"11421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5449,"nodeType":"RevertStatement","src":"11414:48:19"}]}},{"expression":{"arguments":[{"id":5454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"11496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5452,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:19","typeDescriptions":{}}},"id":5455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5437,"id":5456,"nodeType":"Return","src":"11482:20:19"}]},"documentation":{"id":5431,"nodeType":"StructuredDocumentation","src":"11015:276:19","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5458,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:19","nodeType":"FunctionDefinition","parameters":{"id":5434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5433,"mutability":"mutable","name":"value","nameLocation":"11322:5:19","nodeType":"VariableDeclaration","scope":5458,"src":"11314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5432,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:19"},"returnParameters":{"id":5437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5458,"src":"11352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5435,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:19","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:19"},"scope":6636,"src":"11296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5485,"nodeType":"Block","src":"11860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"11874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5468,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5467,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:19","memberName":"max","nodeType":"MemberAccess","src":"11882:16:19","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5479,"nodeType":"IfStatement","src":"11870:103:19","trueBody":{"id":5478,"nodeType":"Block","src":"11900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"11956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5473,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"11921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5477,"nodeType":"RevertStatement","src":"11914:48:19"}]}},{"expression":{"arguments":[{"id":5482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"11996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5480,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:19","typeDescriptions":{}}},"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5465,"id":5484,"nodeType":"Return","src":"11982:20:19"}]},"documentation":{"id":5459,"nodeType":"StructuredDocumentation","src":"11515:276:19","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5486,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:19","nodeType":"FunctionDefinition","parameters":{"id":5462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5461,"mutability":"mutable","name":"value","nameLocation":"11822:5:19","nodeType":"VariableDeclaration","scope":5486,"src":"11814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5460,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:19"},"returnParameters":{"id":5465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5486,"src":"11852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5463,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:19","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:19"},"scope":6636,"src":"11796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5513,"nodeType":"Block","src":"12360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5489,"src":"12374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5496,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5495,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:19","memberName":"max","nodeType":"MemberAccess","src":"12382:16:19","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5507,"nodeType":"IfStatement","src":"12370:103:19","trueBody":{"id":5506,"nodeType":"Block","src":"12400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5489,"src":"12456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5501,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"12421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5505,"nodeType":"RevertStatement","src":"12414:48:19"}]}},{"expression":{"arguments":[{"id":5510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5489,"src":"12496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5508,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:19","typeDescriptions":{}}},"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5493,"id":5512,"nodeType":"Return","src":"12482:20:19"}]},"documentation":{"id":5487,"nodeType":"StructuredDocumentation","src":"12015:276:19","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5514,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:19","nodeType":"FunctionDefinition","parameters":{"id":5490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5489,"mutability":"mutable","name":"value","nameLocation":"12322:5:19","nodeType":"VariableDeclaration","scope":5514,"src":"12314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5488,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:19"},"returnParameters":{"id":5493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5514,"src":"12352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5491,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:19","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:19"},"scope":6636,"src":"12296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5541,"nodeType":"Block","src":"12860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"12874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5524,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5523,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:19","memberName":"max","nodeType":"MemberAccess","src":"12882:16:19","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5535,"nodeType":"IfStatement","src":"12870:103:19","trueBody":{"id":5534,"nodeType":"Block","src":"12900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"12956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5529,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"12921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5533,"nodeType":"RevertStatement","src":"12914:48:19"}]}},{"expression":{"arguments":[{"id":5538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"12996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5536,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:19","typeDescriptions":{}}},"id":5539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5521,"id":5540,"nodeType":"Return","src":"12982:20:19"}]},"documentation":{"id":5515,"nodeType":"StructuredDocumentation","src":"12515:276:19","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5542,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:19","nodeType":"FunctionDefinition","parameters":{"id":5518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5517,"mutability":"mutable","name":"value","nameLocation":"12822:5:19","nodeType":"VariableDeclaration","scope":5542,"src":"12814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5516,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:19"},"returnParameters":{"id":5521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5520,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5542,"src":"12852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5519,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:19","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:19"},"scope":6636,"src":"12796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5569,"nodeType":"Block","src":"13360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"13374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5552,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5551,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:19","memberName":"max","nodeType":"MemberAccess","src":"13382:16:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5563,"nodeType":"IfStatement","src":"13370:103:19","trueBody":{"id":5562,"nodeType":"Block","src":"13400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"13456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5557,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"13421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5561,"nodeType":"RevertStatement","src":"13414:48:19"}]}},{"expression":{"arguments":[{"id":5566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"13496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5564,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:19","typeDescriptions":{}}},"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5549,"id":5568,"nodeType":"Return","src":"13482:20:19"}]},"documentation":{"id":5543,"nodeType":"StructuredDocumentation","src":"13015:276:19","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5570,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:19","nodeType":"FunctionDefinition","parameters":{"id":5546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5545,"mutability":"mutable","name":"value","nameLocation":"13322:5:19","nodeType":"VariableDeclaration","scope":5570,"src":"13314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5544,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:19"},"returnParameters":{"id":5549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5570,"src":"13352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5547,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:19"},"scope":6636,"src":"13296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5597,"nodeType":"Block","src":"13860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"13874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5580,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5579,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:19","memberName":"max","nodeType":"MemberAccess","src":"13882:16:19","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5591,"nodeType":"IfStatement","src":"13870:103:19","trueBody":{"id":5590,"nodeType":"Block","src":"13900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"13956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5585,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"13921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5589,"nodeType":"RevertStatement","src":"13914:48:19"}]}},{"expression":{"arguments":[{"id":5594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"13996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5592,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:19","typeDescriptions":{}}},"id":5595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5577,"id":5596,"nodeType":"Return","src":"13982:20:19"}]},"documentation":{"id":5571,"nodeType":"StructuredDocumentation","src":"13515:276:19","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5598,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:19","nodeType":"FunctionDefinition","parameters":{"id":5574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5573,"mutability":"mutable","name":"value","nameLocation":"13822:5:19","nodeType":"VariableDeclaration","scope":5598,"src":"13814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5572,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:19"},"returnParameters":{"id":5577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5598,"src":"13852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5575,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:19","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:19"},"scope":6636,"src":"13796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5625,"nodeType":"Block","src":"14360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"14374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5608,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5607,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:19","memberName":"max","nodeType":"MemberAccess","src":"14382:16:19","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5619,"nodeType":"IfStatement","src":"14370:103:19","trueBody":{"id":5618,"nodeType":"Block","src":"14400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"14456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5613,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"14421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5617,"nodeType":"RevertStatement","src":"14414:48:19"}]}},{"expression":{"arguments":[{"id":5622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"14496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5620,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:19","typeDescriptions":{}}},"id":5623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5605,"id":5624,"nodeType":"Return","src":"14482:20:19"}]},"documentation":{"id":5599,"nodeType":"StructuredDocumentation","src":"14015:276:19","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5626,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:19","nodeType":"FunctionDefinition","parameters":{"id":5602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5601,"mutability":"mutable","name":"value","nameLocation":"14322:5:19","nodeType":"VariableDeclaration","scope":5626,"src":"14314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5600,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:19"},"returnParameters":{"id":5605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5626,"src":"14352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5603,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:19","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:19"},"scope":6636,"src":"14296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5653,"nodeType":"Block","src":"14860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"14874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5636,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5635,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:19","memberName":"max","nodeType":"MemberAccess","src":"14882:16:19","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5647,"nodeType":"IfStatement","src":"14870:103:19","trueBody":{"id":5646,"nodeType":"Block","src":"14900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"14956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5641,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"14921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5645,"nodeType":"RevertStatement","src":"14914:48:19"}]}},{"expression":{"arguments":[{"id":5650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"14996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5648,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:19","typeDescriptions":{}}},"id":5651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5633,"id":5652,"nodeType":"Return","src":"14982:20:19"}]},"documentation":{"id":5627,"nodeType":"StructuredDocumentation","src":"14515:276:19","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5654,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:19","nodeType":"FunctionDefinition","parameters":{"id":5630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5629,"mutability":"mutable","name":"value","nameLocation":"14822:5:19","nodeType":"VariableDeclaration","scope":5654,"src":"14814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5628,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:19"},"returnParameters":{"id":5633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5654,"src":"14852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5631,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:19","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:19"},"scope":6636,"src":"14796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5681,"nodeType":"Block","src":"15360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"15374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5664,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5663,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:19","memberName":"max","nodeType":"MemberAccess","src":"15382:16:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5675,"nodeType":"IfStatement","src":"15370:103:19","trueBody":{"id":5674,"nodeType":"Block","src":"15400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"15456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5669,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"15421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5673,"nodeType":"RevertStatement","src":"15414:48:19"}]}},{"expression":{"arguments":[{"id":5678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"15496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5676,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:19","typeDescriptions":{}}},"id":5679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5661,"id":5680,"nodeType":"Return","src":"15482:20:19"}]},"documentation":{"id":5655,"nodeType":"StructuredDocumentation","src":"15015:276:19","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5682,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:19","nodeType":"FunctionDefinition","parameters":{"id":5658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5657,"mutability":"mutable","name":"value","nameLocation":"15322:5:19","nodeType":"VariableDeclaration","scope":5682,"src":"15314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5656,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:19"},"returnParameters":{"id":5661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5682,"src":"15352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5659,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:19"},"scope":6636,"src":"15296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5709,"nodeType":"Block","src":"15860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5685,"src":"15874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5692,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5691,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:19","memberName":"max","nodeType":"MemberAccess","src":"15882:16:19","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5703,"nodeType":"IfStatement","src":"15870:103:19","trueBody":{"id":5702,"nodeType":"Block","src":"15900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5685,"src":"15956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5697,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"15921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5701,"nodeType":"RevertStatement","src":"15914:48:19"}]}},{"expression":{"arguments":[{"id":5706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5685,"src":"15996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5704,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:19","typeDescriptions":{}}},"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5689,"id":5708,"nodeType":"Return","src":"15982:20:19"}]},"documentation":{"id":5683,"nodeType":"StructuredDocumentation","src":"15515:276:19","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5710,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:19","nodeType":"FunctionDefinition","parameters":{"id":5686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5685,"mutability":"mutable","name":"value","nameLocation":"15822:5:19","nodeType":"VariableDeclaration","scope":5710,"src":"15814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5684,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:19"},"returnParameters":{"id":5689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5710,"src":"15852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5687,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:19","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:19"},"scope":6636,"src":"15796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5737,"nodeType":"Block","src":"16360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5713,"src":"16374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5720,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5719,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:19","memberName":"max","nodeType":"MemberAccess","src":"16382:16:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5731,"nodeType":"IfStatement","src":"16370:103:19","trueBody":{"id":5730,"nodeType":"Block","src":"16400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5713,"src":"16456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5725,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"16421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5729,"nodeType":"RevertStatement","src":"16414:48:19"}]}},{"expression":{"arguments":[{"id":5734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5713,"src":"16496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5732,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:19","typeDescriptions":{}}},"id":5735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5717,"id":5736,"nodeType":"Return","src":"16482:20:19"}]},"documentation":{"id":5711,"nodeType":"StructuredDocumentation","src":"16015:276:19","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5738,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:19","nodeType":"FunctionDefinition","parameters":{"id":5714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5713,"mutability":"mutable","name":"value","nameLocation":"16322:5:19","nodeType":"VariableDeclaration","scope":5738,"src":"16314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5712,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:19"},"returnParameters":{"id":5717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5738,"src":"16352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5715,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:19"},"scope":6636,"src":"16296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5765,"nodeType":"Block","src":"16854:146:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5741,"src":"16868:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5748,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5747,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:19","memberName":"max","nodeType":"MemberAccess","src":"16876:15:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5759,"nodeType":"IfStatement","src":"16864:101:19","trueBody":{"id":5758,"nodeType":"Block","src":"16893:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5741,"src":"16948:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5753,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"16914:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5757,"nodeType":"RevertStatement","src":"16907:47:19"}]}},{"expression":{"arguments":[{"id":5762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5741,"src":"16987:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5760,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:19","typeDescriptions":{}}},"id":5763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5745,"id":5764,"nodeType":"Return","src":"16974:19:19"}]},"documentation":{"id":5739,"nodeType":"StructuredDocumentation","src":"16515:272:19","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5766,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:19","nodeType":"FunctionDefinition","parameters":{"id":5742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5741,"mutability":"mutable","name":"value","nameLocation":"16817:5:19","nodeType":"VariableDeclaration","scope":5766,"src":"16809:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5740,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:19"},"returnParameters":{"id":5745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5766,"src":"16847:5:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5743,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:19"},"scope":6636,"src":"16792:208:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5788,"nodeType":"Block","src":"17236:128:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5769,"src":"17250:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5782,"nodeType":"IfStatement","src":"17246:81:19","trueBody":{"id":5781,"nodeType":"Block","src":"17261:66:19","statements":[{"errorCall":{"arguments":[{"id":5778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5769,"src":"17310:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5777,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"17282:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5780,"nodeType":"RevertStatement","src":"17275:41:19"}]}},{"expression":{"arguments":[{"id":5785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5769,"src":"17351:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5783,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:19","typeDescriptions":{}}},"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5773,"id":5787,"nodeType":"Return","src":"17336:21:19"}]},"documentation":{"id":5767,"nodeType":"StructuredDocumentation","src":"17006:160:19","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5789,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:19","nodeType":"FunctionDefinition","parameters":{"id":5770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5769,"mutability":"mutable","name":"value","nameLocation":"17197:5:19","nodeType":"VariableDeclaration","scope":5789,"src":"17190:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5768,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:19"},"returnParameters":{"id":5773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5789,"src":"17227:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5771,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:19"},"scope":6636,"src":"17171:193:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5814,"nodeType":"Block","src":"17761:150:19","statements":[{"expression":{"id":5802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5797,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"17771:10:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"17791:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5798,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:19","typeDescriptions":{}}},"id":5801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5803,"nodeType":"ExpressionStatement","src":"17771:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5804,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"17811:10:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"17825:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5813,"nodeType":"IfStatement","src":"17807:98:19","trueBody":{"id":5812,"nodeType":"Block","src":"17832:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:19","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"17888:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5807,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"17853:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5811,"nodeType":"RevertStatement","src":"17846:48:19"}]}}]},"documentation":{"id":5790,"nodeType":"StructuredDocumentation","src":"17370:312:19","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5815,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:19","nodeType":"FunctionDefinition","parameters":{"id":5793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5792,"mutability":"mutable","name":"value","nameLocation":"17712:5:19","nodeType":"VariableDeclaration","scope":5815,"src":"17705:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5791,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:19"},"returnParameters":{"id":5796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5795,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:19","nodeType":"VariableDeclaration","scope":5815,"src":"17742:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5794,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:19"},"scope":6636,"src":"17687:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5840,"nodeType":"Block","src":"18308:150:19","statements":[{"expression":{"id":5828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5823,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5821,"src":"18318:10:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"18338:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5824,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:19","typeDescriptions":{}}},"id":5827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5829,"nodeType":"ExpressionStatement","src":"18318:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5830,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5821,"src":"18358:10:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"18372:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5839,"nodeType":"IfStatement","src":"18354:98:19","trueBody":{"id":5838,"nodeType":"Block","src":"18379:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:19","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"18435:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5833,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"18400:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5837,"nodeType":"RevertStatement","src":"18393:48:19"}]}}]},"documentation":{"id":5816,"nodeType":"StructuredDocumentation","src":"17917:312:19","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5841,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:19","nodeType":"FunctionDefinition","parameters":{"id":5819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5818,"mutability":"mutable","name":"value","nameLocation":"18259:5:19","nodeType":"VariableDeclaration","scope":5841,"src":"18252:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5817,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:19"},"returnParameters":{"id":5822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5821,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:19","nodeType":"VariableDeclaration","scope":5841,"src":"18289:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5820,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:19"},"scope":6636,"src":"18234:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5866,"nodeType":"Block","src":"18855:150:19","statements":[{"expression":{"id":5854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5849,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5847,"src":"18865:10:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"18885:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5850,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:19","typeDescriptions":{}}},"id":5853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5855,"nodeType":"ExpressionStatement","src":"18865:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5856,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5847,"src":"18905:10:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"18919:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5865,"nodeType":"IfStatement","src":"18901:98:19","trueBody":{"id":5864,"nodeType":"Block","src":"18926:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:19","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"18982:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5859,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"18947:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5863,"nodeType":"RevertStatement","src":"18940:48:19"}]}}]},"documentation":{"id":5842,"nodeType":"StructuredDocumentation","src":"18464:312:19","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5867,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:19","nodeType":"FunctionDefinition","parameters":{"id":5845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5844,"mutability":"mutable","name":"value","nameLocation":"18806:5:19","nodeType":"VariableDeclaration","scope":5867,"src":"18799:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5843,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:19"},"returnParameters":{"id":5848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5847,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:19","nodeType":"VariableDeclaration","scope":5867,"src":"18836:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5846,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:19"},"scope":6636,"src":"18781:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5892,"nodeType":"Block","src":"19402:150:19","statements":[{"expression":{"id":5880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5875,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"19412:10:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5870,"src":"19432:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5876,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:19","typeDescriptions":{}}},"id":5879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5881,"nodeType":"ExpressionStatement","src":"19412:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5882,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"19452:10:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5870,"src":"19466:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5891,"nodeType":"IfStatement","src":"19448:98:19","trueBody":{"id":5890,"nodeType":"Block","src":"19473:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:19","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5870,"src":"19529:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5885,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"19494:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5889,"nodeType":"RevertStatement","src":"19487:48:19"}]}}]},"documentation":{"id":5868,"nodeType":"StructuredDocumentation","src":"19011:312:19","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5893,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:19","nodeType":"FunctionDefinition","parameters":{"id":5871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5870,"mutability":"mutable","name":"value","nameLocation":"19353:5:19","nodeType":"VariableDeclaration","scope":5893,"src":"19346:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5869,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:19"},"returnParameters":{"id":5874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5873,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:19","nodeType":"VariableDeclaration","scope":5893,"src":"19383:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5872,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:19"},"scope":6636,"src":"19328:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5918,"nodeType":"Block","src":"19949:150:19","statements":[{"expression":{"id":5906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5901,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"19959:10:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"19979:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5902,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:19","typeDescriptions":{}}},"id":5905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5907,"nodeType":"ExpressionStatement","src":"19959:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5908,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"19999:10:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"20013:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5917,"nodeType":"IfStatement","src":"19995:98:19","trueBody":{"id":5916,"nodeType":"Block","src":"20020:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:19","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"20076:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5911,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"20041:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5915,"nodeType":"RevertStatement","src":"20034:48:19"}]}}]},"documentation":{"id":5894,"nodeType":"StructuredDocumentation","src":"19558:312:19","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5919,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:19","nodeType":"FunctionDefinition","parameters":{"id":5897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5896,"mutability":"mutable","name":"value","nameLocation":"19900:5:19","nodeType":"VariableDeclaration","scope":5919,"src":"19893:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5895,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:19"},"returnParameters":{"id":5900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5899,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:19","nodeType":"VariableDeclaration","scope":5919,"src":"19930:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5898,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:19"},"scope":6636,"src":"19875:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5944,"nodeType":"Block","src":"20496:150:19","statements":[{"expression":{"id":5932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5927,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5925,"src":"20506:10:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5922,"src":"20526:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5928,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:19","typeDescriptions":{}}},"id":5931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5933,"nodeType":"ExpressionStatement","src":"20506:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5934,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5925,"src":"20546:10:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5922,"src":"20560:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5943,"nodeType":"IfStatement","src":"20542:98:19","trueBody":{"id":5942,"nodeType":"Block","src":"20567:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:19","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5922,"src":"20623:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5937,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"20588:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5941,"nodeType":"RevertStatement","src":"20581:48:19"}]}}]},"documentation":{"id":5920,"nodeType":"StructuredDocumentation","src":"20105:312:19","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5945,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:19","nodeType":"FunctionDefinition","parameters":{"id":5923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5922,"mutability":"mutable","name":"value","nameLocation":"20447:5:19","nodeType":"VariableDeclaration","scope":5945,"src":"20440:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5921,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:19"},"returnParameters":{"id":5926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5925,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:19","nodeType":"VariableDeclaration","scope":5945,"src":"20477:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5924,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:19"},"scope":6636,"src":"20422:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5970,"nodeType":"Block","src":"21043:150:19","statements":[{"expression":{"id":5958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5953,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"21053:10:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"21073:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5954,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:19","typeDescriptions":{}}},"id":5957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5959,"nodeType":"ExpressionStatement","src":"21053:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5960,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"21093:10:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"21107:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5969,"nodeType":"IfStatement","src":"21089:98:19","trueBody":{"id":5968,"nodeType":"Block","src":"21114:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:19","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"21170:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5963,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"21135:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5967,"nodeType":"RevertStatement","src":"21128:48:19"}]}}]},"documentation":{"id":5946,"nodeType":"StructuredDocumentation","src":"20652:312:19","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5971,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:19","nodeType":"FunctionDefinition","parameters":{"id":5949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5948,"mutability":"mutable","name":"value","nameLocation":"20994:5:19","nodeType":"VariableDeclaration","scope":5971,"src":"20987:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5947,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:19"},"returnParameters":{"id":5952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5951,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:19","nodeType":"VariableDeclaration","scope":5971,"src":"21024:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5950,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:19"},"scope":6636,"src":"20969:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5996,"nodeType":"Block","src":"21590:150:19","statements":[{"expression":{"id":5984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5979,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"21600:10:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5974,"src":"21620:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5980,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:19","typeDescriptions":{}}},"id":5983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5985,"nodeType":"ExpressionStatement","src":"21600:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5986,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"21640:10:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5974,"src":"21654:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5995,"nodeType":"IfStatement","src":"21636:98:19","trueBody":{"id":5994,"nodeType":"Block","src":"21661:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:19","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5974,"src":"21717:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5989,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"21682:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5993,"nodeType":"RevertStatement","src":"21675:48:19"}]}}]},"documentation":{"id":5972,"nodeType":"StructuredDocumentation","src":"21199:312:19","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5997,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:19","nodeType":"FunctionDefinition","parameters":{"id":5975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5974,"mutability":"mutable","name":"value","nameLocation":"21541:5:19","nodeType":"VariableDeclaration","scope":5997,"src":"21534:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5973,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:19"},"returnParameters":{"id":5978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5977,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:19","nodeType":"VariableDeclaration","scope":5997,"src":"21571:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5976,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:19"},"scope":6636,"src":"21516:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6022,"nodeType":"Block","src":"22137:150:19","statements":[{"expression":{"id":6010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6005,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"22147:10:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6000,"src":"22167:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6006,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:19","typeDescriptions":{}}},"id":6009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6011,"nodeType":"ExpressionStatement","src":"22147:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6012,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"22187:10:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6000,"src":"22201:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6021,"nodeType":"IfStatement","src":"22183:98:19","trueBody":{"id":6020,"nodeType":"Block","src":"22208:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:19","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6000,"src":"22264:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6015,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"22229:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6019,"nodeType":"RevertStatement","src":"22222:48:19"}]}}]},"documentation":{"id":5998,"nodeType":"StructuredDocumentation","src":"21746:312:19","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6023,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:19","nodeType":"FunctionDefinition","parameters":{"id":6001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6000,"mutability":"mutable","name":"value","nameLocation":"22088:5:19","nodeType":"VariableDeclaration","scope":6023,"src":"22081:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5999,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:19"},"returnParameters":{"id":6004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6003,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:19","nodeType":"VariableDeclaration","scope":6023,"src":"22118:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6002,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:19"},"scope":6636,"src":"22063:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6048,"nodeType":"Block","src":"22684:150:19","statements":[{"expression":{"id":6036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6031,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6029,"src":"22694:10:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6026,"src":"22714:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6032,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:19","typeDescriptions":{}}},"id":6035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6037,"nodeType":"ExpressionStatement","src":"22694:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6038,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6029,"src":"22734:10:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6026,"src":"22748:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6047,"nodeType":"IfStatement","src":"22730:98:19","trueBody":{"id":6046,"nodeType":"Block","src":"22755:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:19","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6026,"src":"22811:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6041,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"22776:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6045,"nodeType":"RevertStatement","src":"22769:48:19"}]}}]},"documentation":{"id":6024,"nodeType":"StructuredDocumentation","src":"22293:312:19","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6049,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:19","nodeType":"FunctionDefinition","parameters":{"id":6027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6026,"mutability":"mutable","name":"value","nameLocation":"22635:5:19","nodeType":"VariableDeclaration","scope":6049,"src":"22628:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6025,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:19"},"returnParameters":{"id":6030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6029,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:19","nodeType":"VariableDeclaration","scope":6049,"src":"22665:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6028,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:19"},"scope":6636,"src":"22610:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6074,"nodeType":"Block","src":"23231:150:19","statements":[{"expression":{"id":6062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6057,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"23241:10:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6052,"src":"23261:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6058,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:19","typeDescriptions":{}}},"id":6061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6063,"nodeType":"ExpressionStatement","src":"23241:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6064,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"23281:10:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6052,"src":"23295:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6073,"nodeType":"IfStatement","src":"23277:98:19","trueBody":{"id":6072,"nodeType":"Block","src":"23302:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:19","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6052,"src":"23358:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6067,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"23323:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6071,"nodeType":"RevertStatement","src":"23316:48:19"}]}}]},"documentation":{"id":6050,"nodeType":"StructuredDocumentation","src":"22840:312:19","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6075,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:19","nodeType":"FunctionDefinition","parameters":{"id":6053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6052,"mutability":"mutable","name":"value","nameLocation":"23182:5:19","nodeType":"VariableDeclaration","scope":6075,"src":"23175:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6051,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:19"},"returnParameters":{"id":6056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6055,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:19","nodeType":"VariableDeclaration","scope":6075,"src":"23212:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6054,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:19"},"scope":6636,"src":"23157:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6100,"nodeType":"Block","src":"23778:150:19","statements":[{"expression":{"id":6088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6083,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"23788:10:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6078,"src":"23808:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6084,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:19","typeDescriptions":{}}},"id":6087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6089,"nodeType":"ExpressionStatement","src":"23788:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6090,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"23828:10:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6078,"src":"23842:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6099,"nodeType":"IfStatement","src":"23824:98:19","trueBody":{"id":6098,"nodeType":"Block","src":"23849:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:19","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6078,"src":"23905:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6093,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"23870:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6097,"nodeType":"RevertStatement","src":"23863:48:19"}]}}]},"documentation":{"id":6076,"nodeType":"StructuredDocumentation","src":"23387:312:19","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6101,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:19","nodeType":"FunctionDefinition","parameters":{"id":6079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6078,"mutability":"mutable","name":"value","nameLocation":"23729:5:19","nodeType":"VariableDeclaration","scope":6101,"src":"23722:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6077,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:19"},"returnParameters":{"id":6082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6081,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:19","nodeType":"VariableDeclaration","scope":6101,"src":"23759:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6080,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:19"},"scope":6636,"src":"23704:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6126,"nodeType":"Block","src":"24325:150:19","statements":[{"expression":{"id":6114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6109,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6107,"src":"24335:10:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6104,"src":"24355:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6110,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:19","typeDescriptions":{}}},"id":6113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6115,"nodeType":"ExpressionStatement","src":"24335:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6116,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6107,"src":"24375:10:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6104,"src":"24389:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6125,"nodeType":"IfStatement","src":"24371:98:19","trueBody":{"id":6124,"nodeType":"Block","src":"24396:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:19","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6104,"src":"24452:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6119,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"24417:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6123,"nodeType":"RevertStatement","src":"24410:48:19"}]}}]},"documentation":{"id":6102,"nodeType":"StructuredDocumentation","src":"23934:312:19","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6127,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:19","nodeType":"FunctionDefinition","parameters":{"id":6105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6104,"mutability":"mutable","name":"value","nameLocation":"24276:5:19","nodeType":"VariableDeclaration","scope":6127,"src":"24269:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6103,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:19"},"returnParameters":{"id":6108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6107,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:19","nodeType":"VariableDeclaration","scope":6127,"src":"24306:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6106,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:19"},"scope":6636,"src":"24251:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6152,"nodeType":"Block","src":"24872:150:19","statements":[{"expression":{"id":6140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6135,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6133,"src":"24882:10:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"24902:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6136,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:19","typeDescriptions":{}}},"id":6139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6141,"nodeType":"ExpressionStatement","src":"24882:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6142,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6133,"src":"24922:10:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"24936:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6151,"nodeType":"IfStatement","src":"24918:98:19","trueBody":{"id":6150,"nodeType":"Block","src":"24943:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:19","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"24999:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6145,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"24964:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6149,"nodeType":"RevertStatement","src":"24957:48:19"}]}}]},"documentation":{"id":6128,"nodeType":"StructuredDocumentation","src":"24481:312:19","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6153,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:19","nodeType":"FunctionDefinition","parameters":{"id":6131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6130,"mutability":"mutable","name":"value","nameLocation":"24823:5:19","nodeType":"VariableDeclaration","scope":6153,"src":"24816:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6129,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:19"},"returnParameters":{"id":6134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6133,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:19","nodeType":"VariableDeclaration","scope":6153,"src":"24853:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6132,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:19"},"scope":6636,"src":"24798:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6178,"nodeType":"Block","src":"25419:150:19","statements":[{"expression":{"id":6166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6161,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"25429:10:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"25449:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6162,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:19","typeDescriptions":{}}},"id":6165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6167,"nodeType":"ExpressionStatement","src":"25429:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6168,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"25469:10:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"25483:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6177,"nodeType":"IfStatement","src":"25465:98:19","trueBody":{"id":6176,"nodeType":"Block","src":"25490:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:19","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"25546:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6171,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"25511:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6175,"nodeType":"RevertStatement","src":"25504:48:19"}]}}]},"documentation":{"id":6154,"nodeType":"StructuredDocumentation","src":"25028:312:19","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6179,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:19","nodeType":"FunctionDefinition","parameters":{"id":6157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6156,"mutability":"mutable","name":"value","nameLocation":"25370:5:19","nodeType":"VariableDeclaration","scope":6179,"src":"25363:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6155,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:19"},"returnParameters":{"id":6160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6159,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:19","nodeType":"VariableDeclaration","scope":6179,"src":"25400:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6158,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:19"},"scope":6636,"src":"25345:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6204,"nodeType":"Block","src":"25966:150:19","statements":[{"expression":{"id":6192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6187,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6185,"src":"25976:10:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"25996:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6188,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:19","typeDescriptions":{}}},"id":6191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6193,"nodeType":"ExpressionStatement","src":"25976:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6194,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6185,"src":"26016:10:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"26030:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6203,"nodeType":"IfStatement","src":"26012:98:19","trueBody":{"id":6202,"nodeType":"Block","src":"26037:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"26093:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6197,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"26058:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6201,"nodeType":"RevertStatement","src":"26051:48:19"}]}}]},"documentation":{"id":6180,"nodeType":"StructuredDocumentation","src":"25575:312:19","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6205,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:19","nodeType":"FunctionDefinition","parameters":{"id":6183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6182,"mutability":"mutable","name":"value","nameLocation":"25917:5:19","nodeType":"VariableDeclaration","scope":6205,"src":"25910:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6181,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:19"},"returnParameters":{"id":6186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6185,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:19","nodeType":"VariableDeclaration","scope":6205,"src":"25947:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6184,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:19"},"scope":6636,"src":"25892:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6230,"nodeType":"Block","src":"26513:150:19","statements":[{"expression":{"id":6218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6213,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6211,"src":"26523:10:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6208,"src":"26543:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6214,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:19","typeDescriptions":{}}},"id":6217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6219,"nodeType":"ExpressionStatement","src":"26523:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6220,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6211,"src":"26563:10:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6208,"src":"26577:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6229,"nodeType":"IfStatement","src":"26559:98:19","trueBody":{"id":6228,"nodeType":"Block","src":"26584:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:19","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6208,"src":"26640:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6223,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"26605:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6227,"nodeType":"RevertStatement","src":"26598:48:19"}]}}]},"documentation":{"id":6206,"nodeType":"StructuredDocumentation","src":"26122:312:19","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6231,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:19","nodeType":"FunctionDefinition","parameters":{"id":6209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6208,"mutability":"mutable","name":"value","nameLocation":"26464:5:19","nodeType":"VariableDeclaration","scope":6231,"src":"26457:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6207,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:19"},"returnParameters":{"id":6212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6211,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:19","nodeType":"VariableDeclaration","scope":6231,"src":"26494:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6210,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:19"},"scope":6636,"src":"26439:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6256,"nodeType":"Block","src":"27060:150:19","statements":[{"expression":{"id":6244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6239,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"27070:10:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"27090:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6240,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:19","typeDescriptions":{}}},"id":6243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6245,"nodeType":"ExpressionStatement","src":"27070:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6246,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"27110:10:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"27124:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6255,"nodeType":"IfStatement","src":"27106:98:19","trueBody":{"id":6254,"nodeType":"Block","src":"27131:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:19","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"27187:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6249,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"27152:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6253,"nodeType":"RevertStatement","src":"27145:48:19"}]}}]},"documentation":{"id":6232,"nodeType":"StructuredDocumentation","src":"26669:312:19","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6257,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:19","nodeType":"FunctionDefinition","parameters":{"id":6235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6234,"mutability":"mutable","name":"value","nameLocation":"27011:5:19","nodeType":"VariableDeclaration","scope":6257,"src":"27004:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6233,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:19"},"returnParameters":{"id":6238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6237,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:19","nodeType":"VariableDeclaration","scope":6257,"src":"27041:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6236,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:19"},"scope":6636,"src":"26986:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6282,"nodeType":"Block","src":"27607:150:19","statements":[{"expression":{"id":6270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6265,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"27617:10:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6260,"src":"27637:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6266,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:19","typeDescriptions":{}}},"id":6269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6271,"nodeType":"ExpressionStatement","src":"27617:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6272,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"27657:10:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6260,"src":"27671:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6281,"nodeType":"IfStatement","src":"27653:98:19","trueBody":{"id":6280,"nodeType":"Block","src":"27678:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:19","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6260,"src":"27734:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6275,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"27699:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6279,"nodeType":"RevertStatement","src":"27692:48:19"}]}}]},"documentation":{"id":6258,"nodeType":"StructuredDocumentation","src":"27216:312:19","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6283,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:19","nodeType":"FunctionDefinition","parameters":{"id":6261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6260,"mutability":"mutable","name":"value","nameLocation":"27558:5:19","nodeType":"VariableDeclaration","scope":6283,"src":"27551:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6259,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:19"},"returnParameters":{"id":6264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6263,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:19","nodeType":"VariableDeclaration","scope":6283,"src":"27588:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6262,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:19"},"scope":6636,"src":"27533:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6308,"nodeType":"Block","src":"28147:148:19","statements":[{"expression":{"id":6296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6291,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"28157:10:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"28176:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6292,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:19","typeDescriptions":{}}},"id":6295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6297,"nodeType":"ExpressionStatement","src":"28157:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6298,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"28196:10:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"28210:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6307,"nodeType":"IfStatement","src":"28192:97:19","trueBody":{"id":6306,"nodeType":"Block","src":"28217:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:19","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"28272:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6301,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"28238:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6305,"nodeType":"RevertStatement","src":"28231:47:19"}]}}]},"documentation":{"id":6284,"nodeType":"StructuredDocumentation","src":"27763:307:19","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6309,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:19","nodeType":"FunctionDefinition","parameters":{"id":6287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6286,"mutability":"mutable","name":"value","nameLocation":"28099:5:19","nodeType":"VariableDeclaration","scope":6309,"src":"28092:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6285,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:19"},"returnParameters":{"id":6290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6289,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:19","nodeType":"VariableDeclaration","scope":6309,"src":"28129:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6288,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:19"},"scope":6636,"src":"28075:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6334,"nodeType":"Block","src":"28685:148:19","statements":[{"expression":{"id":6322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6317,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6315,"src":"28695:10:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6312,"src":"28714:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6318,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:19","typeDescriptions":{}}},"id":6321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6323,"nodeType":"ExpressionStatement","src":"28695:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6324,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6315,"src":"28734:10:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6312,"src":"28748:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6333,"nodeType":"IfStatement","src":"28730:97:19","trueBody":{"id":6332,"nodeType":"Block","src":"28755:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:19","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6312,"src":"28810:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6327,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"28776:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6331,"nodeType":"RevertStatement","src":"28769:47:19"}]}}]},"documentation":{"id":6310,"nodeType":"StructuredDocumentation","src":"28301:307:19","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6335,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:19","nodeType":"FunctionDefinition","parameters":{"id":6313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6312,"mutability":"mutable","name":"value","nameLocation":"28637:5:19","nodeType":"VariableDeclaration","scope":6335,"src":"28630:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6311,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:19"},"returnParameters":{"id":6316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6315,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:19","nodeType":"VariableDeclaration","scope":6335,"src":"28667:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6314,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:19"},"scope":6636,"src":"28613:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6360,"nodeType":"Block","src":"29223:148:19","statements":[{"expression":{"id":6348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6343,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"29233:10:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6338,"src":"29252:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6344,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:19","typeDescriptions":{}}},"id":6347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6349,"nodeType":"ExpressionStatement","src":"29233:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6350,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"29272:10:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6338,"src":"29286:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6359,"nodeType":"IfStatement","src":"29268:97:19","trueBody":{"id":6358,"nodeType":"Block","src":"29293:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:19","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6338,"src":"29348:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6353,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"29314:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6357,"nodeType":"RevertStatement","src":"29307:47:19"}]}}]},"documentation":{"id":6336,"nodeType":"StructuredDocumentation","src":"28839:307:19","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6361,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:19","nodeType":"FunctionDefinition","parameters":{"id":6339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6338,"mutability":"mutable","name":"value","nameLocation":"29175:5:19","nodeType":"VariableDeclaration","scope":6361,"src":"29168:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6337,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:19"},"returnParameters":{"id":6342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6341,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:19","nodeType":"VariableDeclaration","scope":6361,"src":"29205:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6340,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:19"},"scope":6636,"src":"29151:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6386,"nodeType":"Block","src":"29761:148:19","statements":[{"expression":{"id":6374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6369,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"29771:10:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"29790:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6370,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:19","typeDescriptions":{}}},"id":6373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6375,"nodeType":"ExpressionStatement","src":"29771:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6376,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"29810:10:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"29824:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6385,"nodeType":"IfStatement","src":"29806:97:19","trueBody":{"id":6384,"nodeType":"Block","src":"29831:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:19","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"29886:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6379,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"29852:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6383,"nodeType":"RevertStatement","src":"29845:47:19"}]}}]},"documentation":{"id":6362,"nodeType":"StructuredDocumentation","src":"29377:307:19","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6387,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:19","nodeType":"FunctionDefinition","parameters":{"id":6365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6364,"mutability":"mutable","name":"value","nameLocation":"29713:5:19","nodeType":"VariableDeclaration","scope":6387,"src":"29706:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6363,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:19"},"returnParameters":{"id":6368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6367,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:19","nodeType":"VariableDeclaration","scope":6387,"src":"29743:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6366,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:19"},"scope":6636,"src":"29689:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6412,"nodeType":"Block","src":"30299:148:19","statements":[{"expression":{"id":6400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6395,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"30309:10:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6390,"src":"30328:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6396,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:19","typeDescriptions":{}}},"id":6399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6401,"nodeType":"ExpressionStatement","src":"30309:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6402,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"30348:10:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6390,"src":"30362:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6411,"nodeType":"IfStatement","src":"30344:97:19","trueBody":{"id":6410,"nodeType":"Block","src":"30369:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6390,"src":"30424:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6405,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"30390:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6409,"nodeType":"RevertStatement","src":"30383:47:19"}]}}]},"documentation":{"id":6388,"nodeType":"StructuredDocumentation","src":"29915:307:19","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6413,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:19","nodeType":"FunctionDefinition","parameters":{"id":6391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6390,"mutability":"mutable","name":"value","nameLocation":"30251:5:19","nodeType":"VariableDeclaration","scope":6413,"src":"30244:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6389,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:19"},"returnParameters":{"id":6394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6393,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:19","nodeType":"VariableDeclaration","scope":6413,"src":"30281:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6392,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:19"},"scope":6636,"src":"30227:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6438,"nodeType":"Block","src":"30837:148:19","statements":[{"expression":{"id":6426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6421,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6419,"src":"30847:10:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"30866:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6422,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:19","typeDescriptions":{}}},"id":6425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6427,"nodeType":"ExpressionStatement","src":"30847:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6428,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6419,"src":"30886:10:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"30900:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6437,"nodeType":"IfStatement","src":"30882:97:19","trueBody":{"id":6436,"nodeType":"Block","src":"30907:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:19","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"30962:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6431,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"30928:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6435,"nodeType":"RevertStatement","src":"30921:47:19"}]}}]},"documentation":{"id":6414,"nodeType":"StructuredDocumentation","src":"30453:307:19","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6439,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:19","nodeType":"FunctionDefinition","parameters":{"id":6417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6416,"mutability":"mutable","name":"value","nameLocation":"30789:5:19","nodeType":"VariableDeclaration","scope":6439,"src":"30782:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6415,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:19"},"returnParameters":{"id":6420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6419,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:19","nodeType":"VariableDeclaration","scope":6439,"src":"30819:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6418,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:19"},"scope":6636,"src":"30765:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6464,"nodeType":"Block","src":"31375:148:19","statements":[{"expression":{"id":6452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6447,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"31385:10:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"31404:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6448,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:19","typeDescriptions":{}}},"id":6451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6453,"nodeType":"ExpressionStatement","src":"31385:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6454,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"31424:10:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"31438:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6463,"nodeType":"IfStatement","src":"31420:97:19","trueBody":{"id":6462,"nodeType":"Block","src":"31445:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:19","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"31500:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6457,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"31466:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6461,"nodeType":"RevertStatement","src":"31459:47:19"}]}}]},"documentation":{"id":6440,"nodeType":"StructuredDocumentation","src":"30991:307:19","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6465,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:19","nodeType":"FunctionDefinition","parameters":{"id":6443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6442,"mutability":"mutable","name":"value","nameLocation":"31327:5:19","nodeType":"VariableDeclaration","scope":6465,"src":"31320:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6441,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:19"},"returnParameters":{"id":6446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6445,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:19","nodeType":"VariableDeclaration","scope":6465,"src":"31357:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6444,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:19"},"scope":6636,"src":"31303:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6490,"nodeType":"Block","src":"31913:148:19","statements":[{"expression":{"id":6478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6473,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"31923:10:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6468,"src":"31942:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6474,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:19","typeDescriptions":{}}},"id":6477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6479,"nodeType":"ExpressionStatement","src":"31923:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6480,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"31962:10:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6468,"src":"31976:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6489,"nodeType":"IfStatement","src":"31958:97:19","trueBody":{"id":6488,"nodeType":"Block","src":"31983:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:19","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6468,"src":"32038:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6483,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"32004:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6487,"nodeType":"RevertStatement","src":"31997:47:19"}]}}]},"documentation":{"id":6466,"nodeType":"StructuredDocumentation","src":"31529:307:19","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6491,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:19","nodeType":"FunctionDefinition","parameters":{"id":6469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6468,"mutability":"mutable","name":"value","nameLocation":"31865:5:19","nodeType":"VariableDeclaration","scope":6491,"src":"31858:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6467,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:19"},"returnParameters":{"id":6472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6471,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:19","nodeType":"VariableDeclaration","scope":6491,"src":"31895:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6470,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:19"},"scope":6636,"src":"31841:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6516,"nodeType":"Block","src":"32451:148:19","statements":[{"expression":{"id":6504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6499,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"32461:10:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6494,"src":"32480:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6500,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:19","typeDescriptions":{}}},"id":6503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6505,"nodeType":"ExpressionStatement","src":"32461:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6506,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"32500:10:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6494,"src":"32514:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6515,"nodeType":"IfStatement","src":"32496:97:19","trueBody":{"id":6514,"nodeType":"Block","src":"32521:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6494,"src":"32576:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6509,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"32542:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6513,"nodeType":"RevertStatement","src":"32535:47:19"}]}}]},"documentation":{"id":6492,"nodeType":"StructuredDocumentation","src":"32067:307:19","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6517,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:19","nodeType":"FunctionDefinition","parameters":{"id":6495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6494,"mutability":"mutable","name":"value","nameLocation":"32403:5:19","nodeType":"VariableDeclaration","scope":6517,"src":"32396:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6493,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:19"},"returnParameters":{"id":6498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6497,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:19","nodeType":"VariableDeclaration","scope":6517,"src":"32433:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6496,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:19"},"scope":6636,"src":"32379:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6542,"nodeType":"Block","src":"32989:148:19","statements":[{"expression":{"id":6530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6525,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"32999:10:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"33018:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6526,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:19","typeDescriptions":{}}},"id":6529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6531,"nodeType":"ExpressionStatement","src":"32999:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6532,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"33038:10:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"33052:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6541,"nodeType":"IfStatement","src":"33034:97:19","trueBody":{"id":6540,"nodeType":"Block","src":"33059:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:19","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"33114:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6535,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"33080:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6539,"nodeType":"RevertStatement","src":"33073:47:19"}]}}]},"documentation":{"id":6518,"nodeType":"StructuredDocumentation","src":"32605:307:19","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6543,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:19","nodeType":"FunctionDefinition","parameters":{"id":6521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6520,"mutability":"mutable","name":"value","nameLocation":"32941:5:19","nodeType":"VariableDeclaration","scope":6543,"src":"32934:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6519,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:19"},"returnParameters":{"id":6524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6523,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:19","nodeType":"VariableDeclaration","scope":6543,"src":"32971:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6522,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:19"},"scope":6636,"src":"32917:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6568,"nodeType":"Block","src":"33527:148:19","statements":[{"expression":{"id":6556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6551,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"33537:10:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"33556:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6552,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:19","typeDescriptions":{}}},"id":6555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6557,"nodeType":"ExpressionStatement","src":"33537:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6558,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"33576:10:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"33590:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6567,"nodeType":"IfStatement","src":"33572:97:19","trueBody":{"id":6566,"nodeType":"Block","src":"33597:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"33652:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6561,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"33618:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6565,"nodeType":"RevertStatement","src":"33611:47:19"}]}}]},"documentation":{"id":6544,"nodeType":"StructuredDocumentation","src":"33143:307:19","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6569,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:19","nodeType":"FunctionDefinition","parameters":{"id":6547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6546,"mutability":"mutable","name":"value","nameLocation":"33479:5:19","nodeType":"VariableDeclaration","scope":6569,"src":"33472:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6545,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:19"},"returnParameters":{"id":6550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6549,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:19","nodeType":"VariableDeclaration","scope":6569,"src":"33509:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6548,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:19"},"scope":6636,"src":"33455:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6594,"nodeType":"Block","src":"34058:146:19","statements":[{"expression":{"id":6582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6577,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6575,"src":"34068:10:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"34086:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6578,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:19","typeDescriptions":{}}},"id":6581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6583,"nodeType":"ExpressionStatement","src":"34068:24:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6584,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6575,"src":"34106:10:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"34120:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6593,"nodeType":"IfStatement","src":"34102:96:19","trueBody":{"id":6592,"nodeType":"Block","src":"34127:71:19","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"34181:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6587,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"34148:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6591,"nodeType":"RevertStatement","src":"34141:46:19"}]}}]},"documentation":{"id":6570,"nodeType":"StructuredDocumentation","src":"33681:302:19","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6595,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:19","nodeType":"FunctionDefinition","parameters":{"id":6573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6572,"mutability":"mutable","name":"value","nameLocation":"34011:5:19","nodeType":"VariableDeclaration","scope":6595,"src":"34004:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6571,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:19"},"returnParameters":{"id":6576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6575,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:19","nodeType":"VariableDeclaration","scope":6595,"src":"34041:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6574,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:19"},"scope":6636,"src":"33988:216:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6624,"nodeType":"Block","src":"34444:250:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6598,"src":"34557:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6607,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6606,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:19","memberName":"max","nodeType":"MemberAccess","src":"34573:16:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6604,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:19","typeDescriptions":{}}},"id":6611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6618,"nodeType":"IfStatement","src":"34553:105:19","trueBody":{"id":6617,"nodeType":"Block","src":"34592:66:19","statements":[{"errorCall":{"arguments":[{"id":6614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6598,"src":"34641:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6613,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"34613:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6616,"nodeType":"RevertStatement","src":"34606:41:19"}]}},{"expression":{"arguments":[{"id":6621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6598,"src":"34681:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6619,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:19","typeDescriptions":{}}},"id":6622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6602,"id":6623,"nodeType":"Return","src":"34667:20:19"}]},"documentation":{"id":6596,"nodeType":"StructuredDocumentation","src":"34210:165:19","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6625,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:19","nodeType":"FunctionDefinition","parameters":{"id":6599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6598,"mutability":"mutable","name":"value","nameLocation":"34406:5:19","nodeType":"VariableDeclaration","scope":6625,"src":"34398:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6597,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:19"},"returnParameters":{"id":6602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6625,"src":"34436:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6600,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:19"},"scope":6636,"src":"34380:314:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6634,"nodeType":"Block","src":"34853:87:19","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:19","statements":[{"nodeType":"YulAssignment","src":"34902:22:19","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:19"},"nodeType":"YulFunctionCall","src":"34914:9:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:19"},"nodeType":"YulFunctionCall","src":"34907:17:19"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6628,"isOffset":false,"isSlot":false,"src":"34921:1:19","valueSize":1},{"declaration":6631,"isOffset":false,"isSlot":false,"src":"34902:1:19","valueSize":1}],"flags":["memory-safe"],"id":6633,"nodeType":"InlineAssembly","src":"34863:71:19"}]},"documentation":{"id":6626,"nodeType":"StructuredDocumentation","src":"34700:90:19","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6635,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:19","nodeType":"FunctionDefinition","parameters":{"id":6629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6628,"mutability":"mutable","name":"b","nameLocation":"34816:1:19","nodeType":"VariableDeclaration","scope":6635,"src":"34811:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6627,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:19"},"returnParameters":{"id":6632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6631,"mutability":"mutable","name":"u","nameLocation":"34850:1:19","nodeType":"VariableDeclaration","scope":6635,"src":"34842:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6630,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:19"},"scope":6636,"src":"34795:145:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6637,"src":"769:34173:19","usedErrors":[4881,4886,4893,4898],"usedEvents":[]}],"src":"192:34751:19"},"id":19},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6636],"SignedMath":[6780]},"id":6781,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6638,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6640,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6781,"sourceUnit":6637,"src":"135:40:20","symbolAliases":[{"foreign":{"id":6639,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"143:8:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6641,"nodeType":"StructuredDocumentation","src":"177:80:20","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6780,"linearizedBaseContracts":[6780],"name":"SignedMath","nameLocation":"266:10:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":6670,"nodeType":"Block","src":"746:215:20","statements":[{"id":6669,"nodeType":"UncheckedBlock","src":"756:199:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6653,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6648,"src":"894:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6654,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"900:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6655,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6648,"src":"904:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6657,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6662,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6644,"src":"932:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6660,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"916:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6636_$","typeString":"type(library SafeCast)"}},"id":6661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6635,"src":"916:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6658,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:20","typeDescriptions":{}}},"id":6664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6666,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6652,"id":6668,"nodeType":"Return","src":"887:57:20"}]}]},"documentation":{"id":6642,"nodeType":"StructuredDocumentation","src":"283:374:20","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6671,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:20","nodeType":"FunctionDefinition","parameters":{"id":6649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6644,"mutability":"mutable","name":"condition","nameLocation":"684:9:20","nodeType":"VariableDeclaration","scope":6671,"src":"679:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6643,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6646,"mutability":"mutable","name":"a","nameLocation":"702:1:20","nodeType":"VariableDeclaration","scope":6671,"src":"695:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6645,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6648,"mutability":"mutable","name":"b","nameLocation":"712:1:20","nodeType":"VariableDeclaration","scope":6671,"src":"705:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6647,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:20"},"returnParameters":{"id":6652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6671,"src":"738:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6650,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:20"},"scope":6780,"src":"662:299:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6689,"nodeType":"Block","src":"1102:44:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6682,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"1127:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6683,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6676,"src":"1131:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6685,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"1134:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6686,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6676,"src":"1137:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6681,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6671,"src":"1119:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6680,"id":6688,"nodeType":"Return","src":"1112:27:20"}]},"documentation":{"id":6672,"nodeType":"StructuredDocumentation","src":"967:66:20","text":" @dev Returns the largest of two signed numbers."},"id":6690,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:20","nodeType":"FunctionDefinition","parameters":{"id":6677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6674,"mutability":"mutable","name":"a","nameLocation":"1058:1:20","nodeType":"VariableDeclaration","scope":6690,"src":"1051:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6673,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6676,"mutability":"mutable","name":"b","nameLocation":"1068:1:20","nodeType":"VariableDeclaration","scope":6690,"src":"1061:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6675,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:20"},"returnParameters":{"id":6680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6690,"src":"1094:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6678,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:20"},"scope":6780,"src":"1038:108:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6708,"nodeType":"Block","src":"1288:44:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6701,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"1313:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6702,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"1317:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6704,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"1320:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6705,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"1323:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6700,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6671,"src":"1305:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6699,"id":6707,"nodeType":"Return","src":"1298:27:20"}]},"documentation":{"id":6691,"nodeType":"StructuredDocumentation","src":"1152:67:20","text":" @dev Returns the smallest of two signed numbers."},"id":6709,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:20","nodeType":"FunctionDefinition","parameters":{"id":6696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6693,"mutability":"mutable","name":"a","nameLocation":"1244:1:20","nodeType":"VariableDeclaration","scope":6709,"src":"1237:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6692,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6695,"mutability":"mutable","name":"b","nameLocation":"1254:1:20","nodeType":"VariableDeclaration","scope":6709,"src":"1247:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6694,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:20"},"returnParameters":{"id":6699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6709,"src":"1280:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6697,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:20"},"scope":6780,"src":"1224:108:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6752,"nodeType":"Block","src":"1537:162:20","statements":[{"assignments":[6720],"declarations":[{"constant":false,"id":6720,"mutability":"mutable","name":"x","nameLocation":"1606:1:20","nodeType":"VariableDeclaration","scope":6752,"src":"1599:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6719,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6733,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6721,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6712,"src":"1611:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6722,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"1615:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6724,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6725,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6712,"src":"1622:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6726,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"1626:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6728,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6731,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:20"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6734,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6720,"src":"1651:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6739,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6720,"src":"1671:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6737,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:20","typeDescriptions":{}}},"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6735,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:20","typeDescriptions":{}}},"id":6743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6744,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6712,"src":"1685:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6745,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"1689:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6747,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6749,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6718,"id":6751,"nodeType":"Return","src":"1644:48:20"}]},"documentation":{"id":6710,"nodeType":"StructuredDocumentation","src":"1338:126:20","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6753,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:20","nodeType":"FunctionDefinition","parameters":{"id":6715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6712,"mutability":"mutable","name":"a","nameLocation":"1493:1:20","nodeType":"VariableDeclaration","scope":6753,"src":"1486:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6711,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6714,"mutability":"mutable","name":"b","nameLocation":"1503:1:20","nodeType":"VariableDeclaration","scope":6753,"src":"1496:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6713,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:20"},"returnParameters":{"id":6718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6753,"src":"1529:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6716,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:20"},"scope":6780,"src":"1469:230:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6778,"nodeType":"Block","src":"1843:767:20","statements":[{"id":6777,"nodeType":"UncheckedBlock","src":"1853:751:20","statements":[{"assignments":[6762],"declarations":[{"constant":false,"id":6762,"mutability":"mutable","name":"mask","nameLocation":"2424:4:20","nodeType":"VariableDeclaration","scope":6777,"src":"2417:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6761,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6766,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6763,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"2431:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6769,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"2576:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6770,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6762,"src":"2580:4:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6772,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6773,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6762,"src":"2588:4:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6767,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:20","typeDescriptions":{}}},"id":6775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6760,"id":6776,"nodeType":"Return","src":"2560:33:20"}]}]},"documentation":{"id":6754,"nodeType":"StructuredDocumentation","src":"1705:78:20","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6779,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:20","nodeType":"FunctionDefinition","parameters":{"id":6757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6756,"mutability":"mutable","name":"n","nameLocation":"1808:1:20","nodeType":"VariableDeclaration","scope":6779,"src":"1801:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6755,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:20"},"returnParameters":{"id":6760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6779,"src":"1834:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6758,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:20"},"scope":6780,"src":"1788:822:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6781,"src":"258:2354:20","usedErrors":[],"usedEvents":[]}],"src":"109:2504:20"},"id":20},"contracts/YachtClubMembership.sol":{"ast":{"absolutePath":"contracts/YachtClubMembership.sol","exportedSymbols":{"Context":[1691],"ERC165":[3238],"ERC721":[1293],"ERC721URIStorage":[1556],"ERC721Utils":[1661],"IERC165":[3250],"IERC2981":[171],"IERC4906":[195],"IERC721":[1410],"IERC721Errors":[289],"IERC721Metadata":[1584],"Ownable":[147],"ReentrancyGuard":[1812],"Strings":[3214],"YachtClubMembership":[7769]},"id":7770,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6782,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:21"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":6783,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7770,"sourceUnit":1294,"src":"58:57:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":6784,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7770,"sourceUnit":1557,"src":"116:78:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC2981.sol","file":"@openzeppelin/contracts/interfaces/IERC2981.sol","id":6785,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7770,"sourceUnit":172,"src":"195:57:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6786,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7770,"sourceUnit":148,"src":"253:52:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":6787,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7770,"sourceUnit":1813,"src":"306:59:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6789,"name":"ERC721","nameLocations":["611:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":1293,"src":"611:6:21"},"id":6790,"nodeType":"InheritanceSpecifier","src":"611:6:21"},{"baseName":{"id":6791,"name":"ERC721URIStorage","nameLocations":["619:16:21"],"nodeType":"IdentifierPath","referencedDeclaration":1556,"src":"619:16:21"},"id":6792,"nodeType":"InheritanceSpecifier","src":"619:16:21"},{"baseName":{"id":6793,"name":"IERC2981","nameLocations":["637:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":171,"src":"637:8:21"},"id":6794,"nodeType":"InheritanceSpecifier","src":"637:8:21"},{"baseName":{"id":6795,"name":"Ownable","nameLocations":["647:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"647:7:21"},"id":6796,"nodeType":"InheritanceSpecifier","src":"647:7:21"},{"baseName":{"id":6797,"name":"ReentrancyGuard","nameLocations":["656:15:21"],"nodeType":"IdentifierPath","referencedDeclaration":1812,"src":"656:15:21"},"id":6798,"nodeType":"InheritanceSpecifier","src":"656:15:21"}],"canonicalName":"YachtClubMembership","contractDependencies":[],"contractKind":"contract","documentation":{"id":6788,"nodeType":"StructuredDocumentation","src":"366:212:21","text":" @title Lake Stockton Yacht Club Membership NFT\n @dev ERC-721 contract with ERC-2981 royalty support for yacht club memberships\n Includes NFC card linking functionality for real-world identification"},"fullyImplemented":true,"id":7769,"linearizedBaseContracts":[7769,1812,147,171,1556,1293,289,1584,195,1410,3238,3250,1691],"name":"YachtClubMembership","nameLocation":"588:19:21","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":6800,"mutability":"mutable","name":"_tokenIdCounter","nameLocation":"694:15:21","nodeType":"VariableDeclaration","scope":7769,"src":"678:31:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6799,"name":"uint256","nodeType":"ElementaryTypeName","src":"678:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":6802,"mutability":"mutable","name":"_royaltyRecipient","nameLocation":"756:17:21","nodeType":"VariableDeclaration","scope":7769,"src":"740:33:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6801,"name":"address","nodeType":"ElementaryTypeName","src":"740:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":6804,"mutability":"mutable","name":"_royaltyFraction","nameLocation":"794:16:21","nodeType":"VariableDeclaration","scope":7769,"src":"779:31:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6803,"name":"uint96","nodeType":"ElementaryTypeName","src":"779:6:21","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"private"},{"constant":false,"functionSelector":"1ba538cd","id":6806,"mutability":"mutable","name":"authorizedMinter","nameLocation":"914:16:21","nodeType":"VariableDeclaration","scope":7769,"src":"899:31:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6805,"name":"address","nodeType":"ElementaryTypeName","src":"899:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"8423df79","id":6809,"mutability":"mutable","name":"transfersRestricted","nameLocation":"982:19:21","nodeType":"VariableDeclaration","scope":7769,"src":"970:38:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6807,"name":"bool","nodeType":"ElementaryTypeName","src":"970:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"hexValue":"74727565","id":6808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1004:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"visibility":"public"},{"constant":false,"functionSelector":"543a9eb9","id":6813,"mutability":"mutable","name":"approvedMarketplaces","nameLocation":"1046:20:21","nodeType":"VariableDeclaration","scope":7769,"src":"1014:52:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":6812,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6810,"name":"address","nodeType":"ElementaryTypeName","src":"1022:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1014:24:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6811,"name":"bool","nodeType":"ElementaryTypeName","src":"1033:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"canonicalName":"YachtClubMembership.MemberTier","id":6818,"members":[{"id":6814,"name":"Standard","nameLocation":"1115:8:21","nodeType":"EnumValue","src":"1115:8:21"},{"id":6815,"name":"Premium","nameLocation":"1125:7:21","nodeType":"EnumValue","src":"1125:7:21"},{"id":6816,"name":"Elite","nameLocation":"1134:5:21","nodeType":"EnumValue","src":"1134:5:21"},{"id":6817,"name":"Lifetime","nameLocation":"1141:8:21","nodeType":"EnumValue","src":"1141:8:21"}],"name":"MemberTier","nameLocation":"1102:10:21","nodeType":"EnumDefinition","src":"1097:54:21"},{"canonicalName":"YachtClubMembership.NFCCard","id":6829,"members":[{"constant":false,"id":6820,"mutability":"mutable","name":"cardId","nameLocation":"1224:6:21","nodeType":"VariableDeclaration","scope":6829,"src":"1217:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6819,"name":"string","nodeType":"ElementaryTypeName","src":"1217:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6822,"mutability":"mutable","name":"serialNumber","nameLocation":"1287:12:21","nodeType":"VariableDeclaration","scope":6829,"src":"1280:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6821,"name":"string","nodeType":"ElementaryTypeName","src":"1280:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6824,"mutability":"mutable","name":"linkedAt","nameLocation":"1352:8:21","nodeType":"VariableDeclaration","scope":6829,"src":"1344:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6823,"name":"uint256","nodeType":"ElementaryTypeName","src":"1344:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6826,"mutability":"mutable","name":"isActive","nameLocation":"1416:8:21","nodeType":"VariableDeclaration","scope":6829,"src":"1411:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6825,"name":"bool","nodeType":"ElementaryTypeName","src":"1411:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6828,"mutability":"mutable","name":"cardType","nameLocation":"1481:8:21","nodeType":"VariableDeclaration","scope":6829,"src":"1474:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6827,"name":"string","nodeType":"ElementaryTypeName","src":"1474:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"NFCCard","nameLocation":"1199:7:21","nodeType":"StructDefinition","scope":7769,"src":"1192:362:21","visibility":"public"},{"canonicalName":"YachtClubMembership.MemberInfo","id":6844,"members":[{"constant":false,"id":6832,"mutability":"mutable","name":"tier","nameLocation":"1622:4:21","nodeType":"VariableDeclaration","scope":6844,"src":"1611:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"},"typeName":{"id":6831,"nodeType":"UserDefinedTypeName","pathNode":{"id":6830,"name":"MemberTier","nameLocations":["1611:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":6818,"src":"1611:10:21"},"referencedDeclaration":6818,"src":"1611:10:21","typeDescriptions":{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"}},"visibility":"internal"},{"constant":false,"id":6834,"mutability":"mutable","name":"mintedAt","nameLocation":"1644:8:21","nodeType":"VariableDeclaration","scope":6844,"src":"1636:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6833,"name":"uint256","nodeType":"ElementaryTypeName","src":"1636:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6836,"mutability":"mutable","name":"email","nameLocation":"1669:5:21","nodeType":"VariableDeclaration","scope":6844,"src":"1662:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6835,"name":"string","nodeType":"ElementaryTypeName","src":"1662:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6838,"mutability":"mutable","name":"active","nameLocation":"1712:6:21","nodeType":"VariableDeclaration","scope":6844,"src":"1707:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6837,"name":"bool","nodeType":"ElementaryTypeName","src":"1707:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6841,"mutability":"mutable","name":"nfcCard","nameLocation":"1736:7:21","nodeType":"VariableDeclaration","scope":6844,"src":"1728:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_NFCCard_$6829_storage_ptr","typeString":"struct YachtClubMembership.NFCCard"},"typeName":{"id":6840,"nodeType":"UserDefinedTypeName","pathNode":{"id":6839,"name":"NFCCard","nameLocations":["1728:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":6829,"src":"1728:7:21"},"referencedDeclaration":6829,"src":"1728:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_NFCCard_$6829_storage_ptr","typeString":"struct YachtClubMembership.NFCCard"}},"visibility":"internal"},{"constant":false,"id":6843,"mutability":"mutable","name":"hasNFCCard","nameLocation":"1789:10:21","nodeType":"VariableDeclaration","scope":6844,"src":"1784:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6842,"name":"bool","nodeType":"ElementaryTypeName","src":"1784:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"MemberInfo","nameLocation":"1590:10:21","nodeType":"StructDefinition","scope":7769,"src":"1583:271:21","visibility":"public"},{"constant":false,"functionSelector":"d90d0ee6","id":6849,"mutability":"mutable","name":"memberInfo","nameLocation":"1902:10:21","nodeType":"VariableDeclaration","scope":7769,"src":"1864:48:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MemberInfo_$6844_storage_$","typeString":"mapping(uint256 => struct YachtClubMembership.MemberInfo)"},"typeName":{"id":6848,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6845,"name":"uint256","nodeType":"ElementaryTypeName","src":"1872:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1864:30:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MemberInfo_$6844_storage_$","typeString":"mapping(uint256 => struct YachtClubMembership.MemberInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6847,"nodeType":"UserDefinedTypeName","pathNode":{"id":6846,"name":"MemberInfo","nameLocations":["1883:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":6844,"src":"1883:10:21"},"referencedDeclaration":6844,"src":"1883:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_storage_ptr","typeString":"struct YachtClubMembership.MemberInfo"}}},"visibility":"public"},{"constant":false,"functionSelector":"da104da2","id":6853,"mutability":"mutable","name":"memberTokenId","nameLocation":"1953:13:21","nodeType":"VariableDeclaration","scope":7769,"src":"1918:48:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":6852,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6850,"name":"address","nodeType":"ElementaryTypeName","src":"1926:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1918:27:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6851,"name":"uint256","nodeType":"ElementaryTypeName","src":"1937:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"14d4aecc","id":6857,"mutability":"mutable","name":"nfcCardToToken","nameLocation":"2061:14:21","nodeType":"VariableDeclaration","scope":7769,"src":"2027:48:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string => uint256)"},"typeName":{"id":6856,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6854,"name":"string","nodeType":"ElementaryTypeName","src":"2035:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"2027:26:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6855,"name":"uint256","nodeType":"ElementaryTypeName","src":"2045:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"ff8ca494","id":6861,"mutability":"mutable","name":"nfcCardExists","nameLocation":"2133:13:21","nodeType":"VariableDeclaration","scope":7769,"src":"2102:44:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"typeName":{"id":6860,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6858,"name":"string","nodeType":"ElementaryTypeName","src":"2110:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"2102:23:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6859,"name":"bool","nodeType":"ElementaryTypeName","src":"2120:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"520483995c63af27f2b1c21cb5c2d5138f865c88a39aeba56a8756453df44acb","id":6872,"name":"MembershipMinted","nameLocation":"2201:16:21","nodeType":"EventDefinition","parameters":{"id":6871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6863,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2234:7:21","nodeType":"VariableDeclaration","scope":6872,"src":"2218:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6862,"name":"uint256","nodeType":"ElementaryTypeName","src":"2218:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6865,"indexed":true,"mutability":"mutable","name":"member","nameLocation":"2259:6:21","nodeType":"VariableDeclaration","scope":6872,"src":"2243:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6864,"name":"address","nodeType":"ElementaryTypeName","src":"2243:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6868,"indexed":false,"mutability":"mutable","name":"tier","nameLocation":"2278:4:21","nodeType":"VariableDeclaration","scope":6872,"src":"2267:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"},"typeName":{"id":6867,"nodeType":"UserDefinedTypeName","pathNode":{"id":6866,"name":"MemberTier","nameLocations":["2267:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":6818,"src":"2267:10:21"},"referencedDeclaration":6818,"src":"2267:10:21","typeDescriptions":{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"}},"visibility":"internal"},{"constant":false,"id":6870,"indexed":false,"mutability":"mutable","name":"email","nameLocation":"2291:5:21","nodeType":"VariableDeclaration","scope":6872,"src":"2284:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6869,"name":"string","nodeType":"ElementaryTypeName","src":"2284:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2217:80:21"},"src":"2195:103:21"},{"anonymous":false,"eventSelector":"236430f4b571218941e190e042fd33bb0183ee65bab331e1490515c0de630fae","id":6882,"name":"MemberTierUpdated","nameLocation":"2309:17:21","nodeType":"EventDefinition","parameters":{"id":6881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6874,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2343:7:21","nodeType":"VariableDeclaration","scope":6882,"src":"2327:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6873,"name":"uint256","nodeType":"ElementaryTypeName","src":"2327:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6877,"indexed":false,"mutability":"mutable","name":"oldTier","nameLocation":"2363:7:21","nodeType":"VariableDeclaration","scope":6882,"src":"2352:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"},"typeName":{"id":6876,"nodeType":"UserDefinedTypeName","pathNode":{"id":6875,"name":"MemberTier","nameLocations":["2352:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":6818,"src":"2352:10:21"},"referencedDeclaration":6818,"src":"2352:10:21","typeDescriptions":{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"}},"visibility":"internal"},{"constant":false,"id":6880,"indexed":false,"mutability":"mutable","name":"newTier","nameLocation":"2383:7:21","nodeType":"VariableDeclaration","scope":6882,"src":"2372:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"},"typeName":{"id":6879,"nodeType":"UserDefinedTypeName","pathNode":{"id":6878,"name":"MemberTier","nameLocations":["2372:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":6818,"src":"2372:10:21"},"referencedDeclaration":6818,"src":"2372:10:21","typeDescriptions":{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"}},"visibility":"internal"}],"src":"2326:65:21"},"src":"2303:89:21"},{"anonymous":false,"eventSelector":"ad6d9c64a14d0fe26fe397f694c96f78a370d5e77d522989dfd8e876fed0dff7","id":6890,"name":"NFCCardLinked","nameLocation":"2403:13:21","nodeType":"EventDefinition","parameters":{"id":6889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6884,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2433:7:21","nodeType":"VariableDeclaration","scope":6890,"src":"2417:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6883,"name":"uint256","nodeType":"ElementaryTypeName","src":"2417:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6886,"indexed":false,"mutability":"mutable","name":"cardId","nameLocation":"2449:6:21","nodeType":"VariableDeclaration","scope":6890,"src":"2442:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6885,"name":"string","nodeType":"ElementaryTypeName","src":"2442:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6888,"indexed":false,"mutability":"mutable","name":"serialNumber","nameLocation":"2464:12:21","nodeType":"VariableDeclaration","scope":6890,"src":"2457:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6887,"name":"string","nodeType":"ElementaryTypeName","src":"2457:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2416:61:21"},"src":"2397:81:21"},{"anonymous":false,"eventSelector":"879f2ab7f172ee2f8d536629f4f9156d7d4bb907995cd81e3d4ce0dbab8cd861","id":6896,"name":"NFCCardUnlinked","nameLocation":"2489:15:21","nodeType":"EventDefinition","parameters":{"id":6895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6892,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2521:7:21","nodeType":"VariableDeclaration","scope":6896,"src":"2505:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6891,"name":"uint256","nodeType":"ElementaryTypeName","src":"2505:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6894,"indexed":false,"mutability":"mutable","name":"cardId","nameLocation":"2537:6:21","nodeType":"VariableDeclaration","scope":6896,"src":"2530:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6893,"name":"string","nodeType":"ElementaryTypeName","src":"2530:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2504:40:21"},"src":"2483:62:21"},{"anonymous":false,"eventSelector":"012cdb3b117ab46b8ab2f8e7f38e6b3d8a51b3b3fd3188dd781ba38df5b2309e","id":6902,"name":"NFCCardDeactivated","nameLocation":"2556:18:21","nodeType":"EventDefinition","parameters":{"id":6901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6898,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2591:7:21","nodeType":"VariableDeclaration","scope":6902,"src":"2575:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6897,"name":"uint256","nodeType":"ElementaryTypeName","src":"2575:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6900,"indexed":false,"mutability":"mutable","name":"cardId","nameLocation":"2607:6:21","nodeType":"VariableDeclaration","scope":6902,"src":"2600:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6899,"name":"string","nodeType":"ElementaryTypeName","src":"2600:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2574:40:21"},"src":"2550:65:21"},{"anonymous":false,"eventSelector":"2da74f794b62c41386dee79743b63d866355e0e0ae2a8d97aacb2ff5b7e1549b","id":6906,"name":"TransferRestrictionUpdated","nameLocation":"2626:26:21","nodeType":"EventDefinition","parameters":{"id":6905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6904,"indexed":false,"mutability":"mutable","name":"restricted","nameLocation":"2658:10:21","nodeType":"VariableDeclaration","scope":6906,"src":"2653:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6903,"name":"bool","nodeType":"ElementaryTypeName","src":"2653:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2652:17:21"},"src":"2620:50:21"},{"anonymous":false,"eventSelector":"ccd3ed4a44faf3e09991dbb052548b2f73fdd2a8da198e2412a4dff80dacdd5b","id":6912,"name":"MarketplaceApprovalUpdated","nameLocation":"2681:26:21","nodeType":"EventDefinition","parameters":{"id":6911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6908,"indexed":true,"mutability":"mutable","name":"marketplace","nameLocation":"2724:11:21","nodeType":"VariableDeclaration","scope":6912,"src":"2708:27:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6907,"name":"address","nodeType":"ElementaryTypeName","src":"2708:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6910,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"2742:8:21","nodeType":"VariableDeclaration","scope":6912,"src":"2737:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6909,"name":"bool","nodeType":"ElementaryTypeName","src":"2737:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2707:44:21"},"src":"2675:77:21"},{"anonymous":false,"eventSelector":"808ec13129987deb49ec337ab895a2cf7af16a4d0d55a51ddc054e2c7fb2515b","id":6918,"name":"AuthorizedMinterUpdated","nameLocation":"2763:23:21","nodeType":"EventDefinition","parameters":{"id":6917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6914,"indexed":true,"mutability":"mutable","name":"oldMinter","nameLocation":"2803:9:21","nodeType":"VariableDeclaration","scope":6918,"src":"2787:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6913,"name":"address","nodeType":"ElementaryTypeName","src":"2787:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6916,"indexed":true,"mutability":"mutable","name":"newMinter","nameLocation":"2830:9:21","nodeType":"VariableDeclaration","scope":6918,"src":"2814:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6915,"name":"address","nodeType":"ElementaryTypeName","src":"2814:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2786:54:21"},"src":"2757:84:21"},{"body":{"id":6935,"nodeType":"Block","src":"2883:118:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6921,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2901:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2905:6:21","memberName":"sender","nodeType":"MemberAccess","src":"2901:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6923,"name":"authorizedMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"2915:16:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2901:30:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6925,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2935:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2939:6:21","memberName":"sender","nodeType":"MemberAccess","src":"2935:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6927,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2949:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2949:7:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2935:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2901:55:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a656420746f206d696e74","id":6931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2958:24:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b","typeString":"literal_string \"Not authorized to mint\""},"value":"Not authorized to mint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b","typeString":"literal_string \"Not authorized to mint\""}],"id":6920,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2893:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2893:90:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6933,"nodeType":"ExpressionStatement","src":"2893:90:21"},{"id":6934,"nodeType":"PlaceholderStatement","src":"2993:1:21"}]},"id":6936,"name":"onlyAuthorizedMinter","nameLocation":"2860:20:21","nodeType":"ModifierDefinition","parameters":{"id":6919,"nodeType":"ParameterList","parameters":[],"src":"2880:2:21"},"src":"2851:150:21","virtual":false,"visibility":"internal"},{"body":{"id":6968,"nodeType":"Block","src":"3207:235:21","statements":[{"expression":{"id":6955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6953,"name":"authorizedMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"3217:16:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6954,"name":"authorizedMinter_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"3236:17:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3217:36:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6956,"nodeType":"ExpressionStatement","src":"3217:36:21"},{"expression":{"id":6959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6957,"name":"_royaltyRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6802,"src":"3263:17:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6958,"name":"royaltyRecipient_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"3283:17:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3263:37:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6960,"nodeType":"ExpressionStatement","src":"3263:37:21"},{"expression":{"id":6963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6961,"name":"_royaltyFraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6804,"src":"3310:16:21","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6962,"name":"royaltyFraction_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6942,"src":"3329:16:21","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"3310:35:21","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":6964,"nodeType":"ExpressionStatement","src":"3310:35:21"},{"expression":{"id":6966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3418:17:21","subExpression":{"id":6965,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"3418:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6967,"nodeType":"ExpressionStatement","src":"3418:17:21"}]},"id":6969,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4c616b652053746f636b746f6e20596163687420436c7562204d656d62657273686970","id":6945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3139:37:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_21eb7f75f4d2162f91ecf794e34a30e75dfcf698e6233b12aa85458f3b2131d6","typeString":"literal_string \"Lake Stockton Yacht Club Membership\""},"value":"Lake Stockton Yacht Club Membership"},{"hexValue":"4c5359434d","id":6946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3178:7:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_256e5e8184652406ff1b18cd54c0da66c4ddb91543729604f0ef08b81ec40bce","typeString":"literal_string \"LSYCM\""},"value":"LSYCM"}],"id":6947,"kind":"baseConstructorSpecifier","modifierName":{"id":6944,"name":"ERC721","nameLocations":["3132:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":1293,"src":"3132:6:21"},"nodeType":"ModifierInvocation","src":"3132:54:21"},{"arguments":[{"expression":{"id":6949,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3195:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3199:6:21","memberName":"sender","nodeType":"MemberAccess","src":"3195:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6951,"kind":"baseConstructorSpecifier","modifierName":{"id":6948,"name":"Ownable","nameLocations":["3187:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"3187:7:21"},"nodeType":"ModifierInvocation","src":"3187:19:21"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6938,"mutability":"mutable","name":"authorizedMinter_","nameLocation":"3040:17:21","nodeType":"VariableDeclaration","scope":6969,"src":"3032:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6937,"name":"address","nodeType":"ElementaryTypeName","src":"3032:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6940,"mutability":"mutable","name":"royaltyRecipient_","nameLocation":"3075:17:21","nodeType":"VariableDeclaration","scope":6969,"src":"3067:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6939,"name":"address","nodeType":"ElementaryTypeName","src":"3067:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6942,"mutability":"mutable","name":"royaltyFraction_","nameLocation":"3109:16:21","nodeType":"VariableDeclaration","scope":6969,"src":"3102:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6941,"name":"uint96","nodeType":"ElementaryTypeName","src":"3102:6:21","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"3022:109:21"},"returnParameters":{"id":6952,"nodeType":"ParameterList","parameters":[],"src":"3207:0:21"},"scope":7769,"src":"3011:431:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7070,"nodeType":"Block","src":"3863:935:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6989,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6972,"src":"3881:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3895:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3887:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6990,"name":"address","nodeType":"ElementaryTypeName","src":"3887:7:21","typeDescriptions":{}}},"id":6993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3887:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3881:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74206d696e7420746f207a65726f2061646472657373","id":6995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3899:29:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9","typeString":"literal_string \"Cannot mint to zero address\""},"value":"Cannot mint to zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9","typeString":"literal_string \"Cannot mint to zero address\""}],"id":6988,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3873:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3873:56:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6997,"nodeType":"ExpressionStatement","src":"3873:56:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6999,"name":"memberTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6853,"src":"3947:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7001,"indexExpression":{"id":7000,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6972,"src":"3961:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3947:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3968:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3947:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d656d62657220616c726561647920686173206120746f6b656e","id":7004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3971:28:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_bbd75e48baed3f30fbfc2970a751ea32d0284d9d338895802bf1a6041c2e8aa0","typeString":"literal_string \"Member already has a token\""},"value":"Member already has a token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bbd75e48baed3f30fbfc2970a751ea32d0284d9d338895802bf1a6041c2e8aa0","typeString":"literal_string \"Member already has a token\""}],"id":6998,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3939:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3939:61:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7006,"nodeType":"ExpressionStatement","src":"3939:61:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7010,"name":"tokenURI_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"4024:9:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4018:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7008,"name":"bytes","nodeType":"ElementaryTypeName","src":"4018:5:21","typeDescriptions":{}}},"id":7011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4018:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4035:6:21","memberName":"length","nodeType":"MemberAccess","src":"4018:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4044:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4018:27:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e205552492063616e6e6f7420626520656d707479","id":7015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4047:27:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_d633f097afe2c3b3efba3957b2369f4231e0e493227ac0996c0f90cc0a5005e9","typeString":"literal_string \"Token URI cannot be empty\""},"value":"Token URI cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d633f097afe2c3b3efba3957b2369f4231e0e493227ac0996c0f90cc0a5005e9","typeString":"literal_string \"Token URI cannot be empty\""}],"id":7007,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4010:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4010:65:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7017,"nodeType":"ExpressionStatement","src":"4010:65:21"},{"assignments":[7019],"declarations":[{"constant":false,"id":7019,"mutability":"mutable","name":"tokenId","nameLocation":"4102:7:21","nodeType":"VariableDeclaration","scope":7070,"src":"4094:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7018,"name":"uint256","nodeType":"ElementaryTypeName","src":"4094:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7021,"initialValue":{"id":7020,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"4112:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4094:33:21"},{"expression":{"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4137:17:21","subExpression":{"id":7022,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"4137:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7024,"nodeType":"ExpressionStatement","src":"4137:17:21"},{"expression":{"arguments":[{"id":7026,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6972,"src":"4183:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7027,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"4187:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7025,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[971,1001],"referencedDeclaration":971,"src":"4173:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4173:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7029,"nodeType":"ExpressionStatement","src":"4173:22:21"},{"expression":{"arguments":[{"id":7031,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"4218:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7032,"name":"tokenURI_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"4227:9:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7030,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"4205:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":7033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4205:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7034,"nodeType":"ExpressionStatement","src":"4205:32:21"},{"expression":{"id":7053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7035,"name":"memberInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"4256:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MemberInfo_$6844_storage_$","typeString":"mapping(uint256 => struct YachtClubMembership.MemberInfo storage ref)"}},"id":7037,"indexExpression":{"id":7036,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"4267:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4256:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_storage","typeString":"struct YachtClubMembership.MemberInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7039,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6975,"src":"4309:4:21","typeDescriptions":{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"}},{"expression":{"id":7040,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4337:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4343:9:21","memberName":"timestamp","nodeType":"MemberAccess","src":"4337:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7042,"name":"email","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"4373:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"74727565","id":7043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4400:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"arguments":[{"hexValue":"","id":7045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4461:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"","id":7046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4495:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"30","id":7047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4525:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"66616c7365","id":7048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4554:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"","id":7049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4587:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":7044,"name":"NFCCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"4427:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_NFCCard_$6829_storage_ptr_$","typeString":"type(struct YachtClubMembership.NFCCard storage pointer)"}},"id":7050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4453:6:21","4481:12:21","4515:8:21","4544:8:21","4577:8:21"],"names":["cardId","serialNumber","linkedAt","isActive","cardType"],"nodeType":"FunctionCall","src":"4427:177:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_NFCCard_$6829_memory_ptr","typeString":"struct YachtClubMembership.NFCCard memory"}},{"hexValue":"66616c7365","id":7051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_struct$_NFCCard_$6829_memory_ptr","typeString":"struct YachtClubMembership.NFCCard memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7038,"name":"MemberInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6844,"src":"4278:10:21","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_MemberInfo_$6844_storage_ptr_$","typeString":"type(struct YachtClubMembership.MemberInfo storage pointer)"}},"id":7052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4303:4:21","4327:8:21","4366:5:21","4392:6:21","4418:7:21","4618:10:21"],"names":["tier","mintedAt","email","active","nfcCard","hasNFCCard"],"nodeType":"FunctionCall","src":"4278:368:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_memory_ptr","typeString":"struct YachtClubMembership.MemberInfo memory"}},"src":"4256:390:21","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_storage","typeString":"struct YachtClubMembership.MemberInfo storage ref"}},"id":7054,"nodeType":"ExpressionStatement","src":"4256:390:21"},{"expression":{"id":7059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7055,"name":"memberTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6853,"src":"4665:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7057,"indexExpression":{"id":7056,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6972,"src":"4679:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4665:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7058,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"4685:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4665:27:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7060,"nodeType":"ExpressionStatement","src":"4665:27:21"},{"eventCall":{"arguments":[{"id":7062,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"4733:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7063,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6972,"src":"4742:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7064,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6975,"src":"4746:4:21","typeDescriptions":{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"}},{"id":7065,"name":"email","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"4752:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7061,"name":"MembershipMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6872,"src":"4716:16:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_enum$_MemberTier_$6818_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,enum YachtClubMembership.MemberTier,string memory)"}},"id":7066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4716:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7067,"nodeType":"EmitStatement","src":"4711:47:21"},{"expression":{"id":7068,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"4784:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6987,"id":7069,"nodeType":"Return","src":"4777:14:21"}]},"documentation":{"id":6970,"nodeType":"StructuredDocumentation","src":"3452:208:21","text":" @dev Mint membership NFT to a member\n @param to Member address\n @param tier Member tier\n @param email Member email for admin reference\n @param tokenURI_ Metadata URI"},"functionSelector":"a1b1eede","id":7071,"implemented":true,"kind":"function","modifiers":[{"id":6982,"kind":"modifierInvocation","modifierName":{"id":6981,"name":"onlyAuthorizedMinter","nameLocations":["3811:20:21"],"nodeType":"IdentifierPath","referencedDeclaration":6936,"src":"3811:20:21"},"nodeType":"ModifierInvocation","src":"3811:20:21"},{"id":6984,"kind":"modifierInvocation","modifierName":{"id":6983,"name":"nonReentrant","nameLocations":["3832:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":1776,"src":"3832:12:21"},"nodeType":"ModifierInvocation","src":"3832:12:21"}],"name":"mintMembership","nameLocation":"3674:14:21","nodeType":"FunctionDefinition","parameters":{"id":6980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6972,"mutability":"mutable","name":"to","nameLocation":"3706:2:21","nodeType":"VariableDeclaration","scope":7071,"src":"3698:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6971,"name":"address","nodeType":"ElementaryTypeName","src":"3698:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6975,"mutability":"mutable","name":"tier","nameLocation":"3729:4:21","nodeType":"VariableDeclaration","scope":7071,"src":"3718:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"},"typeName":{"id":6974,"nodeType":"UserDefinedTypeName","pathNode":{"id":6973,"name":"MemberTier","nameLocations":["3718:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":6818,"src":"3718:10:21"},"referencedDeclaration":6818,"src":"3718:10:21","typeDescriptions":{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"}},"visibility":"internal"},{"constant":false,"id":6977,"mutability":"mutable","name":"email","nameLocation":"3757:5:21","nodeType":"VariableDeclaration","scope":7071,"src":"3743:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6976,"name":"string","nodeType":"ElementaryTypeName","src":"3743:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6979,"mutability":"mutable","name":"tokenURI_","nameLocation":"3786:9:21","nodeType":"VariableDeclaration","scope":7071,"src":"3772:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6978,"name":"string","nodeType":"ElementaryTypeName","src":"3772:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3688:113:21"},"returnParameters":{"id":6987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7071,"src":"3854:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6985,"name":"uint256","nodeType":"ElementaryTypeName","src":"3854:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3853:9:21"},"scope":7769,"src":"3665:1133:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7164,"nodeType":"Block","src":"5248:803:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7087,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7074,"src":"5275:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7086,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"5266:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5266:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5295:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5287:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7089,"name":"address","nodeType":"ElementaryTypeName","src":"5287:7:21","typeDescriptions":{}}},"id":7092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5287:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5266:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":7094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5299:22:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":7085,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5258:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5258:64:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7096,"nodeType":"ExpressionStatement","src":"5258:64:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7100,"name":"cardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"5346:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5340:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7098,"name":"bytes","nodeType":"ElementaryTypeName","src":"5340:5:21","typeDescriptions":{}}},"id":7101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5340:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5354:6:21","memberName":"length","nodeType":"MemberAccess","src":"5340:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5363:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5340:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436172642049442063616e6e6f7420626520656d707479","id":7105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5366:25:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c7bafc2e0f4372a5b344c2a3be3502b5e1e0ddc1f4f4ceb9f51bd7ff71b29a1f","typeString":"literal_string \"Card ID cannot be empty\""},"value":"Card ID cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c7bafc2e0f4372a5b344c2a3be3502b5e1e0ddc1f4f4ceb9f51bd7ff71b29a1f","typeString":"literal_string \"Card ID cannot be empty\""}],"id":7097,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5332:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5332:60:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7107,"nodeType":"ExpressionStatement","src":"5332:60:21"},{"expression":{"arguments":[{"id":7112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5410:22:21","subExpression":{"baseExpression":{"id":7109,"name":"nfcCardExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6861,"src":"5411:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":7111,"indexExpression":{"id":7110,"name":"cardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"5425:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5411:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e4643206361726420616c726561647920657869737473","id":7113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5434:25:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_3028800c1dbdd60b51d79f5eeb02acf0deac096bf4f2573b511ed379bc891d8c","typeString":"literal_string \"NFC card already exists\""},"value":"NFC card already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3028800c1dbdd60b51d79f5eeb02acf0deac096bf4f2573b511ed379bc891d8c","typeString":"literal_string \"NFC card already exists\""}],"id":7108,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5402:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5402:58:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7115,"nodeType":"ExpressionStatement","src":"5402:58:21"},{"expression":{"arguments":[{"id":7121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5478:31:21","subExpression":{"expression":{"baseExpression":{"id":7117,"name":"memberInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"5479:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MemberInfo_$6844_storage_$","typeString":"mapping(uint256 => struct YachtClubMembership.MemberInfo storage ref)"}},"id":7119,"indexExpression":{"id":7118,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7074,"src":"5490:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5479:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_storage","typeString":"struct YachtClubMembership.MemberInfo storage ref"}},"id":7120,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5499:10:21","memberName":"hasNFCCard","nodeType":"MemberAccess","referencedDeclaration":6843,"src":"5479:30:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d656d62657220616c72656164792068617320616e204e46432063617264","id":7122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5511:32:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_1d6dc8c911703b86f29b06d0db96f40df5f282ec62d37ba092827035c01178fe","typeString":"literal_string \"Member already has an NFC card\""},"value":"Member already has an NFC card"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1d6dc8c911703b86f29b06d0db96f40df5f282ec62d37ba092827035c01178fe","typeString":"literal_string \"Member already has an NFC card\""}],"id":7116,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5470:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:74:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7124,"nodeType":"ExpressionStatement","src":"5470:74:21"},{"expression":{"id":7137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7125,"name":"memberInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"5588:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MemberInfo_$6844_storage_$","typeString":"mapping(uint256 => struct YachtClubMembership.MemberInfo storage ref)"}},"id":7127,"indexExpression":{"id":7126,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7074,"src":"5599:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5588:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_storage","typeString":"struct YachtClubMembership.MemberInfo storage ref"}},"id":7128,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5608:7:21","memberName":"nfcCard","nodeType":"MemberAccess","referencedDeclaration":6841,"src":"5588:27:21","typeDescriptions":{"typeIdentifier":"t_struct$_NFCCard_$6829_storage","typeString":"struct YachtClubMembership.NFCCard storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7130,"name":"cardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"5648:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7131,"name":"serialNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"5682:12:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":7132,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5718:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5724:9:21","memberName":"timestamp","nodeType":"MemberAccess","src":"5718:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":7134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5757:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":7135,"name":"cardType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7080,"src":"5785:8:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7129,"name":"NFCCard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"5618:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_NFCCard_$6829_storage_ptr_$","typeString":"type(struct YachtClubMembership.NFCCard storage pointer)"}},"id":7136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5640:6:21","5668:12:21","5708:8:21","5747:8:21","5775:8:21"],"names":["cardId","serialNumber","linkedAt","isActive","cardType"],"nodeType":"FunctionCall","src":"5618:186:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_NFCCard_$6829_memory_ptr","typeString":"struct YachtClubMembership.NFCCard memory"}},"src":"5588:216:21","typeDescriptions":{"typeIdentifier":"t_struct$_NFCCard_$6829_storage","typeString":"struct YachtClubMembership.NFCCard storage ref"}},"id":7138,"nodeType":"ExpressionStatement","src":"5588:216:21"},{"expression":{"id":7144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7139,"name":"memberInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"5814:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MemberInfo_$6844_storage_$","typeString":"mapping(uint256 => struct YachtClubMembership.MemberInfo storage ref)"}},"id":7141,"indexExpression":{"id":7140,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7074,"src":"5825:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5814:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_storage","typeString":"struct YachtClubMembership.MemberInfo storage ref"}},"id":7142,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5834:10:21","memberName":"hasNFCCard","nodeType":"MemberAccess","referencedDeclaration":6843,"src":"5814:30:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5847:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5814:37:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7145,"nodeType":"ExpressionStatement","src":"5814:37:21"},{"expression":{"id":7150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7146,"name":"nfcCardToToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"5906:14:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":7148,"indexExpression":{"id":7147,"name":"cardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"5921:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5906:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7149,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7074,"src":"5931:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5906:32:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7151,"nodeType":"ExpressionStatement","src":"5906:32:21"},{"expression":{"id":7156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7152,"name":"nfcCardExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6861,"src":"5948:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":7154,"indexExpression":{"id":7153,"name":"cardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"5962:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5948:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5972:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5948:28:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7157,"nodeType":"ExpressionStatement","src":"5948:28:21"},{"eventCall":{"arguments":[{"id":7159,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7074,"src":"6014:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7160,"name":"cardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"6023:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7161,"name":"serialNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"6031:12:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7158,"name":"NFCCardLinked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6890,"src":"6000:13:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory,string memory)"}},"id":7162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6000:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7163,"nodeType":"EmitStatement","src":"5995:49:21"}]},"documentation":{"id":7072,"nodeType":"StructuredDocumentation","src":"4808:266:21","text":" @dev Link NFC card to membership NFT (admin only)\n @param tokenId The token ID to link the card to\n @param cardId Unique NFC card identifier\n @param serialNumber Physical card serial number\n @param cardType Type of NFC card"},"functionSelector":"bd26ed33","id":7165,"implemented":true,"kind":"function","modifiers":[{"id":7083,"kind":"modifierInvocation","modifierName":{"id":7082,"name":"onlyOwner","nameLocations":["5238:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5238:9:21"},"nodeType":"ModifierInvocation","src":"5238:9:21"}],"name":"linkNFCCard","nameLocation":"5088:11:21","nodeType":"FunctionDefinition","parameters":{"id":7081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7074,"mutability":"mutable","name":"tokenId","nameLocation":"5117:7:21","nodeType":"VariableDeclaration","scope":7165,"src":"5109:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7073,"name":"uint256","nodeType":"ElementaryTypeName","src":"5109:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7076,"mutability":"mutable","name":"cardId","nameLocation":"5148:6:21","nodeType":"VariableDeclaration","scope":7165,"src":"5134:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7075,"name":"string","nodeType":"ElementaryTypeName","src":"5134:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7078,"mutability":"mutable","name":"serialNumber","nameLocation":"5178:12:21","nodeType":"VariableDeclaration","scope":7165,"src":"5164:26:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7077,"name":"string","nodeType":"ElementaryTypeName","src":"5164:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7080,"mutability":"mutable","name":"cardType","nameLocation":"5214:8:21","nodeType":"VariableDeclaration","scope":7165,"src":"5200:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7079,"name":"string","nodeType":"ElementaryTypeName","src":"5200:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5099:129:21"},"returnParameters":{"id":7084,"nodeType":"ParameterList","parameters":[],"src":"5248:0:21"},"scope":7769,"src":"5079:972:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7229,"nodeType":"Block","src":"6256:553:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7175,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7168,"src":"6283:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7174,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"6274:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6274:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6303:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6295:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7177,"name":"address","nodeType":"ElementaryTypeName","src":"6295:7:21","typeDescriptions":{}}},"id":7180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6295:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6274:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":7182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6307:22:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":7173,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6266:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6266:64:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7184,"nodeType":"ExpressionStatement","src":"6266:64:21"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":7186,"name":"memberInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"6348:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MemberInfo_$6844_storage_$","typeString":"mapping(uint256 => struct YachtClubMembership.MemberInfo storage ref)"}},"id":7188,"indexExpression":{"id":7187,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7168,"src":"6359:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6348:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_storage","typeString":"struct YachtClubMembership.MemberInfo storage ref"}},"id":7189,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6368:10:21","memberName":"hasNFCCard","nodeType":"MemberAccess","referencedDeclaration":6843,"src":"6348:30:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d656d62657220646f6573206e6f74206861766520616e204e46432063617264","id":7190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6380:34:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_b29e0aab9e757fa31789ac85fd81ae5bd5d8890412c3f590b9908480e647e628","typeString":"literal_string \"Member does not have an NFC card\""},"value":"Member does not have an NFC card"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b29e0aab9e757fa31789ac85fd81ae5bd5d8890412c3f590b9908480e647e628","typeString":"literal_string \"Member does not have an NFC card\""}],"id":7185,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6340:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6340:75:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7192,"nodeType":"ExpressionStatement","src":"6340:75:21"},{"assignments":[7194],"declarations":[{"constant":false,"id":7194,"mutability":"mutable","name":"cardId","nameLocation":"6448:6:21","nodeType":"VariableDeclaration","scope":7229,"src":"6434:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7193,"name":"string","nodeType":"ElementaryTypeName","src":"6434:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":7200,"initialValue":{"expression":{"expression":{"baseExpression":{"id":7195,"name":"memberInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"6457:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MemberInfo_$6844_storage_$","typeString":"mapping(uint256 => struct YachtClubMembership.MemberInfo storage ref)"}},"id":7197,"indexExpression":{"id":7196,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7168,"src":"6468:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6457:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_storage","typeString":"struct YachtClubMembership.MemberInfo storage ref"}},"id":7198,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6477:7:21","memberName":"nfcCard","nodeType":"MemberAccess","referencedDeclaration":6841,"src":"6457:27:21","typeDescriptions":{"typeIdentifier":"t_struct$_NFCCard_$6829_storage","typeString":"struct YachtClubMembership.NFCCard storage ref"}},"id":7199,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6485:6:21","memberName":"cardId","nodeType":"MemberAccess","referencedDeclaration":6820,"src":"6457:34:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6434:57:21"},{"expression":{"id":7205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6542:34:21","subExpression":{"expression":{"baseExpression":{"id":7201,"name":"memberInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"6549:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MemberInfo_$6844_storage_$","typeString":"mapping(uint256 => struct YachtClubMembership.MemberInfo storage ref)"}},"id":7203,"indexExpression":{"id":7202,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7168,"src":"6560:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6549:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_storage","typeString":"struct YachtClubMembership.MemberInfo storage ref"}},"id":7204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6569:7:21","memberName":"nfcCard","nodeType":"MemberAccess","referencedDeclaration":6841,"src":"6549:27:21","typeDescriptions":{"typeIdentifier":"t_struct$_NFCCard_$6829_storage","typeString":"struct YachtClubMembership.NFCCard storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7206,"nodeType":"ExpressionStatement","src":"6542:34:21"},{"expression":{"id":7212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7207,"name":"memberInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"6586:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MemberInfo_$6844_storage_$","typeString":"mapping(uint256 => struct YachtClubMembership.MemberInfo storage ref)"}},"id":7209,"indexExpression":{"id":7208,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7168,"src":"6597:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6586:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_storage","typeString":"struct YachtClubMembership.MemberInfo storage ref"}},"id":7210,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6606:10:21","memberName":"hasNFCCard","nodeType":"MemberAccess","referencedDeclaration":6843,"src":"6586:30:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":7211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6619:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6586:38:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7213,"nodeType":"ExpressionStatement","src":"6586:38:21"},{"expression":{"id":7217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6679:29:21","subExpression":{"baseExpression":{"id":7214,"name":"nfcCardToToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"6686:14:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":7216,"indexExpression":{"id":7215,"name":"cardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7194,"src":"6701:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6686:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7218,"nodeType":"ExpressionStatement","src":"6679:29:21"},{"expression":{"id":7222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6718:28:21","subExpression":{"baseExpression":{"id":7219,"name":"nfcCardExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6861,"src":"6725:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":7221,"indexExpression":{"id":7220,"name":"cardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7194,"src":"6739:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6725:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7223,"nodeType":"ExpressionStatement","src":"6718:28:21"},{"eventCall":{"arguments":[{"id":7225,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7168,"src":"6786:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7226,"name":"cardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7194,"src":"6795:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7224,"name":"NFCCardUnlinked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6896,"src":"6770:15:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":7227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6770:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7228,"nodeType":"EmitStatement","src":"6765:37:21"}]},"documentation":{"id":7166,"nodeType":"StructuredDocumentation","src":"6061:131:21","text":" @dev Unlink NFC card from membership NFT (admin only)\n @param tokenId The token ID to unlink the card from"},"functionSelector":"0f837c5a","id":7230,"implemented":true,"kind":"function","modifiers":[{"id":7171,"kind":"modifierInvocation","modifierName":{"id":7170,"name":"onlyOwner","nameLocations":["6246:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6246:9:21"},"nodeType":"ModifierInvocation","src":"6246:9:21"}],"name":"unlinkNFCCard","nameLocation":"6206:13:21","nodeType":"FunctionDefinition","parameters":{"id":7169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7168,"mutability":"mutable","name":"tokenId","nameLocation":"6228:7:21","nodeType":"VariableDeclaration","scope":7230,"src":"6220:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7167,"name":"uint256","nodeType":"ElementaryTypeName","src":"6220:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6219:17:21"},"returnParameters":{"id":7172,"nodeType":"ParameterList","parameters":[],"src":"6256:0:21"},"scope":7769,"src":"6197:612:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7275,"nodeType":"Block","src":"7005:316:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7240,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"7032:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7239,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"7023:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7023:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7052:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7044:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7242,"name":"address","nodeType":"ElementaryTypeName","src":"7044:7:21","typeDescriptions":{}}},"id":7245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7044:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7023:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":7247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7056:22:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":7238,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7015:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7015:64:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7249,"nodeType":"ExpressionStatement","src":"7015:64:21"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":7251,"name":"memberInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"7097:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MemberInfo_$6844_storage_$","typeString":"mapping(uint256 => struct YachtClubMembership.MemberInfo storage ref)"}},"id":7253,"indexExpression":{"id":7252,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"7108:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7097:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_storage","typeString":"struct YachtClubMembership.MemberInfo storage ref"}},"id":7254,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7117:10:21","memberName":"hasNFCCard","nodeType":"MemberAccess","referencedDeclaration":6843,"src":"7097:30:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d656d62657220646f6573206e6f74206861766520616e204e46432063617264","id":7255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7129:34:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_b29e0aab9e757fa31789ac85fd81ae5bd5d8890412c3f590b9908480e647e628","typeString":"literal_string \"Member does not have an NFC card\""},"value":"Member does not have an NFC card"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b29e0aab9e757fa31789ac85fd81ae5bd5d8890412c3f590b9908480e647e628","typeString":"literal_string \"Member does not have an NFC card\""}],"id":7250,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7089:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7089:75:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7257,"nodeType":"ExpressionStatement","src":"7089:75:21"},{"expression":{"id":7264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"baseExpression":{"id":7258,"name":"memberInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"7183:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MemberInfo_$6844_storage_$","typeString":"mapping(uint256 => struct YachtClubMembership.MemberInfo storage ref)"}},"id":7260,"indexExpression":{"id":7259,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"7194:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7183:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_storage","typeString":"struct YachtClubMembership.MemberInfo storage ref"}},"id":7261,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7203:7:21","memberName":"nfcCard","nodeType":"MemberAccess","referencedDeclaration":6841,"src":"7183:27:21","typeDescriptions":{"typeIdentifier":"t_struct$_NFCCard_$6829_storage","typeString":"struct YachtClubMembership.NFCCard storage ref"}},"id":7262,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7211:8:21","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6826,"src":"7183:36:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":7263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7222:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"7183:44:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7265,"nodeType":"ExpressionStatement","src":"7183:44:21"},{"eventCall":{"arguments":[{"id":7267,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"7270:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"baseExpression":{"id":7268,"name":"memberInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"7279:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MemberInfo_$6844_storage_$","typeString":"mapping(uint256 => struct YachtClubMembership.MemberInfo storage ref)"}},"id":7270,"indexExpression":{"id":7269,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"7290:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7279:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_storage","typeString":"struct YachtClubMembership.MemberInfo storage ref"}},"id":7271,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7299:7:21","memberName":"nfcCard","nodeType":"MemberAccess","referencedDeclaration":6841,"src":"7279:27:21","typeDescriptions":{"typeIdentifier":"t_struct$_NFCCard_$6829_storage","typeString":"struct YachtClubMembership.NFCCard storage ref"}},"id":7272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7307:6:21","memberName":"cardId","nodeType":"MemberAccess","referencedDeclaration":6820,"src":"7279:34:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":7266,"name":"NFCCardDeactivated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6902,"src":"7251:18:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":7273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7251:63:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7274,"nodeType":"EmitStatement","src":"7246:68:21"}]},"documentation":{"id":7231,"nodeType":"StructuredDocumentation","src":"6819:118:21","text":" @dev Deactivate NFC card (admin only)\n @param tokenId The token ID to deactivate the card for"},"functionSelector":"5967ff8b","id":7276,"implemented":true,"kind":"function","modifiers":[{"id":7236,"kind":"modifierInvocation","modifierName":{"id":7235,"name":"onlyOwner","nameLocations":["6995:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6995:9:21"},"nodeType":"ModifierInvocation","src":"6995:9:21"}],"name":"deactivateNFCCard","nameLocation":"6951:17:21","nodeType":"FunctionDefinition","parameters":{"id":7234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7233,"mutability":"mutable","name":"tokenId","nameLocation":"6977:7:21","nodeType":"VariableDeclaration","scope":7276,"src":"6969:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7232,"name":"uint256","nodeType":"ElementaryTypeName","src":"6969:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6968:17:21"},"returnParameters":{"id":7237,"nodeType":"ParameterList","parameters":[],"src":"7005:0:21"},"scope":7769,"src":"6942:379:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7312,"nodeType":"Block","src":"7517:228:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7286,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7279,"src":"7544:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7285,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"7535:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7564:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7556:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7288,"name":"address","nodeType":"ElementaryTypeName","src":"7556:7:21","typeDescriptions":{}}},"id":7291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7556:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7535:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":7293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7568:22:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":7284,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7527:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7527:64:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7295,"nodeType":"ExpressionStatement","src":"7527:64:21"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":7297,"name":"memberInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"7609:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MemberInfo_$6844_storage_$","typeString":"mapping(uint256 => struct YachtClubMembership.MemberInfo storage ref)"}},"id":7299,"indexExpression":{"id":7298,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7279,"src":"7620:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7609:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_storage","typeString":"struct YachtClubMembership.MemberInfo storage ref"}},"id":7300,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7629:10:21","memberName":"hasNFCCard","nodeType":"MemberAccess","referencedDeclaration":6843,"src":"7609:30:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d656d62657220646f6573206e6f74206861766520616e204e46432063617264","id":7301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7641:34:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_b29e0aab9e757fa31789ac85fd81ae5bd5d8890412c3f590b9908480e647e628","typeString":"literal_string \"Member does not have an NFC card\""},"value":"Member does not have an NFC card"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b29e0aab9e757fa31789ac85fd81ae5bd5d8890412c3f590b9908480e647e628","typeString":"literal_string \"Member does not have an NFC card\""}],"id":7296,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7601:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7601:75:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7303,"nodeType":"ExpressionStatement","src":"7601:75:21"},{"expression":{"id":7310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"baseExpression":{"id":7304,"name":"memberInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"7695:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MemberInfo_$6844_storage_$","typeString":"mapping(uint256 => struct YachtClubMembership.MemberInfo storage ref)"}},"id":7306,"indexExpression":{"id":7305,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7279,"src":"7706:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7695:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_storage","typeString":"struct YachtClubMembership.MemberInfo storage ref"}},"id":7307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7715:7:21","memberName":"nfcCard","nodeType":"MemberAccess","referencedDeclaration":6841,"src":"7695:27:21","typeDescriptions":{"typeIdentifier":"t_struct$_NFCCard_$6829_storage","typeString":"struct YachtClubMembership.NFCCard storage ref"}},"id":7308,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7723:8:21","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6826,"src":"7695:36:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7734:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7695:43:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7311,"nodeType":"ExpressionStatement","src":"7695:43:21"}]},"documentation":{"id":7277,"nodeType":"StructuredDocumentation","src":"7331:118:21","text":" @dev Reactivate NFC card (admin only)\n @param tokenId The token ID to reactivate the card for"},"functionSelector":"3363f61f","id":7313,"implemented":true,"kind":"function","modifiers":[{"id":7282,"kind":"modifierInvocation","modifierName":{"id":7281,"name":"onlyOwner","nameLocations":["7507:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"7507:9:21"},"nodeType":"ModifierInvocation","src":"7507:9:21"}],"name":"reactivateNFCCard","nameLocation":"7463:17:21","nodeType":"FunctionDefinition","parameters":{"id":7280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7279,"mutability":"mutable","name":"tokenId","nameLocation":"7489:7:21","nodeType":"VariableDeclaration","scope":7313,"src":"7481:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7278,"name":"uint256","nodeType":"ElementaryTypeName","src":"7481:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7480:17:21"},"returnParameters":{"id":7283,"nodeType":"ParameterList","parameters":[],"src":"7517:0:21"},"scope":7769,"src":"7454:291:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7356,"nodeType":"Block","src":"8162:252:21","statements":[{"expression":{"arguments":[{"baseExpression":{"id":7326,"name":"nfcCardExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6861,"src":"8180:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":7328,"indexExpression":{"id":7327,"name":"cardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"8194:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8180:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e4643206361726420646f6573206e6f74206578697374","id":7329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8203:25:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_05ce55e5de52b8b5808930586694950ca0eee6f4925a9fe48816241091de8ee9","typeString":"literal_string \"NFC card does not exist\""},"value":"NFC card does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05ce55e5de52b8b5808930586694950ca0eee6f4925a9fe48816241091de8ee9","typeString":"literal_string \"NFC card does not exist\""}],"id":7325,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8172:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8172:57:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7331,"nodeType":"ExpressionStatement","src":"8172:57:21"},{"expression":{"id":7336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7332,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7319,"src":"8248:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":7333,"name":"nfcCardToToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"8258:14:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":7335,"indexExpression":{"id":7334,"name":"cardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"8273:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8258:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8248:32:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7337,"nodeType":"ExpressionStatement","src":"8248:32:21"},{"assignments":[7340],"declarations":[{"constant":false,"id":7340,"mutability":"mutable","name":"card","nameLocation":"8305:4:21","nodeType":"VariableDeclaration","scope":7356,"src":"8290:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_NFCCard_$6829_memory_ptr","typeString":"struct YachtClubMembership.NFCCard"},"typeName":{"id":7339,"nodeType":"UserDefinedTypeName","pathNode":{"id":7338,"name":"NFCCard","nameLocations":["8290:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":6829,"src":"8290:7:21"},"referencedDeclaration":6829,"src":"8290:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_NFCCard_$6829_storage_ptr","typeString":"struct YachtClubMembership.NFCCard"}},"visibility":"internal"}],"id":7345,"initialValue":{"expression":{"baseExpression":{"id":7341,"name":"memberInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"8312:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MemberInfo_$6844_storage_$","typeString":"mapping(uint256 => struct YachtClubMembership.MemberInfo storage ref)"}},"id":7343,"indexExpression":{"id":7342,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7319,"src":"8323:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8312:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_storage","typeString":"struct YachtClubMembership.MemberInfo storage ref"}},"id":7344,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8332:7:21","memberName":"nfcCard","nodeType":"MemberAccess","referencedDeclaration":6841,"src":"8312:27:21","typeDescriptions":{"typeIdentifier":"t_struct$_NFCCard_$6829_storage","typeString":"struct YachtClubMembership.NFCCard storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8290:49:21"},{"expression":{"id":7349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7346,"name":"isActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7321,"src":"8349:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7347,"name":"card","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"8360:4:21","typeDescriptions":{"typeIdentifier":"t_struct$_NFCCard_$6829_memory_ptr","typeString":"struct YachtClubMembership.NFCCard memory"}},"id":7348,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8365:8:21","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6826,"src":"8360:13:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8349:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7350,"nodeType":"ExpressionStatement","src":"8349:24:21"},{"expression":{"id":7354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7351,"name":"cardType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7323,"src":"8383:8:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7352,"name":"card","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"8394:4:21","typeDescriptions":{"typeIdentifier":"t_struct$_NFCCard_$6829_memory_ptr","typeString":"struct YachtClubMembership.NFCCard memory"}},"id":7353,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8399:8:21","memberName":"cardType","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"8394:13:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8383:24:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":7355,"nodeType":"ExpressionStatement","src":"8383:24:21"}]},"documentation":{"id":7314,"nodeType":"StructuredDocumentation","src":"7755:247:21","text":" @dev Get NFC card info by card ID\n @param cardId The NFC card identifier\n @return tokenId The token ID the card is linked to\n @return isActive Whether the card is active\n @return cardType The type of card"},"functionSelector":"e5dd281b","id":7357,"implemented":true,"kind":"function","modifiers":[],"name":"getNFCCardInfo","nameLocation":"8016:14:21","nodeType":"FunctionDefinition","parameters":{"id":7317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7316,"mutability":"mutable","name":"cardId","nameLocation":"8045:6:21","nodeType":"VariableDeclaration","scope":7357,"src":"8031:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7315,"name":"string","nodeType":"ElementaryTypeName","src":"8031:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8030:22:21"},"returnParameters":{"id":7324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7319,"mutability":"mutable","name":"tokenId","nameLocation":"8093:7:21","nodeType":"VariableDeclaration","scope":7357,"src":"8085:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7318,"name":"uint256","nodeType":"ElementaryTypeName","src":"8085:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7321,"mutability":"mutable","name":"isActive","nameLocation":"8115:8:21","nodeType":"VariableDeclaration","scope":7357,"src":"8110:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7320,"name":"bool","nodeType":"ElementaryTypeName","src":"8110:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7323,"mutability":"mutable","name":"cardType","nameLocation":"8147:8:21","nodeType":"VariableDeclaration","scope":7357,"src":"8133:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7322,"name":"string","nodeType":"ElementaryTypeName","src":"8133:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8075:86:21"},"scope":7769,"src":"8007:407:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7433,"nodeType":"Block","src":"8845:485:21","statements":[{"condition":{"id":7373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8859:22:21","subExpression":{"baseExpression":{"id":7370,"name":"nfcCardExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6861,"src":"8860:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":7372,"indexExpression":{"id":7371,"name":"cardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7360,"src":"8874:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8860:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7384,"nodeType":"IfStatement","src":"8855:100:21","trueBody":{"id":7383,"nodeType":"Block","src":"8883:72:21","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":7374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8905:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":7377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8920:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8912:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7375,"name":"address","nodeType":"ElementaryTypeName","src":"8912:7:21","typeDescriptions":{}}},"id":7378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8912:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7379,"name":"MemberTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6818,"src":"8924:10:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MemberTier_$6818_$","typeString":"type(enum YachtClubMembership.MemberTier)"}},"id":7380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8935:8:21","memberName":"Standard","nodeType":"MemberAccess","referencedDeclaration":6814,"src":"8924:19:21","typeDescriptions":{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"}}],"id":7381,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8904:40:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$_t_enum$_MemberTier_$6818_$","typeString":"tuple(bool,address,enum YachtClubMembership.MemberTier)"}},"functionReturnParameters":7369,"id":7382,"nodeType":"Return","src":"8897:47:21"}]}},{"assignments":[7386],"declarations":[{"constant":false,"id":7386,"mutability":"mutable","name":"tokenId","nameLocation":"8981:7:21","nodeType":"VariableDeclaration","scope":7433,"src":"8973:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7385,"name":"uint256","nodeType":"ElementaryTypeName","src":"8973:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7390,"initialValue":{"baseExpression":{"id":7387,"name":"nfcCardToToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"8991:14:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":7389,"indexExpression":{"id":7388,"name":"cardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7360,"src":"9006:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8991:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8973:40:21"},{"assignments":[7393],"declarations":[{"constant":false,"id":7393,"mutability":"mutable","name":"member","nameLocation":"9041:6:21","nodeType":"VariableDeclaration","scope":7433,"src":"9023:24:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_memory_ptr","typeString":"struct YachtClubMembership.MemberInfo"},"typeName":{"id":7392,"nodeType":"UserDefinedTypeName","pathNode":{"id":7391,"name":"MemberInfo","nameLocations":["9023:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":6844,"src":"9023:10:21"},"referencedDeclaration":6844,"src":"9023:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_storage_ptr","typeString":"struct YachtClubMembership.MemberInfo"}},"visibility":"internal"}],"id":7397,"initialValue":{"baseExpression":{"id":7394,"name":"memberInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"9050:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MemberInfo_$6844_storage_$","typeString":"mapping(uint256 => struct YachtClubMembership.MemberInfo storage ref)"}},"id":7396,"indexExpression":{"id":7395,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7386,"src":"9061:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9050:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_storage","typeString":"struct YachtClubMembership.MemberInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9023:46:21"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9092:14:21","subExpression":{"expression":{"id":7398,"name":"member","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"9093:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_memory_ptr","typeString":"struct YachtClubMembership.MemberInfo memory"}},"id":7399,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9100:6:21","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":6838,"src":"9093:13:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":7403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9110:18:21","subExpression":{"expression":{"id":7401,"name":"member","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"9111:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_memory_ptr","typeString":"struct YachtClubMembership.MemberInfo memory"}},"id":7402,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9118:10:21","memberName":"hasNFCCard","nodeType":"MemberAccess","referencedDeclaration":6843,"src":"9111:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9092:36:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":7408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9132:24:21","subExpression":{"expression":{"expression":{"id":7405,"name":"member","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"9133:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_memory_ptr","typeString":"struct YachtClubMembership.MemberInfo memory"}},"id":7406,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9140:7:21","memberName":"nfcCard","nodeType":"MemberAccess","referencedDeclaration":6841,"src":"9133:14:21","typeDescriptions":{"typeIdentifier":"t_struct$_NFCCard_$6829_memory_ptr","typeString":"struct YachtClubMembership.NFCCard memory"}},"id":7407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9148:8:21","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6826,"src":"9133:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9092:64:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7420,"nodeType":"IfStatement","src":"9088:142:21","trueBody":{"id":7419,"nodeType":"Block","src":"9158:72:21","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":7410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9180:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":7413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9195:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9187:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7411,"name":"address","nodeType":"ElementaryTypeName","src":"9187:7:21","typeDescriptions":{}}},"id":7414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9187:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7415,"name":"MemberTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6818,"src":"9199:10:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MemberTier_$6818_$","typeString":"type(enum YachtClubMembership.MemberTier)"}},"id":7416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9210:8:21","memberName":"Standard","nodeType":"MemberAccess","referencedDeclaration":6814,"src":"9199:19:21","typeDescriptions":{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"}}],"id":7417,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9179:40:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$_t_enum$_MemberTier_$6818_$","typeString":"tuple(bool,address,enum YachtClubMembership.MemberTier)"}},"functionReturnParameters":7369,"id":7418,"nodeType":"Return","src":"9172:47:21"}]}},{"assignments":[7422],"declarations":[{"constant":false,"id":7422,"mutability":"mutable","name":"owner","nameLocation":"9256:5:21","nodeType":"VariableDeclaration","scope":7433,"src":"9248:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7421,"name":"address","nodeType":"ElementaryTypeName","src":"9248:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7426,"initialValue":{"arguments":[{"id":7424,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7386,"src":"9272:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7423,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"9264:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9264:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9248:32:21"},{"expression":{"components":[{"hexValue":"74727565","id":7427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9298:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":7428,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7422,"src":"9304:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7429,"name":"member","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"9311:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_memory_ptr","typeString":"struct YachtClubMembership.MemberInfo memory"}},"id":7430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9318:4:21","memberName":"tier","nodeType":"MemberAccess","referencedDeclaration":6832,"src":"9311:11:21","typeDescriptions":{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"}}],"id":7431,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9297:26:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$_t_enum$_MemberTier_$6818_$","typeString":"tuple(bool,address,enum YachtClubMembership.MemberTier)"}},"functionReturnParameters":7369,"id":7432,"nodeType":"Return","src":"9290:33:21"}]},"documentation":{"id":7358,"nodeType":"StructuredDocumentation","src":"8424:264:21","text":" @dev Verify NFC card for real-world usage\n @param cardId The NFC card identifier\n @return isValid Whether the card is valid for use\n @return memberAddress The member address if valid\n @return tier The member tier if valid"},"functionSelector":"c84cfcbb","id":7434,"implemented":true,"kind":"function","modifiers":[],"name":"verifyNFCCard","nameLocation":"8702:13:21","nodeType":"FunctionDefinition","parameters":{"id":7361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7360,"mutability":"mutable","name":"cardId","nameLocation":"8730:6:21","nodeType":"VariableDeclaration","scope":7434,"src":"8716:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7359,"name":"string","nodeType":"ElementaryTypeName","src":"8716:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8715:22:21"},"returnParameters":{"id":7369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7363,"mutability":"mutable","name":"isValid","nameLocation":"8775:7:21","nodeType":"VariableDeclaration","scope":7434,"src":"8770:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7362,"name":"bool","nodeType":"ElementaryTypeName","src":"8770:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7365,"mutability":"mutable","name":"memberAddress","nameLocation":"8800:13:21","nodeType":"VariableDeclaration","scope":7434,"src":"8792:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7364,"name":"address","nodeType":"ElementaryTypeName","src":"8792:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7368,"mutability":"mutable","name":"tier","nameLocation":"8834:4:21","nodeType":"VariableDeclaration","scope":7434,"src":"8823:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"},"typeName":{"id":7367,"nodeType":"UserDefinedTypeName","pathNode":{"id":7366,"name":"MemberTier","nameLocations":["8823:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":6818,"src":"8823:10:21"},"referencedDeclaration":6818,"src":"8823:10:21","typeDescriptions":{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"}},"visibility":"internal"}],"src":"8760:84:21"},"scope":7769,"src":"8693:637:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7478,"nodeType":"Block","src":"9482:257:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7447,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7437,"src":"9509:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7446,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"9500:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9500:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9529:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9521:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7449,"name":"address","nodeType":"ElementaryTypeName","src":"9521:7:21","typeDescriptions":{}}},"id":7452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9521:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9500:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":7454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9533:22:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":7445,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9492:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9492:64:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7456,"nodeType":"ExpressionStatement","src":"9492:64:21"},{"assignments":[7459],"declarations":[{"constant":false,"id":7459,"mutability":"mutable","name":"oldTier","nameLocation":"9586:7:21","nodeType":"VariableDeclaration","scope":7478,"src":"9575:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"},"typeName":{"id":7458,"nodeType":"UserDefinedTypeName","pathNode":{"id":7457,"name":"MemberTier","nameLocations":["9575:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":6818,"src":"9575:10:21"},"referencedDeclaration":6818,"src":"9575:10:21","typeDescriptions":{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"}},"visibility":"internal"}],"id":7464,"initialValue":{"expression":{"baseExpression":{"id":7460,"name":"memberInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"9596:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MemberInfo_$6844_storage_$","typeString":"mapping(uint256 => struct YachtClubMembership.MemberInfo storage ref)"}},"id":7462,"indexExpression":{"id":7461,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7437,"src":"9607:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9596:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_storage","typeString":"struct YachtClubMembership.MemberInfo storage ref"}},"id":7463,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9616:4:21","memberName":"tier","nodeType":"MemberAccess","referencedDeclaration":6832,"src":"9596:24:21","typeDescriptions":{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"}},"nodeType":"VariableDeclarationStatement","src":"9575:45:21"},{"expression":{"id":7470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7465,"name":"memberInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"9630:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MemberInfo_$6844_storage_$","typeString":"mapping(uint256 => struct YachtClubMembership.MemberInfo storage ref)"}},"id":7467,"indexExpression":{"id":7466,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7437,"src":"9641:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9630:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_storage","typeString":"struct YachtClubMembership.MemberInfo storage ref"}},"id":7468,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9650:4:21","memberName":"tier","nodeType":"MemberAccess","referencedDeclaration":6832,"src":"9630:24:21","typeDescriptions":{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7469,"name":"newTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"9657:7:21","typeDescriptions":{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"}},"src":"9630:34:21","typeDescriptions":{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"}},"id":7471,"nodeType":"ExpressionStatement","src":"9630:34:21"},{"eventCall":{"arguments":[{"id":7473,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7437,"src":"9706:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7474,"name":"oldTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7459,"src":"9715:7:21","typeDescriptions":{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"}},{"id":7475,"name":"newTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"9724:7:21","typeDescriptions":{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"},{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"}],"id":7472,"name":"MemberTierUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"9688:17:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_MemberTier_$6818_$_t_enum$_MemberTier_$6818_$returns$__$","typeString":"function (uint256,enum YachtClubMembership.MemberTier,enum YachtClubMembership.MemberTier)"}},"id":7476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9688:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7477,"nodeType":"EmitStatement","src":"9683:49:21"}]},"documentation":{"id":7435,"nodeType":"StructuredDocumentation","src":"9340:55:21","text":" @dev Update member tier (admin only)"},"functionSelector":"1d0431fd","id":7479,"implemented":true,"kind":"function","modifiers":[{"id":7443,"kind":"modifierInvocation","modifierName":{"id":7442,"name":"onlyOwner","nameLocations":["9472:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"9472:9:21"},"nodeType":"ModifierInvocation","src":"9472:9:21"}],"name":"updateMemberTier","nameLocation":"9409:16:21","nodeType":"FunctionDefinition","parameters":{"id":7441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7437,"mutability":"mutable","name":"tokenId","nameLocation":"9434:7:21","nodeType":"VariableDeclaration","scope":7479,"src":"9426:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7436,"name":"uint256","nodeType":"ElementaryTypeName","src":"9426:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7440,"mutability":"mutable","name":"newTier","nameLocation":"9454:7:21","nodeType":"VariableDeclaration","scope":7479,"src":"9443:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"},"typeName":{"id":7439,"nodeType":"UserDefinedTypeName","pathNode":{"id":7438,"name":"MemberTier","nameLocations":["9443:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":6818,"src":"9443:10:21"},"referencedDeclaration":6818,"src":"9443:10:21","typeDescriptions":{"typeIdentifier":"t_enum$_MemberTier_$6818","typeString":"enum YachtClubMembership.MemberTier"}},"visibility":"internal"}],"src":"9425:37:21"},"returnParameters":{"id":7444,"nodeType":"ParameterList","parameters":[],"src":"9482:0:21"},"scope":7769,"src":"9400:339:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7506,"nodeType":"Block","src":"9878:125:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7489,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"9905:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7488,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"9896:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9896:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9925:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9917:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7491,"name":"address","nodeType":"ElementaryTypeName","src":"9917:7:21","typeDescriptions":{}}},"id":7494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9917:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9896:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":7496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9929:22:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":7487,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9888:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9888:64:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7498,"nodeType":"ExpressionStatement","src":"9888:64:21"},{"expression":{"id":7504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7499,"name":"memberInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"9962:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MemberInfo_$6844_storage_$","typeString":"mapping(uint256 => struct YachtClubMembership.MemberInfo storage ref)"}},"id":7501,"indexExpression":{"id":7500,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"9973:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9962:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_storage","typeString":"struct YachtClubMembership.MemberInfo storage ref"}},"id":7502,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9982:6:21","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":6838,"src":"9962:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":7503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9991:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"9962:34:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7505,"nodeType":"ExpressionStatement","src":"9962:34:21"}]},"documentation":{"id":7480,"nodeType":"StructuredDocumentation","src":"9749:58:21","text":" @dev Deactivate membership (admin only)"},"functionSelector":"c4e4ae8a","id":7507,"implemented":true,"kind":"function","modifiers":[{"id":7485,"kind":"modifierInvocation","modifierName":{"id":7484,"name":"onlyOwner","nameLocations":["9868:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"9868:9:21"},"nodeType":"ModifierInvocation","src":"9868:9:21"}],"name":"deactivateMembership","nameLocation":"9821:20:21","nodeType":"FunctionDefinition","parameters":{"id":7483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7482,"mutability":"mutable","name":"tokenId","nameLocation":"9850:7:21","nodeType":"VariableDeclaration","scope":7507,"src":"9842:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7481,"name":"uint256","nodeType":"ElementaryTypeName","src":"9842:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9841:17:21"},"returnParameters":{"id":7486,"nodeType":"ParameterList","parameters":[],"src":"9878:0:21"},"scope":7769,"src":"9812:191:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7534,"nodeType":"Block","src":"10142:124:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7517,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7510,"src":"10169:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7516,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"10160:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10160:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10189:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10181:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7519,"name":"address","nodeType":"ElementaryTypeName","src":"10181:7:21","typeDescriptions":{}}},"id":7522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10181:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10160:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":7524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10193:22:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":7515,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10152:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10152:64:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7526,"nodeType":"ExpressionStatement","src":"10152:64:21"},{"expression":{"id":7532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7527,"name":"memberInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"10226:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MemberInfo_$6844_storage_$","typeString":"mapping(uint256 => struct YachtClubMembership.MemberInfo storage ref)"}},"id":7529,"indexExpression":{"id":7528,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7510,"src":"10237:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10226:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_storage","typeString":"struct YachtClubMembership.MemberInfo storage ref"}},"id":7530,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10246:6:21","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":6838,"src":"10226:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10255:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"10226:33:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7533,"nodeType":"ExpressionStatement","src":"10226:33:21"}]},"documentation":{"id":7508,"nodeType":"StructuredDocumentation","src":"10013:58:21","text":" @dev Reactivate membership (admin only)"},"functionSelector":"bec429db","id":7535,"implemented":true,"kind":"function","modifiers":[{"id":7513,"kind":"modifierInvocation","modifierName":{"id":7512,"name":"onlyOwner","nameLocations":["10132:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"10132:9:21"},"nodeType":"ModifierInvocation","src":"10132:9:21"}],"name":"reactivateMembership","nameLocation":"10085:20:21","nodeType":"FunctionDefinition","parameters":{"id":7511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7510,"mutability":"mutable","name":"tokenId","nameLocation":"10114:7:21","nodeType":"VariableDeclaration","scope":7535,"src":"10106:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7509,"name":"uint256","nodeType":"ElementaryTypeName","src":"10106:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10105:17:21"},"returnParameters":{"id":7514,"nodeType":"ParameterList","parameters":[],"src":"10142:0:21"},"scope":7769,"src":"10076:190:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7556,"nodeType":"Block","src":"10409:167:21","statements":[{"assignments":[7544],"declarations":[{"constant":false,"id":7544,"mutability":"mutable","name":"oldMinter","nameLocation":"10427:9:21","nodeType":"VariableDeclaration","scope":7556,"src":"10419:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7543,"name":"address","nodeType":"ElementaryTypeName","src":"10419:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7546,"initialValue":{"id":7545,"name":"authorizedMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"10439:16:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10419:36:21"},{"expression":{"id":7549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7547,"name":"authorizedMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"10465:16:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7548,"name":"_authorizedMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"10484:17:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10465:36:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7550,"nodeType":"ExpressionStatement","src":"10465:36:21"},{"eventCall":{"arguments":[{"id":7552,"name":"oldMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7544,"src":"10540:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7553,"name":"_authorizedMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"10551:17:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7551,"name":"AuthorizedMinterUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6918,"src":"10516:23:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":7554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10516:53:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7555,"nodeType":"EmitStatement","src":"10511:58:21"}]},"documentation":{"id":7536,"nodeType":"StructuredDocumentation","src":"10276:53:21","text":" @dev Set authorized minter address"},"functionSelector":"1928b7c3","id":7557,"implemented":true,"kind":"function","modifiers":[{"id":7541,"kind":"modifierInvocation","modifierName":{"id":7540,"name":"onlyOwner","nameLocations":["10399:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"10399:9:21"},"nodeType":"ModifierInvocation","src":"10399:9:21"}],"name":"setAuthorizedMinter","nameLocation":"10343:19:21","nodeType":"FunctionDefinition","parameters":{"id":7539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7538,"mutability":"mutable","name":"_authorizedMinter","nameLocation":"10371:17:21","nodeType":"VariableDeclaration","scope":7557,"src":"10363:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7537,"name":"address","nodeType":"ElementaryTypeName","src":"10363:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10362:27:21"},"returnParameters":{"id":7542,"nodeType":"ParameterList","parameters":[],"src":"10409:0:21"},"scope":7769,"src":"10334:242:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7573,"nodeType":"Block","src":"10708:104:21","statements":[{"expression":{"id":7567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7565,"name":"transfersRestricted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6809,"src":"10718:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7566,"name":"_restricted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7560,"src":"10740:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10718:33:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7568,"nodeType":"ExpressionStatement","src":"10718:33:21"},{"eventCall":{"arguments":[{"id":7570,"name":"_restricted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7560,"src":"10793:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7569,"name":"TransferRestrictionUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"10766:26:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":7571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10766:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7572,"nodeType":"EmitStatement","src":"10761:44:21"}]},"documentation":{"id":7558,"nodeType":"StructuredDocumentation","src":"10586:49:21","text":" @dev Set transfer restrictions"},"functionSelector":"70bb0a16","id":7574,"implemented":true,"kind":"function","modifiers":[{"id":7563,"kind":"modifierInvocation","modifierName":{"id":7562,"name":"onlyOwner","nameLocations":["10698:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"10698:9:21"},"nodeType":"ModifierInvocation","src":"10698:9:21"}],"name":"setTransferRestricted","nameLocation":"10649:21:21","nodeType":"FunctionDefinition","parameters":{"id":7561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7560,"mutability":"mutable","name":"_restricted","nameLocation":"10676:11:21","nodeType":"VariableDeclaration","scope":7574,"src":"10671:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7559,"name":"bool","nodeType":"ElementaryTypeName","src":"10671:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10670:18:21"},"returnParameters":{"id":7564,"nodeType":"ParameterList","parameters":[],"src":"10708:0:21"},"scope":7769,"src":"10640:172:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7595,"nodeType":"Block","src":"10982:125:21","statements":[{"expression":{"id":7588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7584,"name":"approvedMarketplaces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6813,"src":"10992:20:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7586,"indexExpression":{"id":7585,"name":"marketplace","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7577,"src":"11013:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10992:33:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7587,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"11028:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10992:44:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7589,"nodeType":"ExpressionStatement","src":"10992:44:21"},{"eventCall":{"arguments":[{"id":7591,"name":"marketplace","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7577,"src":"11078:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7592,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"11091:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7590,"name":"MarketplaceApprovalUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"11051:26:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":7593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11051:49:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7594,"nodeType":"EmitStatement","src":"11046:54:21"}]},"documentation":{"id":7575,"nodeType":"StructuredDocumentation","src":"10822:68:21","text":" @dev Approve/disapprove marketplace for transfers"},"functionSelector":"31062623","id":7596,"implemented":true,"kind":"function","modifiers":[{"id":7582,"kind":"modifierInvocation","modifierName":{"id":7581,"name":"onlyOwner","nameLocations":["10972:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"10972:9:21"},"nodeType":"ModifierInvocation","src":"10972:9:21"}],"name":"setMarketplaceApproval","nameLocation":"10904:22:21","nodeType":"FunctionDefinition","parameters":{"id":7580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7577,"mutability":"mutable","name":"marketplace","nameLocation":"10935:11:21","nodeType":"VariableDeclaration","scope":7596,"src":"10927:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7576,"name":"address","nodeType":"ElementaryTypeName","src":"10927:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7579,"mutability":"mutable","name":"approved","nameLocation":"10953:8:21","nodeType":"VariableDeclaration","scope":7596,"src":"10948:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7578,"name":"bool","nodeType":"ElementaryTypeName","src":"10948:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10926:36:21"},"returnParameters":{"id":7583,"nodeType":"ParameterList","parameters":[],"src":"10982:0:21"},"scope":7769,"src":"10895:212:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7614,"nodeType":"Block","src":"11500:83:21","statements":[{"expression":{"id":7608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7606,"name":"_royaltyRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6802,"src":"11510:17:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7607,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7599,"src":"11530:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11510:29:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7609,"nodeType":"ExpressionStatement","src":"11510:29:21"},{"expression":{"id":7612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7610,"name":"_royaltyFraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6804,"src":"11549:16:21","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7611,"name":"fraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7601,"src":"11568:8:21","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11549:27:21","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":7613,"nodeType":"ExpressionStatement","src":"11549:27:21"}]},"documentation":{"id":7597,"nodeType":"StructuredDocumentation","src":"11376:40:21","text":" @dev Set royalty info"},"functionSelector":"02fa7c47","id":7615,"implemented":true,"kind":"function","modifiers":[{"id":7604,"kind":"modifierInvocation","modifierName":{"id":7603,"name":"onlyOwner","nameLocations":["11490:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"11490:9:21"},"nodeType":"ModifierInvocation","src":"11490:9:21"}],"name":"setRoyaltyInfo","nameLocation":"11430:14:21","nodeType":"FunctionDefinition","parameters":{"id":7602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7599,"mutability":"mutable","name":"recipient","nameLocation":"11453:9:21","nodeType":"VariableDeclaration","scope":7615,"src":"11445:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7598,"name":"address","nodeType":"ElementaryTypeName","src":"11445:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7601,"mutability":"mutable","name":"fraction","nameLocation":"11471:8:21","nodeType":"VariableDeclaration","scope":7615,"src":"11464:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7600,"name":"uint96","nodeType":"ElementaryTypeName","src":"11464:6:21","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11444:36:21"},"returnParameters":{"id":7605,"nodeType":"ParameterList","parameters":[],"src":"11500:0:21"},"scope":7769,"src":"11421:162:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[170],"body":{"id":7653,"nodeType":"Block","src":"11809:192:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7630,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7618,"src":"11836:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7629,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"11827:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11827:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11856:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11848:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7632,"name":"address","nodeType":"ElementaryTypeName","src":"11848:7:21","typeDescriptions":{}}},"id":7635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11848:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11827:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":7637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11860:22:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":7628,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11819:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11819:64:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7639,"nodeType":"ExpressionStatement","src":"11819:64:21"},{"expression":{"id":7642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7640,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7624,"src":"11902:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7641,"name":"_royaltyRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6802,"src":"11913:17:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11902:28:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7643,"nodeType":"ExpressionStatement","src":"11902:28:21"},{"expression":{"id":7651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7644,"name":"royaltyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7626,"src":"11940:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7645,"name":"salePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7620,"src":"11957:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7646,"name":"_royaltyFraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6804,"src":"11969:16:21","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11957:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7648,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11956:30:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":7649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11989:5:21","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"11956:38:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11940:54:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7652,"nodeType":"ExpressionStatement","src":"11940:54:21"}]},"documentation":{"id":7616,"nodeType":"StructuredDocumentation","src":"11593:45:21","text":" @dev ERC-2981 royalty info"},"functionSelector":"2a55205a","id":7654,"implemented":true,"kind":"function","modifiers":[],"name":"royaltyInfo","nameLocation":"11652:11:21","nodeType":"FunctionDefinition","overrides":{"id":7622,"nodeType":"OverrideSpecifier","overrides":[],"src":"11738:8:21"},"parameters":{"id":7621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7618,"mutability":"mutable","name":"tokenId","nameLocation":"11672:7:21","nodeType":"VariableDeclaration","scope":7654,"src":"11664:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7617,"name":"uint256","nodeType":"ElementaryTypeName","src":"11664:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7620,"mutability":"mutable","name":"salePrice","nameLocation":"11689:9:21","nodeType":"VariableDeclaration","scope":7654,"src":"11681:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7619,"name":"uint256","nodeType":"ElementaryTypeName","src":"11681:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11663:36:21"},"returnParameters":{"id":7627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7624,"mutability":"mutable","name":"receiver","nameLocation":"11772:8:21","nodeType":"VariableDeclaration","scope":7654,"src":"11764:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7623,"name":"address","nodeType":"ElementaryTypeName","src":"11764:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7626,"mutability":"mutable","name":"royaltyAmount","nameLocation":"11790:13:21","nodeType":"VariableDeclaration","scope":7654,"src":"11782:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7625,"name":"uint256","nodeType":"ElementaryTypeName","src":"11782:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11763:41:21"},"scope":7769,"src":"11643:358:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7664,"nodeType":"Block","src":"12111:43:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7660,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"12128:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12146:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12128:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7659,"id":7663,"nodeType":"Return","src":"12121:26:21"}]},"documentation":{"id":7655,"nodeType":"StructuredDocumentation","src":"12011:40:21","text":" @dev Get total supply"},"functionSelector":"18160ddd","id":7665,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"12065:11:21","nodeType":"FunctionDefinition","parameters":{"id":7656,"nodeType":"ParameterList","parameters":[],"src":"12076:2:21"},"returnParameters":{"id":7659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7665,"src":"12102:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7657,"name":"uint256","nodeType":"ElementaryTypeName","src":"12102:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12101:9:21"},"scope":7769,"src":"12056:98:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7690,"nodeType":"Block","src":"12302:117:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7676,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7668,"src":"12329:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7675,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"12320:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12320:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12349:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12341:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7678,"name":"address","nodeType":"ElementaryTypeName","src":"12341:7:21","typeDescriptions":{}}},"id":7681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12341:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12320:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":7683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12353:22:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":7674,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12312:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12312:64:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7685,"nodeType":"ExpressionStatement","src":"12312:64:21"},{"expression":{"baseExpression":{"id":7686,"name":"memberInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"12393:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MemberInfo_$6844_storage_$","typeString":"mapping(uint256 => struct YachtClubMembership.MemberInfo storage ref)"}},"id":7688,"indexExpression":{"id":7687,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7668,"src":"12404:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12393:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_storage","typeString":"struct YachtClubMembership.MemberInfo storage ref"}},"functionReturnParameters":7673,"id":7689,"nodeType":"Return","src":"12386:26:21"}]},"documentation":{"id":7666,"nodeType":"StructuredDocumentation","src":"12164:51:21","text":" @dev Get member info by token ID"},"functionSelector":"ae99aa3c","id":7691,"implemented":true,"kind":"function","modifiers":[],"name":"getMemberInfo","nameLocation":"12229:13:21","nodeType":"FunctionDefinition","parameters":{"id":7669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7668,"mutability":"mutable","name":"tokenId","nameLocation":"12251:7:21","nodeType":"VariableDeclaration","scope":7691,"src":"12243:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7667,"name":"uint256","nodeType":"ElementaryTypeName","src":"12243:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12242:17:21"},"returnParameters":{"id":7673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7691,"src":"12283:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_memory_ptr","typeString":"struct YachtClubMembership.MemberInfo"},"typeName":{"id":7671,"nodeType":"UserDefinedTypeName","pathNode":{"id":7670,"name":"MemberInfo","nameLocations":["12283:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":6844,"src":"12283:10:21"},"referencedDeclaration":6844,"src":"12283:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_storage_ptr","typeString":"struct YachtClubMembership.MemberInfo"}},"visibility":"internal"}],"src":"12282:19:21"},"scope":7769,"src":"12220:199:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7703,"nodeType":"Block","src":"12564:45:21","statements":[{"expression":{"baseExpression":{"id":7699,"name":"memberTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6853,"src":"12581:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7701,"indexExpression":{"id":7700,"name":"member","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7694,"src":"12595:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12581:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7698,"id":7702,"nodeType":"Return","src":"12574:28:21"}]},"documentation":{"id":7692,"nodeType":"StructuredDocumentation","src":"12429:54:21","text":" @dev Get token ID by member address"},"functionSelector":"504a5983","id":7704,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenIdByMember","nameLocation":"12497:18:21","nodeType":"FunctionDefinition","parameters":{"id":7695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7694,"mutability":"mutable","name":"member","nameLocation":"12524:6:21","nodeType":"VariableDeclaration","scope":7704,"src":"12516:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7693,"name":"address","nodeType":"ElementaryTypeName","src":"12516:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12515:16:21"},"returnParameters":{"id":7698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7704,"src":"12555:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7696,"name":"uint256","nodeType":"ElementaryTypeName","src":"12555:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12554:9:21"},"scope":7769,"src":"12488:121:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7727,"nodeType":"Block","src":"12740:116:21","statements":[{"assignments":[7713],"declarations":[{"constant":false,"id":7713,"mutability":"mutable","name":"tokenId","nameLocation":"12758:7:21","nodeType":"VariableDeclaration","scope":7727,"src":"12750:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7712,"name":"uint256","nodeType":"ElementaryTypeName","src":"12750:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7717,"initialValue":{"baseExpression":{"id":7714,"name":"memberTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6853,"src":"12768:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7716,"indexExpression":{"id":7715,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7707,"src":"12782:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12768:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12750:40:21"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7718,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7713,"src":"12807:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12807:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"expression":{"baseExpression":{"id":7721,"name":"memberInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"12823:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MemberInfo_$6844_storage_$","typeString":"mapping(uint256 => struct YachtClubMembership.MemberInfo storage ref)"}},"id":7723,"indexExpression":{"id":7722,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7713,"src":"12834:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12823:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_MemberInfo_$6844_storage","typeString":"struct YachtClubMembership.MemberInfo storage ref"}},"id":7724,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12843:6:21","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":6838,"src":"12823:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12807:42:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7711,"id":7726,"nodeType":"Return","src":"12800:49:21"}]},"documentation":{"id":7705,"nodeType":"StructuredDocumentation","src":"12619:52:21","text":" @dev Check if address is a member"},"functionSelector":"a230c524","id":7728,"implemented":true,"kind":"function","modifiers":[],"name":"isMember","nameLocation":"12685:8:21","nodeType":"FunctionDefinition","parameters":{"id":7708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7707,"mutability":"mutable","name":"account","nameLocation":"12702:7:21","nodeType":"VariableDeclaration","scope":7728,"src":"12694:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7706,"name":"address","nodeType":"ElementaryTypeName","src":"12694:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12693:17:21"},"returnParameters":{"id":7711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7728,"src":"12734:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7709,"name":"bool","nodeType":"ElementaryTypeName","src":"12734:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12733:6:21"},"scope":7769,"src":"12676:180:21","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[532,1536],"body":{"id":7743,"nodeType":"Block","src":"13113:47:21","statements":[{"expression":{"arguments":[{"id":7740,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7730,"src":"13145:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7738,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"13130:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_YachtClubMembership_$7769_$","typeString":"type(contract super YachtClubMembership)"}},"id":7739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13136:8:21","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":1536,"src":"13130:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":7741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13130:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7737,"id":7742,"nodeType":"Return","src":"13123:30:21"}]},"functionSelector":"c87b56dd","id":7744,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"12980:8:21","nodeType":"FunctionDefinition","overrides":{"id":7734,"nodeType":"OverrideSpecifier","overrides":[{"id":7732,"name":"ERC721","nameLocations":["13051:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":1293,"src":"13051:6:21"},{"id":7733,"name":"ERC721URIStorage","nameLocations":["13059:16:21"],"nodeType":"IdentifierPath","referencedDeclaration":1556,"src":"13059:16:21"}],"src":"13042:34:21"},"parameters":{"id":7731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7730,"mutability":"mutable","name":"tokenId","nameLocation":"12997:7:21","nodeType":"VariableDeclaration","scope":7744,"src":"12989:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7729,"name":"uint256","nodeType":"ElementaryTypeName","src":"12989:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12988:17:21"},"returnParameters":{"id":7737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7744,"src":"13094:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7735,"name":"string","nodeType":"ElementaryTypeName","src":"13094:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13093:15:21"},"scope":7769,"src":"12971:189:21","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[437,1479,3249],"body":{"id":7767,"nodeType":"Block","src":"13324:105:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":7760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7755,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7746,"src":"13341:11:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":7757,"name":"IERC2981","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"13361:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC2981_$171_$","typeString":"type(contract IERC2981)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC2981_$171_$","typeString":"type(contract IERC2981)"}],"id":7756,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13356:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13356:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC2981_$171","typeString":"type(contract IERC2981)"}},"id":7759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13371:11:21","memberName":"interfaceId","nodeType":"MemberAccess","src":"13356:26:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"13341:41:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":7763,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7746,"src":"13410:11:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":7761,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"13386:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_YachtClubMembership_$7769_$","typeString":"type(contract super YachtClubMembership)"}},"id":7762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13392:17:21","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1479,"src":"13386:23:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":7764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13386:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13341:81:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7754,"id":7766,"nodeType":"Return","src":"13334:88:21"}]},"functionSelector":"01ffc9a7","id":7768,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"13179:17:21","nodeType":"FunctionDefinition","overrides":{"id":7751,"nodeType":"OverrideSpecifier","overrides":[{"id":7748,"name":"ERC721","nameLocations":["13262:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":1293,"src":"13262:6:21"},{"id":7749,"name":"ERC721URIStorage","nameLocations":["13270:16:21"],"nodeType":"IdentifierPath","referencedDeclaration":1556,"src":"13270:16:21"},{"id":7750,"name":"IERC165","nameLocations":["13288:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":3250,"src":"13288:7:21"}],"src":"13253:43:21"},"parameters":{"id":7747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7746,"mutability":"mutable","name":"interfaceId","nameLocation":"13204:11:21","nodeType":"VariableDeclaration","scope":7768,"src":"13197:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":7745,"name":"bytes4","nodeType":"ElementaryTypeName","src":"13197:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"13196:20:21"},"returnParameters":{"id":7754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7768,"src":"13314:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7752,"name":"bool","nodeType":"ElementaryTypeName","src":"13314:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13313:6:21"},"scope":7769,"src":"13170:259:21","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":7770,"src":"579:12852:21","usedErrors":[13,18,247,252,261,266,271,278,283,288,1757],"usedEvents":[24,187,194,1309,1318,1327,6872,6882,6890,6896,6902,6906,6912,6918]}],"src":"32:13399:21"},"id":21}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC2981.sol":{"IERC2981":{"abi":[{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"royaltyAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"royaltyInfo(uint256,uint256)":"2a55205a","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants.\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":\"IERC2981\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0xafab0e6c71905303c47dd254168cb31efc91f0ae284cde609b0202f97f85469e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://824d05aec56eb82a2a3c28eece530dc0792d3a008b09d01444e57cf4aceb0445\",\"dweb:/ipfs/QmVvqmJ5UobuRU9Q4JMyXxBfzKs2cpjbWXMNpxX4binTX8\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"IERC4906":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x856ca1885aec23d54da3f2760b5d216d1b28ad20f798000336375a30dbbc1558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc725c462ccbf284432d3123ab8c9bab24903730cae227ae4945878039d2fe54\",\"dweb:/ipfs/QmdiEVMvm8njp96dm2s4mThYBD74tY59mNP6s7CzKkGHAh\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xca34c490d41c332106d30b657f00dc028532cb6b9fef2b1729670ce476b36bce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef5e7685d50ed8aae2104a7eb2c31ae5a3b508f24fadfa7611f92f819201aee9\",\"dweb:/ipfs/QmYbTD32FPrEfP1hkniQmRxVUWp8GTSqFV1Bhwx1HVirse\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x856ca1885aec23d54da3f2760b5d216d1b28ad20f798000336375a30dbbc1558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc725c462ccbf284432d3123ab8c9bab24903730cae227ae4945878039d2fe54\",\"dweb:/ipfs/QmdiEVMvm8njp96dm2s4mThYBD74tY59mNP6s7CzKkGHAh\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xca34c490d41c332106d30b657f00dc028532cb6b9fef2b1729670ce476b36bce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef5e7685d50ed8aae2104a7eb2c31ae5a3b508f24fadfa7611f92f819201aee9\",\"dweb:/ipfs/QmYbTD32FPrEfP1hkniQmRxVUWp8GTSqFV1Bhwx1HVirse\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xb9dc602a845c73d11f1fe38039c0c2cf70fedd2d4afd877c0ed2d0383ffaa232\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59eb46224e996c2f9ecb9a821e65b920c2ecfe9df734613c3df9831de373491c\",\"dweb:/ipfs/QmTsZzJTqRavv64zyaWovcWkUNwfU3uo8uiUjrMFEm8MMj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bedc5186332f3f0d5bf6a506dbab4912c55984f091e811dc439d0fee33175d9b64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xDC MLOAD DUP7 CALLER 0x2F EXTCODEHASH 0xD JUMPDEST 0xF6 0xA5 MOD 0xDB 0xAB 0x49 SLT 0xC5 MSIZE DUP5 CREATE SWAP2 0xE8 GT 0xDC NUMBER SWAP14 0xF 0xEE CALLER OR 0x5D SWAP12 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"431:1490:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;431:1490:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bedc5186332f3f0d5bf6a506dbab4912c55984f091e811dc439d0fee33175d9b64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xDC MLOAD DUP7 CALLER 0x2F EXTCODEHASH 0xD JUMPDEST 0xF6 0xA5 MOD 0xDB 0xAB 0x49 SLT 0xC5 MSIZE DUP5 CREATE SWAP2 0xE8 GT 0xDC NUMBER SWAP14 0xF 0xEE CALLER OR 0x5D SWAP12 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"431:1490:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b1c86b651b296f4d0a2ef0fd743497384b12e402f602b3c0f834bc25cb2c3df064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xC8 PUSH12 0x651B296F4D0A2EF0FD743497 CODESIZE 0x4B SLT 0xE4 MUL 0xF6 MUL 0xB3 0xC0 0xF8 CALLVALUE 0xBC 0x25 0xCB 0x2C RETURNDATASIZE CREATE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"297:18982:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:18982:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b1c86b651b296f4d0a2ef0fd743497384b12e402f602b3c0f834bc25cb2c3df064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xC8 PUSH12 0x651B296F4D0A2EF0FD743497 CODESIZE 0x4B SLT 0xE4 MUL 0xF6 MUL 0xB3 0xC0 0xF8 CALLVALUE 0xBC 0x25 0xCB 0x2C RETURNDATASIZE CREATE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"297:18982:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fcce410fc5cfa45c0c6616aebc7576f43e383fe066bccc2ae83043f7884d82164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xCC 0xE4 LT 0xFC 0x5C STATICCALL GASLIMIT 0xC0 0xC6 PUSH2 0x6AEB 0xC7 JUMPI PUSH16 0x43E383FE066BCCC2AE83043F7884D821 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:31863:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fcce410fc5cfa45c0c6616aebc7576f43e383fe066bccc2ae83043f7884d82164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xCC 0xE4 LT 0xFC 0x5C STATICCALL GASLIMIT 0xC0 0xC6 PUSH2 0x6AEB 0xC7 JUMPI PUSH16 0x43E383FE066BCCC2AE83043F7884D821 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e65a3f6bb9e28d8169ea079d4b688370f4365b9ed0ac7dd77283f5739bebf8d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH6 0xA3F6BB9E28D8 AND SWAP15 LOG0 PUSH26 0xD4B688370F4365B9ED0AC7DD77283F5739BEBF8D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"258:2354:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e65a3f6bb9e28d8169ea079d4b688370f4365b9ed0ac7dd77283f5739bebf8d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH6 0xA3F6BB9E28D8 AND SWAP15 LOG0 PUSH26 0xD4B688370F4365B9ED0AC7DD77283F5739BEBF8D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"258:2354:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/YachtClubMembership.sol":{"YachtClubMembership":{"abi":[{"inputs":[{"internalType":"address","name":"authorizedMinter_","type":"address"},{"internalType":"address","name":"royaltyRecipient_","type":"address"},{"internalType":"uint96","name":"royaltyFraction_","type":"uint96"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldMinter","type":"address"},{"indexed":true,"internalType":"address","name":"newMinter","type":"address"}],"name":"AuthorizedMinterUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"marketplace","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"MarketplaceApprovalUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"enum YachtClubMembership.MemberTier","name":"oldTier","type":"uint8"},{"indexed":false,"internalType":"enum YachtClubMembership.MemberTier","name":"newTier","type":"uint8"}],"name":"MemberTierUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"member","type":"address"},{"indexed":false,"internalType":"enum YachtClubMembership.MemberTier","name":"tier","type":"uint8"},{"indexed":false,"internalType":"string","name":"email","type":"string"}],"name":"MembershipMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"string","name":"cardId","type":"string"}],"name":"NFCCardDeactivated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"string","name":"cardId","type":"string"},{"indexed":false,"internalType":"string","name":"serialNumber","type":"string"}],"name":"NFCCardLinked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"string","name":"cardId","type":"string"}],"name":"NFCCardUnlinked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"restricted","type":"bool"}],"name":"TransferRestrictionUpdated","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"approvedMarketplaces","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"authorizedMinter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"deactivateMembership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"deactivateNFCCard","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getMemberInfo","outputs":[{"components":[{"internalType":"enum YachtClubMembership.MemberTier","name":"tier","type":"uint8"},{"internalType":"uint256","name":"mintedAt","type":"uint256"},{"internalType":"string","name":"email","type":"string"},{"internalType":"bool","name":"active","type":"bool"},{"components":[{"internalType":"string","name":"cardId","type":"string"},{"internalType":"string","name":"serialNumber","type":"string"},{"internalType":"uint256","name":"linkedAt","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"string","name":"cardType","type":"string"}],"internalType":"struct YachtClubMembership.NFCCard","name":"nfcCard","type":"tuple"},{"internalType":"bool","name":"hasNFCCard","type":"bool"}],"internalType":"struct YachtClubMembership.MemberInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"cardId","type":"string"}],"name":"getNFCCardInfo","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"string","name":"cardType","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"member","type":"address"}],"name":"getTokenIdByMember","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"isMember","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"cardId","type":"string"},{"internalType":"string","name":"serialNumber","type":"string"},{"internalType":"string","name":"cardType","type":"string"}],"name":"linkNFCCard","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"memberInfo","outputs":[{"internalType":"enum YachtClubMembership.MemberTier","name":"tier","type":"uint8"},{"internalType":"uint256","name":"mintedAt","type":"uint256"},{"internalType":"string","name":"email","type":"string"},{"internalType":"bool","name":"active","type":"bool"},{"components":[{"internalType":"string","name":"cardId","type":"string"},{"internalType":"string","name":"serialNumber","type":"string"},{"internalType":"uint256","name":"linkedAt","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"string","name":"cardType","type":"string"}],"internalType":"struct YachtClubMembership.NFCCard","name":"nfcCard","type":"tuple"},{"internalType":"bool","name":"hasNFCCard","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"memberTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"enum YachtClubMembership.MemberTier","name":"tier","type":"uint8"},{"internalType":"string","name":"email","type":"string"},{"internalType":"string","name":"tokenURI_","type":"string"}],"name":"mintMembership","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"nfcCardExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"nfcCardToToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"reactivateMembership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"reactivateNFCCard","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"royaltyAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_authorizedMinter","type":"address"}],"name":"setAuthorizedMinter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"marketplace","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setMarketplaceApproval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint96","name":"fraction","type":"uint96"}],"name":"setRoyaltyInfo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_restricted","type":"bool"}],"name":"setTransferRestricted","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"transfersRestricted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"unlinkNFCCard","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"enum YachtClubMembership.MemberTier","name":"newTier","type":"uint8"}],"name":"updateMemberTier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"cardId","type":"string"}],"name":"verifyNFCCard","outputs":[{"internalType":"bool","name":"isValid","type":"bool"},{"internalType":"address","name":"memberAddress","type":"address"},{"internalType":"enum YachtClubMembership.MemberTier","name":"tier","type":"uint8"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1765":{"entryPoint":null,"id":1765,"parameterSlots":0,"returnSlots":0},"@_406":{"entryPoint":null,"id":406,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_6969":{"entryPoint":null,"id":6969,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":308,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":390,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint96_fromMemory":{"entryPoint":419,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":591,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":674,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":531,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":878,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":509,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3822:22","statements":[{"nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:22","statements":[{"nodeType":"YulAssignment","src":"84:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:22"},"nodeType":"YulFunctionCall","src":"93:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:22"}]},{"body":{"nodeType":"YulBlock","src":"169:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:22"},"nodeType":"YulFunctionCall","src":"171:12:22"},"nodeType":"YulExpressionStatement","src":"171:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:22"},"nodeType":"YulFunctionCall","src":"150:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:22"},"nodeType":"YulFunctionCall","src":"146:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:22"},"nodeType":"YulFunctionCall","src":"135:31:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:22"},"nodeType":"YulFunctionCall","src":"125:42:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:22"},"nodeType":"YulFunctionCall","src":"118:50:22"},"nodeType":"YulIf","src":"115:70:22"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:22","type":""}],"src":"14:177:22"},{"body":{"nodeType":"YulBlock","src":"310:344:22","statements":[{"body":{"nodeType":"YulBlock","src":"356:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"365:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"368:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"358:6:22"},"nodeType":"YulFunctionCall","src":"358:12:22"},"nodeType":"YulExpressionStatement","src":"358:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"331:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"340:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"327:3:22"},"nodeType":"YulFunctionCall","src":"327:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"352:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"323:3:22"},"nodeType":"YulFunctionCall","src":"323:32:22"},"nodeType":"YulIf","src":"320:52:22"},{"nodeType":"YulAssignment","src":"381:50:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"421:9:22"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"391:29:22"},"nodeType":"YulFunctionCall","src":"391:40:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"381:6:22"}]},{"nodeType":"YulAssignment","src":"440:59:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"484:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"495:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"480:3:22"},"nodeType":"YulFunctionCall","src":"480:18:22"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"450:29:22"},"nodeType":"YulFunctionCall","src":"450:49:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"440:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"508:38:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"531:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"542:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"527:3:22"},"nodeType":"YulFunctionCall","src":"527:18:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"521:5:22"},"nodeType":"YulFunctionCall","src":"521:25:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"512:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"608:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"617:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"620:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"610:6:22"},"nodeType":"YulFunctionCall","src":"610:12:22"},"nodeType":"YulExpressionStatement","src":"610:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"568:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"579:5:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"594:2:22","type":"","value":"96"},{"kind":"number","nodeType":"YulLiteral","src":"598:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"590:3:22"},"nodeType":"YulFunctionCall","src":"590:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"602:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"586:3:22"},"nodeType":"YulFunctionCall","src":"586:18:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"575:3:22"},"nodeType":"YulFunctionCall","src":"575:30:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"565:2:22"},"nodeType":"YulFunctionCall","src":"565:41:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"558:6:22"},"nodeType":"YulFunctionCall","src":"558:49:22"},"nodeType":"YulIf","src":"555:69:22"},{"nodeType":"YulAssignment","src":"633:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"643:5:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"633:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint96_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"260:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"271:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"283:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"291:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"299:6:22","type":""}],"src":"196:458:22"},{"body":{"nodeType":"YulBlock","src":"691:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"708:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"715:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"720:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"711:3:22"},"nodeType":"YulFunctionCall","src":"711:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"701:6:22"},"nodeType":"YulFunctionCall","src":"701:31:22"},"nodeType":"YulExpressionStatement","src":"701:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"748:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"751:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"741:6:22"},"nodeType":"YulFunctionCall","src":"741:15:22"},"nodeType":"YulExpressionStatement","src":"741:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"772:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"775:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"765:6:22"},"nodeType":"YulFunctionCall","src":"765:15:22"},"nodeType":"YulExpressionStatement","src":"765:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"659:127:22"},{"body":{"nodeType":"YulBlock","src":"846:325:22","statements":[{"nodeType":"YulAssignment","src":"856:22:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"870:1:22","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"873:4:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"866:3:22"},"nodeType":"YulFunctionCall","src":"866:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"856:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"887:38:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"917:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"923:1:22","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"913:3:22"},"nodeType":"YulFunctionCall","src":"913:12:22"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"891:18:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"964:31:22","statements":[{"nodeType":"YulAssignment","src":"966:27:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"980:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"988:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"976:3:22"},"nodeType":"YulFunctionCall","src":"976:17:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"966:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"944:18:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"937:6:22"},"nodeType":"YulFunctionCall","src":"937:26:22"},"nodeType":"YulIf","src":"934:61:22"},{"body":{"nodeType":"YulBlock","src":"1054:111:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1075:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1082:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1087:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1078:3:22"},"nodeType":"YulFunctionCall","src":"1078:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1068:6:22"},"nodeType":"YulFunctionCall","src":"1068:31:22"},"nodeType":"YulExpressionStatement","src":"1068:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1119:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1122:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1112:6:22"},"nodeType":"YulFunctionCall","src":"1112:15:22"},"nodeType":"YulExpressionStatement","src":"1112:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1147:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1150:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1140:6:22"},"nodeType":"YulFunctionCall","src":"1140:15:22"},"nodeType":"YulExpressionStatement","src":"1140:15:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1010:18:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1033:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1041:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1030:2:22"},"nodeType":"YulFunctionCall","src":"1030:14:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1007:2:22"},"nodeType":"YulFunctionCall","src":"1007:38:22"},"nodeType":"YulIf","src":"1004:161:22"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"826:4:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"835:6:22","type":""}],"src":"791:380:22"},{"body":{"nodeType":"YulBlock","src":"1232:65:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1249:1:22","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"1252:3:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1242:6:22"},"nodeType":"YulFunctionCall","src":"1242:14:22"},"nodeType":"YulExpressionStatement","src":"1242:14:22"},{"nodeType":"YulAssignment","src":"1265:26:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1283:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1286:4:22","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1273:9:22"},"nodeType":"YulFunctionCall","src":"1273:18:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1265:4:22"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1215:3:22","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1223:4:22","type":""}],"src":"1176:121:22"},{"body":{"nodeType":"YulBlock","src":"1383:464:22","statements":[{"body":{"nodeType":"YulBlock","src":"1416:425:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1430:11:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1440:1:22","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1434:2:22","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1461:2:22"},{"name":"array","nodeType":"YulIdentifier","src":"1465:5:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1454:6:22"},"nodeType":"YulFunctionCall","src":"1454:17:22"},"nodeType":"YulExpressionStatement","src":"1454:17:22"},{"nodeType":"YulVariableDeclaration","src":"1484:31:22","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1506:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"1510:4:22","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1496:9:22"},"nodeType":"YulFunctionCall","src":"1496:19:22"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"1488:4:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1528:57:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1551:4:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1561:1:22","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"1568:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"1580:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1564:3:22"},"nodeType":"YulFunctionCall","src":"1564:19:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1557:3:22"},"nodeType":"YulFunctionCall","src":"1557:27:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1547:3:22"},"nodeType":"YulFunctionCall","src":"1547:38:22"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"1532:11:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1622:23:22","statements":[{"nodeType":"YulAssignment","src":"1624:19:22","value":{"name":"data","nodeType":"YulIdentifier","src":"1639:4:22"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"1624:11:22"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"1604:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"1616:4:22","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1601:2:22"},"nodeType":"YulFunctionCall","src":"1601:20:22"},"nodeType":"YulIf","src":"1598:47:22"},{"nodeType":"YulVariableDeclaration","src":"1658:41:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1672:4:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1682:1:22","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1689:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"1694:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1685:3:22"},"nodeType":"YulFunctionCall","src":"1685:12:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1678:3:22"},"nodeType":"YulFunctionCall","src":"1678:20:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1668:3:22"},"nodeType":"YulFunctionCall","src":"1668:31:22"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1662:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1712:24:22","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1725:11:22"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1716:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1810:21:22","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1819:5:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1826:2:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1812:6:22"},"nodeType":"YulFunctionCall","src":"1812:17:22"},"nodeType":"YulExpressionStatement","src":"1812:17:22"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1760:5:22"},{"name":"_2","nodeType":"YulIdentifier","src":"1767:2:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1757:2:22"},"nodeType":"YulFunctionCall","src":"1757:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1771:26:22","statements":[{"nodeType":"YulAssignment","src":"1773:22:22","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1786:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"1793:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1782:3:22"},"nodeType":"YulFunctionCall","src":"1782:13:22"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1773:5:22"}]}]},"pre":{"nodeType":"YulBlock","src":"1753:3:22","statements":[]},"src":"1749:82:22"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1399:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"1404:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1396:2:22"},"nodeType":"YulFunctionCall","src":"1396:11:22"},"nodeType":"YulIf","src":"1393:448:22"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"1355:5:22","type":""},{"name":"len","nodeType":"YulTypedName","src":"1362:3:22","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"1367:10:22","type":""}],"src":"1302:545:22"},{"body":{"nodeType":"YulBlock","src":"1937:81:22","statements":[{"nodeType":"YulAssignment","src":"1947:65:22","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1962:4:22"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1980:1:22","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1983:3:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1976:3:22"},"nodeType":"YulFunctionCall","src":"1976:11:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1993:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1989:3:22"},"nodeType":"YulFunctionCall","src":"1989:6:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1972:3:22"},"nodeType":"YulFunctionCall","src":"1972:24:22"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1968:3:22"},"nodeType":"YulFunctionCall","src":"1968:29:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1958:3:22"},"nodeType":"YulFunctionCall","src":"1958:40:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2004:1:22","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2007:3:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2000:3:22"},"nodeType":"YulFunctionCall","src":"2000:11:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1955:2:22"},"nodeType":"YulFunctionCall","src":"1955:57:22"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1947:4:22"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1914:4:22","type":""},{"name":"len","nodeType":"YulTypedName","src":"1920:3:22","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1928:4:22","type":""}],"src":"1852:166:22"},{"body":{"nodeType":"YulBlock","src":"2119:1256:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2129:24:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2149:3:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2143:5:22"},"nodeType":"YulFunctionCall","src":"2143:10:22"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2133:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2196:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2198:16:22"},"nodeType":"YulFunctionCall","src":"2198:18:22"},"nodeType":"YulExpressionStatement","src":"2198:18:22"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2168:6:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2184:2:22","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2188:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2180:3:22"},"nodeType":"YulFunctionCall","src":"2180:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"2192:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2176:3:22"},"nodeType":"YulFunctionCall","src":"2176:18:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2165:2:22"},"nodeType":"YulFunctionCall","src":"2165:30:22"},"nodeType":"YulIf","src":"2162:56:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2271:4:22"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2309:4:22"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2303:5:22"},"nodeType":"YulFunctionCall","src":"2303:11:22"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"2277:25:22"},"nodeType":"YulFunctionCall","src":"2277:38:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"2317:6:22"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2227:43:22"},"nodeType":"YulFunctionCall","src":"2227:97:22"},"nodeType":"YulExpressionStatement","src":"2227:97:22"},{"nodeType":"YulVariableDeclaration","src":"2333:18:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2350:1:22","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"2337:9:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2360:23:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2379:4:22","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"2364:11:22","type":""}]},{"nodeType":"YulAssignment","src":"2392:24:22","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2405:11:22"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2392:9:22"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"2462:656:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2476:35:22","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2495:6:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2507:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2503:3:22"},"nodeType":"YulFunctionCall","src":"2503:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2491:3:22"},"nodeType":"YulFunctionCall","src":"2491:20:22"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"2480:7:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2524:49:22","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2568:4:22"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"2538:29:22"},"nodeType":"YulFunctionCall","src":"2538:35:22"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"2528:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2586:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2595:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2590:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2673:172:22","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2698:6:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2716:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2721:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:22"},"nodeType":"YulFunctionCall","src":"2712:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2706:5:22"},"nodeType":"YulFunctionCall","src":"2706:26:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2691:6:22"},"nodeType":"YulFunctionCall","src":"2691:42:22"},"nodeType":"YulExpressionStatement","src":"2691:42:22"},{"nodeType":"YulAssignment","src":"2750:24:22","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2764:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2772:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2760:3:22"},"nodeType":"YulFunctionCall","src":"2760:14:22"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2750:6:22"}]},{"nodeType":"YulAssignment","src":"2791:40:22","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2808:9:22"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2819:11:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2804:3:22"},"nodeType":"YulFunctionCall","src":"2804:27:22"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2791:9:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2620:1:22"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"2623:7:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2617:2:22"},"nodeType":"YulFunctionCall","src":"2617:14:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2632:28:22","statements":[{"nodeType":"YulAssignment","src":"2634:24:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2643:1:22"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2646:11:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2639:3:22"},"nodeType":"YulFunctionCall","src":"2639:19:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2634:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"2613:3:22","statements":[]},"src":"2609:236:22"},{"body":{"nodeType":"YulBlock","src":"2893:166:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2911:43:22","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2938:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2943:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2934:3:22"},"nodeType":"YulFunctionCall","src":"2934:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2928:5:22"},"nodeType":"YulFunctionCall","src":"2928:26:22"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2915:9:22","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2978:6:22"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2990:9:22"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3017:1:22","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3020:6:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3013:3:22"},"nodeType":"YulFunctionCall","src":"3013:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"3029:3:22","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3009:3:22"},"nodeType":"YulFunctionCall","src":"3009:24:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3039:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3035:3:22"},"nodeType":"YulFunctionCall","src":"3035:6:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3005:3:22"},"nodeType":"YulFunctionCall","src":"3005:37:22"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3001:3:22"},"nodeType":"YulFunctionCall","src":"3001:42:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2986:3:22"},"nodeType":"YulFunctionCall","src":"2986:58:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2971:6:22"},"nodeType":"YulFunctionCall","src":"2971:74:22"},"nodeType":"YulExpressionStatement","src":"2971:74:22"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2864:7:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"2873:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2861:2:22"},"nodeType":"YulFunctionCall","src":"2861:19:22"},"nodeType":"YulIf","src":"2858:201:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3079:4:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3093:1:22","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3096:6:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3089:3:22"},"nodeType":"YulFunctionCall","src":"3089:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"3105:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3085:3:22"},"nodeType":"YulFunctionCall","src":"3085:22:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3072:6:22"},"nodeType":"YulFunctionCall","src":"3072:36:22"},"nodeType":"YulExpressionStatement","src":"3072:36:22"}]},"nodeType":"YulCase","src":"2455:663:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2460:1:22","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3135:234:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3149:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3162:1:22","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3153:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"3198:67:22","statements":[{"nodeType":"YulAssignment","src":"3216:35:22","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3235:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3240:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3231:3:22"},"nodeType":"YulFunctionCall","src":"3231:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3225:5:22"},"nodeType":"YulFunctionCall","src":"3225:26:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3216:5:22"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3179:6:22"},"nodeType":"YulIf","src":"3176:89:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3285:4:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3344:5:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"3351:6:22"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"3291:52:22"},"nodeType":"YulFunctionCall","src":"3291:67:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3278:6:22"},"nodeType":"YulFunctionCall","src":"3278:81:22"},"nodeType":"YulExpressionStatement","src":"3278:81:22"}]},"nodeType":"YulCase","src":"3127:242:22","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2435:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2443:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2432:2:22"},"nodeType":"YulFunctionCall","src":"2432:14:22"},"nodeType":"YulSwitch","src":"2425:944:22"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2104:4:22","type":""},{"name":"src","nodeType":"YulTypedName","src":"2110:3:22","type":""}],"src":"2023:1352:22"},{"body":{"nodeType":"YulBlock","src":"3481:102:22","statements":[{"nodeType":"YulAssignment","src":"3491:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3503:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3514:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3499:3:22"},"nodeType":"YulFunctionCall","src":"3499:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3491:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3533:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3548:6:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3564:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3569:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3560:3:22"},"nodeType":"YulFunctionCall","src":"3560:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"3573:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3556:3:22"},"nodeType":"YulFunctionCall","src":"3556:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3544:3:22"},"nodeType":"YulFunctionCall","src":"3544:32:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3526:6:22"},"nodeType":"YulFunctionCall","src":"3526:51:22"},"nodeType":"YulExpressionStatement","src":"3526:51:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3450:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3461:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3472:4:22","type":""}],"src":"3380:203:22"},{"body":{"nodeType":"YulBlock","src":"3635:185:22","statements":[{"body":{"nodeType":"YulBlock","src":"3674:111:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3695:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3702:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3707:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3698:3:22"},"nodeType":"YulFunctionCall","src":"3698:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3688:6:22"},"nodeType":"YulFunctionCall","src":"3688:31:22"},"nodeType":"YulExpressionStatement","src":"3688:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3739:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3742:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3732:6:22"},"nodeType":"YulFunctionCall","src":"3732:15:22"},"nodeType":"YulExpressionStatement","src":"3732:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3767:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3770:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3760:6:22"},"nodeType":"YulFunctionCall","src":"3760:15:22"},"nodeType":"YulExpressionStatement","src":"3760:15:22"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3651:5:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3662:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3658:3:22"},"nodeType":"YulFunctionCall","src":"3658:6:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3648:2:22"},"nodeType":"YulFunctionCall","src":"3648:17:22"},"nodeType":"YulIf","src":"3645:140:22"},{"nodeType":"YulAssignment","src":"3794:20:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3805:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"3812:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3801:3:22"},"nodeType":"YulFunctionCall","src":"3801:13:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3794:3:22"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3617:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3627:3:22","type":""}],"src":"3588:232:22"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint96_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, sub(shl(96, 1), 1)))) { revert(0, 0) }\n        value2 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6080604052600b805460ff60a01b1916600160a01b1790553480156200002457600080fd5b5060405162003a9a38038062003a9a8339810160408190526200004791620001a3565b3360405180606001604052806023815260200162003a77602391396040805180820190915260058152644c5359434d60d81b602082015260006200008c8382620002a2565b5060016200009b8282620002a2565b5050506001600160a01b038116620000cd57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000d88162000134565b506001600855600b80546001600160a01b0319166001600160a01b03858116919091179091558216600160a01b6001600160601b0383160217600a556009805490600062000126836200036e565b919050555050505062000396565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200019e57600080fd5b919050565b600080600060608486031215620001b957600080fd5b620001c48462000186565b9250620001d46020850162000186565b60408501519092506001600160601b0381168114620001f257600080fd5b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200022857607f821691505b6020821081036200024957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200029d57600081815260208120601f850160051c81016020861015620002785750805b601f850160051c820191505b81811015620002995782815560010162000284565b5050505b505050565b81516001600160401b03811115620002be57620002be620001fd565b620002d681620002cf845462000213565b846200024f565b602080601f8311600181146200030e5760008415620002f55750858301515b600019600386901b1c1916600185901b17855562000299565b600085815260208120601f198616915b828110156200033f578886015182559484019460019091019084016200031e565b50858210156200035e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000600182016200038f57634e487b7160e01b600052601160045260246000fd5b5060010190565b6136d180620003a66000396000f3fe608060405234801561001057600080fd5b506004361061025e5760003560e01c806370bb0a1611610146578063bd26ed33116100c3578063d90d0ee611610087578063d90d0ee6146105a5578063da104da2146105ca578063e5dd281b146105ea578063e985e9c51461060c578063f2fde38b1461061f578063ff8ca4941461063257600080fd5b8063bd26ed3314610537578063bec429db1461054a578063c4e4ae8a1461055d578063c84cfcbb14610570578063c87b56dd1461059257600080fd5b8063a1b1eede1161010a578063a1b1eede146104cb578063a22cb465146104de578063a230c524146104f1578063ae99aa3c14610504578063b88d4fde1461052457600080fd5b806370bb0a1614610483578063715018a6146104965780638423df791461049e5780638da5cb5b146104b257806395d89b41146104c357600080fd5b80631d0431fd116101df57806342842e0e116101a357806342842e0e146103eb578063504a5983146103fe578063543a9eb9146104275780635967ff8b1461044a5780636352211e1461045d57806370a082311461047057600080fd5b80631d0431fd1461036d57806323b872dd146103805780632a55205a1461039357806331062623146103c55780633363f61f146103d857600080fd5b80630f837c5a116102265780630f837c5a146102f357806314d4aecc1461030657806318160ddd1461033f5780631928b7c3146103475780631ba538cd1461035a57600080fd5b806301ffc9a71461026357806302fa7c471461028b57806306fdde03146102a0578063081812fc146102b5578063095ea7b3146102e0575b600080fd5b610276610271366004612cc0565b610660565b60405190151581526020015b60405180910390f35b61029e610299366004612cf9565b61068b565b005b6102a86106b3565b6040516102829190612d8c565b6102c86102c3366004612d9f565b610745565b6040516001600160a01b039091168152602001610282565b61029e6102ee366004612db8565b61076e565b61029e610301366004612d9f565b61077d565b610331610314366004612e8e565b8051602081830181018051600f8252928201919093012091525481565b604051908152602001610282565b61033161097e565b61029e610355366004612ec3565b610994565b600b546102c8906001600160a01b031681565b61029e61037b366004612eed565b6109ee565b61029e61038e366004612f10565b610a9a565b6103a66103a1366004612f4c565b610b25565b604080516001600160a01b039093168352602083019190915201610282565b61029e6103d3366004612f7e565b610b98565b61029e6103e6366004612d9f565b610bf8565b61029e6103f9366004612f10565b610c80565b61033161040c366004612ec3565b6001600160a01b03166000908152600e602052604090205490565b610276610435366004612ec3565b600c6020526000908152604090205460ff1681565b61029e610458366004612d9f565b610ca0565b6102c861046b366004612d9f565b610d64565b61033161047e366004612ec3565b610d6f565b61029e610491366004612fa8565b610db7565b61029e610e17565b600b5461027690600160a01b900460ff1681565b6007546001600160a01b03166102c8565b6102a8610e2b565b6103316104d9366004612fc3565b610e3a565b61029e6104ec366004612f7e565b6111c3565b6102766104ff366004612ec3565b6111ce565b610517610512366004612d9f565b61120e565b60405161028291906130e7565b61029e610532366004613160565b611539565b61029e6105453660046131d0565b611551565b61029e610558366004612d9f565b6117f9565b61029e61056b366004612d9f565b611850565b61058361057e366004612e8e565b6118a4565b60405161028293929190613227565b6102a86105a0366004612d9f565b611c4e565b6105b86105b3366004612d9f565b611c59565b6040516102829695949392919061324c565b6103316105d8366004612ec3565b600e6020526000908152604090205481565b6105fd6105f8366004612e8e565b611f06565b604051610282939291906132a2565b61027661061a3660046132c3565b6121a8565b61029e61062d366004612ec3565b6121d6565b610276610640366004612e8e565b805160208183018101805160108252928201919093012091525460ff1681565b60006001600160e01b0319821663152a902d60e11b1480610685575061068582612214565b92915050565b610693612239565b6001600160601b0316600160a01b026001600160a01b0390911617600a55565b6060600080546106c2906132ed565b80601f01602080910402602001604051908101604052809291908181526020018280546106ee906132ed565b801561073b5780601f106107105761010080835404028352916020019161073b565b820191906000526020600020905b81548152906001019060200180831161071e57829003601f168201915b5050505050905090565b600061075082612266565b506000828152600460205260409020546001600160a01b0316610685565b61077982823361229e565b5050565b610785612239565b6000610790826122ab565b6001600160a01b0316036107bf5760405162461bcd60e51b81526004016107b690613327565b60405180910390fd5b6000818152600d602052604090206009015460ff166107f05760405162461bcd60e51b81526004016107b690613355565b6000818152600d60205260408120600401805461080c906132ed565b80601f0160208091040260200160405190810160405280929190818152602001828054610838906132ed565b80156108855780601f1061085a57610100808354040283529160200191610885565b820191906000526020600020905b81548152906001019060200180831161086857829003601f168201915b5050506000858152600d6020526040812093945060049093019291506108ad90508282612bec565b6108bb600183016000612bec565b60006002830181905560038301805460ff191690556108de906004840190612bec565b50506000828152600d602052604090819020600901805460ff1916905551600f9061090a90839061338a565b90815260200160405180910390206000905560108160405161092c919061338a565b908152604051908190036020018120805460ff1916905582907f879f2ab7f172ee2f8d536629f4f9156d7d4bb907995cd81e3d4ce0dbab8cd86190610972908490612d8c565b60405180910390a25050565b6000600160095461098f91906133bc565b905090565b61099c612239565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f808ec13129987deb49ec337ab895a2cf7af16a4d0d55a51ddc054e2c7fb2515b90600090a35050565b6109f6612239565b6000610a01836122ab565b6001600160a01b031603610a275760405162461bcd60e51b81526004016107b690613327565b6000828152600d60205260409020805460ff811691839160ff19166001836003811115610a5657610a56613048565b0217905550827f236430f4b571218941e190e042fd33bb0183ee65bab331e1490515c0de630fae8284604051610a8d9291906133cf565b60405180910390a2505050565b6001600160a01b038216610ac457604051633250574960e11b8152600060048201526024016107b6565b6000610ad18383336122c6565b9050836001600160a01b0316816001600160a01b031614610b1f576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016107b6565b50505050565b60008080610b32856122ab565b6001600160a01b031603610b585760405162461bcd60e51b81526004016107b690613327565b600a546001600160a01b038116925061271090610b8590600160a01b90046001600160601b0316856133ea565b610b8f9190613401565b90509250929050565b610ba0612239565b6001600160a01b0382166000818152600c6020908152604091829020805460ff191685151590811790915591519182527fccd3ed4a44faf3e09991dbb052548b2f73fdd2a8da198e2412a4dff80dacdd5b9101610972565b610c00612239565b6000610c0b826122ab565b6001600160a01b031603610c315760405162461bcd60e51b81526004016107b690613327565b6000818152600d602052604090206009015460ff16610c625760405162461bcd60e51b81526004016107b690613355565b6000908152600d60205260409020600701805460ff19166001179055565b610c9b83838360405180602001604052806000815250611539565b505050565b610ca8612239565b6000610cb3826122ab565b6001600160a01b031603610cd95760405162461bcd60e51b81526004016107b690613327565b6000818152600d602052604090206009015460ff16610d0a5760405162461bcd60e51b81526004016107b690613355565b6000818152600d60205260409081902060078101805460ff19169055905182917f012cdb3b117ab46b8ab2f8e7f38e6b3d8a51b3b3fd3188dd781ba38df5b2309e91610d599160040190613423565b60405180910390a250565b600061068582612266565b60006001600160a01b038216610d9b576040516322718ad960e21b8152600060048201526024016107b6565b506001600160a01b031660009081526003602052604090205490565b610dbf612239565b600b8054821515600160a01b0260ff60a01b199091161790556040517f2da74f794b62c41386dee79743b63d866355e0e0ae2a8d97aacb2ff5b7e1549b90610e0c90831515815260200190565b60405180910390a150565b610e1f612239565b610e2960006123ba565b565b6060600180546106c2906132ed565b600b546000906001600160a01b0316331480610e6057506007546001600160a01b031633145b610ea55760405162461bcd60e51b8152602060048201526016602482015275139bdd08185d5d1a1bdc9a5e9959081d1bc81b5a5b9d60521b60448201526064016107b6565b610ead61240c565b6001600160a01b038516610f035760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f74206d696e7420746f207a65726f2061646472657373000000000060448201526064016107b6565b6001600160a01b0385166000908152600e602052604090205415610f695760405162461bcd60e51b815260206004820152601a60248201527f4d656d62657220616c726561647920686173206120746f6b656e00000000000060448201526064016107b6565b6000825111610fba5760405162461bcd60e51b815260206004820152601960248201527f546f6b656e205552492063616e6e6f7420626520656d7074790000000000000060448201526064016107b6565b600980549081906000610fcc836134ae565b9190505550610fdb8682612436565b610fe58184612450565b6040518060c0016040528086600381111561100257611002613048565b815242602080830191909152604080830188905260016060808501829052825160c081018452600060a080830182815283528551808801875282815283880152828601829052928201819052845180870186528181526080838101919091528701919091529401849052858452600d9092529091208251815491929091839160ff199091169083600381111561109a5761109a613048565b021790555060208201516001820155604082015160028201906110bd908261350d565b50606082015160038201805460ff191691151591909117905560808201518051600483019081906110ee908261350d565b5060208201516001820190611103908261350d565b5060408201516002820155606082015160038201805460ff19169115159190911790556080820151600482019061113a908261350d565b50505060a091909101516009909101805460ff19169115159190911790556001600160a01b0386166000818152600e6020526040908190208390555182907f520483995c63af27f2b1c21cb5c2d5138f865c88a39aeba56a8756453df44acb906111a790899089906135cd565b60405180910390a390506111bb6001600855565b949350505050565b6107793383836124a0565b6001600160a01b0381166000908152600e6020526040812054801580159061120757506000818152600d602052604090206003015460ff165b9392505050565b611216612c26565b6000611221836122ab565b6001600160a01b0316036112475760405162461bcd60e51b81526004016107b690613327565b6000828152600d602052604090819020815160c081019092528054829060ff16600381111561127857611278613048565b600381111561128957611289613048565b8152602001600182015481526020016002820180546112a7906132ed565b80601f01602080910402602001604051908101604052809291908181526020018280546112d3906132ed565b80156113205780601f106112f557610100808354040283529160200191611320565b820191906000526020600020905b81548152906001019060200180831161130357829003601f168201915b5050509183525050600382015460ff16151560208201526040805160a081018252600484018054929093019290918290829061135b906132ed565b80601f0160208091040260200160405190810160405280929190818152602001828054611387906132ed565b80156113d45780601f106113a9576101008083540402835291602001916113d4565b820191906000526020600020905b8154815290600101906020018083116113b757829003601f168201915b505050505081526020016001820180546113ed906132ed565b80601f0160208091040260200160405190810160405280929190818152602001828054611419906132ed565b80156114665780601f1061143b57610100808354040283529160200191611466565b820191906000526020600020905b81548152906001019060200180831161144957829003601f168201915b505050918352505060028201546020820152600382015460ff161515604082015260048201805460609092019161149c906132ed565b80601f01602080910402602001604051908101604052809291908181526020018280546114c8906132ed565b80156115155780601f106114ea57610100808354040283529160200191611515565b820191906000526020600020905b8154815290600101906020018083116114f857829003601f168201915b5050509190925250505081526009919091015460ff16151560209091015292915050565b611544848484610a9a565b610b1f338585858561253f565b611559612239565b6000611564856122ab565b6001600160a01b03160361158a5760405162461bcd60e51b81526004016107b690613327565b60008351116115db5760405162461bcd60e51b815260206004820152601760248201527f436172642049442063616e6e6f7420626520656d70747900000000000000000060448201526064016107b6565b6010836040516115eb919061338a565b9081526040519081900360200190205460ff161561164b5760405162461bcd60e51b815260206004820152601760248201527f4e4643206361726420616c72656164792065786973747300000000000000000060448201526064016107b6565b6000848152600d602052604090206009015460ff16156116ad5760405162461bcd60e51b815260206004820152601e60248201527f4d656d62657220616c72656164792068617320616e204e46432063617264000060448201526064016107b6565b6040805160a0810182528481526020808201859052428284015260016060830152608082018490526000878152600d90915291909120815160049091019081906116f7908261350d565b506020820151600182019061170c908261350d565b5060408201516002820155606082015160038201805460ff191691151591909117905560808201516004820190611743908261350d565b5050506000848152600d602052604090819020600901805460ff19166001179055518490600f9061177590869061338a565b9081526020016040518091039020819055506001601084604051611799919061338a565b908152604051908190036020018120805492151560ff199093169290921790915584907fad6d9c64a14d0fe26fe397f694c96f78a370d5e77d522989dfd8e876fed0dff7906117eb90869086906135ed565b60405180910390a250505050565b611801612239565b600061180c826122ab565b6001600160a01b0316036118325760405162461bcd60e51b81526004016107b690613327565b6000908152600d60205260409020600301805460ff19166001179055565b611858612239565b6000611863826122ab565b6001600160a01b0316036118895760405162461bcd60e51b81526004016107b690613327565b6000908152600d60205260409020600301805460ff19169055565b60008060006010846040516118b9919061338a565b9081526040519081900360200190205460ff166118de57506000915081905080611c47565b6000600f856040516118f0919061338a565b9081526040805160209281900383018120546000818152600d90945282842060c083019093528254909450909190829060ff16600381111561193457611934613048565b600381111561194557611945613048565b815260200160018201548152602001600282018054611963906132ed565b80601f016020809104026020016040519081016040528092919081815260200182805461198f906132ed565b80156119dc5780601f106119b1576101008083540402835291602001916119dc565b820191906000526020600020905b8154815290600101906020018083116119bf57829003601f168201915b5050509183525050600382015460ff16151560208201526040805160a0810182526004840180549290930192909182908290611a17906132ed565b80601f0160208091040260200160405190810160405280929190818152602001828054611a43906132ed565b8015611a905780601f10611a6557610100808354040283529160200191611a90565b820191906000526020600020905b815481529060010190602001808311611a7357829003601f168201915b50505050508152602001600182018054611aa9906132ed565b80601f0160208091040260200160405190810160405280929190818152602001828054611ad5906132ed565b8015611b225780601f10611af757610100808354040283529160200191611b22565b820191906000526020600020905b815481529060010190602001808311611b0557829003601f168201915b505050918352505060028201546020820152600382015460ff1615156040820152600482018054606090920191611b58906132ed565b80601f0160208091040260200160405190810160405280929190818152602001828054611b84906132ed565b8015611bd15780601f10611ba657610100808354040283529160200191611bd1565b820191906000526020600020905b815481529060010190602001808311611bb457829003601f168201915b5050509190925250505081526009919091015460ff16151560209091015260608101519091501580611c0557508060a00151155b80611c165750806080015160600151155b15611c2d5760008060009450945094505050611c47565b6000611c3883610d64565b91516001965091945090925050505b9193909250565b60606106858261266a565b600d6020526000908152604090208054600182015460028301805460ff909316939192611c85906132ed565b80601f0160208091040260200160405190810160405280929190818152602001828054611cb1906132ed565b8015611cfe5780601f10611cd357610100808354040283529160200191611cfe565b820191906000526020600020905b815481529060010190602001808311611ce157829003601f168201915b5050505050908060030160009054906101000a900460ff1690806004016040518060a0016040529081600082018054611d36906132ed565b80601f0160208091040260200160405190810160405280929190818152602001828054611d62906132ed565b8015611daf5780601f10611d8457610100808354040283529160200191611daf565b820191906000526020600020905b815481529060010190602001808311611d9257829003601f168201915b50505050508152602001600182018054611dc8906132ed565b80601f0160208091040260200160405190810160405280929190818152602001828054611df4906132ed565b8015611e415780601f10611e1657610100808354040283529160200191611e41565b820191906000526020600020905b815481529060010190602001808311611e2457829003601f168201915b505050918352505060028201546020820152600382015460ff1615156040820152600482018054606090920191611e77906132ed565b80601f0160208091040260200160405190810160405280929190818152602001828054611ea3906132ed565b8015611ef05780601f10611ec557610100808354040283529160200191611ef0565b820191906000526020600020905b815481529060010190602001808311611ed357829003601f168201915b5050509190925250505060099091015460ff1686565b6000806060601084604051611f1b919061338a565b9081526040519081900360200190205460ff16611f7a5760405162461bcd60e51b815260206004820152601760248201527f4e4643206361726420646f6573206e6f7420657869737400000000000000000060448201526064016107b6565b600f84604051611f8a919061338a565b90815260200160405180910390205492506000600d60008581526020019081526020016000206004016040518060a0016040529081600082018054611fce906132ed565b80601f0160208091040260200160405190810160405280929190818152602001828054611ffa906132ed565b80156120475780601f1061201c57610100808354040283529160200191612047565b820191906000526020600020905b81548152906001019060200180831161202a57829003601f168201915b50505050508152602001600182018054612060906132ed565b80601f016020809104026020016040519081016040528092919081815260200182805461208c906132ed565b80156120d95780601f106120ae576101008083540402835291602001916120d9565b820191906000526020600020905b8154815290600101906020018083116120bc57829003601f168201915b505050918352505060028201546020820152600382015460ff161515604082015260048201805460609092019161210f906132ed565b80601f016020809104026020016040519081016040528092919081815260200182805461213b906132ed565b80156121885780601f1061215d57610100808354040283529160200191612188565b820191906000526020600020905b81548152906001019060200180831161216b57829003601f168201915b505050919092525050506060810151608090910151949690955092505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6121de612239565b6001600160a01b03811661220857604051631e4fbdf760e01b8152600060048201526024016107b6565b612211816123ba565b50565b60006001600160e01b03198216632483248360e11b1480610685575061068582612773565b6007546001600160a01b03163314610e295760405163118cdaa760e01b81523360048201526024016107b6565b600080612272836122ab565b90506001600160a01b03811661068557604051637e27328960e01b8152600481018490526024016107b6565b610c9b83838360016127c3565b6000908152600260205260409020546001600160a01b031690565b6000806122d2846122ab565b90506001600160a01b038316156122ee576122ee8184866128c9565b6001600160a01b0381161561232c5761230b6000856000806127c3565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b0385161561235b576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60026008540361242f57604051633ee5aeb560e01b815260040160405180910390fd5b6002600855565b61077982826040518060200160405280600081525061292d565b6000828152600660205260409020612468828261350d565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b6001600160a01b0382166124d257604051630b61174360e31b81526001600160a01b03831660048201526024016107b6565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561266357604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290612581908890889087908790600401613612565b6020604051808303816000875af19250505080156125bc575060408051601f3d908101601f191682019092526125b99181019061364f565b60015b612625573d8080156125ea576040519150601f19603f3d011682016040523d82523d6000602084013e6125ef565b606091505b50805160000361261d57604051633250574960e11b81526001600160a01b03851660048201526024016107b6565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b1461266157604051633250574960e11b81526001600160a01b03851660048201526024016107b6565b505b5050505050565b606061267582612266565b506000828152600660205260408120805461268f906132ed565b80601f01602080910402602001604051908101604052809291908181526020018280546126bb906132ed565b80156127085780601f106126dd57610100808354040283529160200191612708565b820191906000526020600020905b8154815290600101906020018083116126eb57829003601f168201915b50505050509050600061272660408051602081019091526000815290565b90508051600003612738575092915050565b81511561276a57808260405160200161275292919061366c565b60405160208183030381529060405292505050919050565b6111bb84612945565b60006001600160e01b031982166380ac58cd60e01b14806127a457506001600160e01b03198216635b5e139f60e01b145b8061068557506301ffc9a760e01b6001600160e01b0319831614610685565b80806127d757506001600160a01b03821615155b156128995760006127e784612266565b90506001600160a01b038316158015906128135750826001600160a01b0316816001600160a01b031614155b8015612826575061282481846121a8565b155b1561284f5760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016107b6565b81156128975783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6128d48383836129b9565b610c9b576001600160a01b03831661290257604051637e27328960e01b8152600481018290526024016107b6565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016107b6565b6129378383612a1c565b610c9b33600085858561253f565b606061295082612266565b50600061296860408051602081019091526000815290565b905060008151116129885760405180602001604052806000815250611207565b8061299284612a81565b6040516020016129a392919061366c565b6040516020818303038152906040529392505050565b60006001600160a01b038316158015906111bb5750826001600160a01b0316846001600160a01b031614806129f357506129f384846121a8565b806111bb5750506000908152600460205260409020546001600160a01b03908116911614919050565b6001600160a01b038216612a4657604051633250574960e11b8152600060048201526024016107b6565b6000612a54838360006122c6565b90506001600160a01b03811615610c9b576040516339e3563760e11b8152600060048201526024016107b6565b60606000612a8e83612b14565b600101905060008167ffffffffffffffff811115612aae57612aae612de2565b6040519080825280601f01601f191660200182016040528015612ad8576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084612ae257509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310612b535772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310612b7f576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310612b9d57662386f26fc10000830492506010015b6305f5e1008310612bb5576305f5e100830492506008015b6127108310612bc957612710830492506004015b60648310612bdb576064830492506002015b600a83106106855760010192915050565b508054612bf8906132ed565b6000825580601f10612c08575050565b601f0160209004906000526020600020908101906122119190612c91565b6040805160c0810190915280600081526020016000815260200160608152602001600015158152602001612c846040518060a00160405280606081526020016060815260200160008152602001600015158152602001606081525090565b8152600060209091015290565b5b80821115612ca65760008155600101612c92565b5090565b6001600160e01b03198116811461221157600080fd5b600060208284031215612cd257600080fd5b813561120781612caa565b80356001600160a01b0381168114612cf457600080fd5b919050565b60008060408385031215612d0c57600080fd5b612d1583612cdd565b915060208301356001600160601b0381168114612d3157600080fd5b809150509250929050565b60005b83811015612d57578181015183820152602001612d3f565b50506000910152565b60008151808452612d78816020860160208601612d3c565b601f01601f19169290920160200192915050565b6020815260006112076020830184612d60565b600060208284031215612db157600080fd5b5035919050565b60008060408385031215612dcb57600080fd5b612dd483612cdd565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115612e1357612e13612de2565b604051601f8501601f19908116603f01168101908282118183101715612e3b57612e3b612de2565b81604052809350858152868686011115612e5457600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112612e7f57600080fd5b61120783833560208501612df8565b600060208284031215612ea057600080fd5b813567ffffffffffffffff811115612eb757600080fd5b6111bb84828501612e6e565b600060208284031215612ed557600080fd5b61120782612cdd565b803560048110612cf457600080fd5b60008060408385031215612f0057600080fd5b82359150610b8f60208401612ede565b600080600060608486031215612f2557600080fd5b612f2e84612cdd565b9250612f3c60208501612cdd565b9150604084013590509250925092565b60008060408385031215612f5f57600080fd5b50508035926020909101359150565b80358015158114612cf457600080fd5b60008060408385031215612f9157600080fd5b612f9a83612cdd565b9150610b8f60208401612f6e565b600060208284031215612fba57600080fd5b61120782612f6e565b60008060008060808587031215612fd957600080fd5b612fe285612cdd565b9350612ff060208601612ede565b9250604085013567ffffffffffffffff8082111561300d57600080fd5b61301988838901612e6e565b9350606087013591508082111561302f57600080fd5b5061303c87828801612e6e565b91505092959194509250565b634e487b7160e01b600052602160045260246000fd5b6004811061307c57634e487b7160e01b600052602160045260246000fd5b9052565b6000815160a0845261309560a0850182612d60565b9050602083015184820360208601526130ae8282612d60565b91505060408301516040850152606083015115156060850152608083015184820360808601526130de8282612d60565b95945050505050565b602081526130f960208201835161305e565b602082015160408201526000604083015160c0606084015261311e60e0840182612d60565b90506060840151151560808401526080840151601f198483030160a08501526131478282613080565b91505060a0840151151560c08401528091505092915050565b6000806000806080858703121561317657600080fd5b61317f85612cdd565b935061318d60208601612cdd565b925060408501359150606085013567ffffffffffffffff8111156131b057600080fd5b8501601f810187136131c157600080fd5b61303c87823560208401612df8565b600080600080608085870312156131e657600080fd5b84359350602085013567ffffffffffffffff8082111561320557600080fd5b61321188838901612e6e565b9450604087013591508082111561300d57600080fd5b83151581526001600160a01b0383166020820152606081016111bb604083018461305e565b613256818861305e565b85602082015260c06040820152600061327260c0830187612d60565b8515156060840152828103608084015261328c8186613080565b91505082151560a0830152979650505050505050565b83815282151560208201526060604082015260006130de6060830184612d60565b600080604083850312156132d657600080fd5b6132df83612cdd565b9150610b8f60208401612cdd565b600181811c9082168061330157607f821691505b60208210810361332157634e487b7160e01b600052602260045260246000fd5b50919050565b602080825260149082015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b604082015260600190565b6020808252818101527f4d656d62657220646f6573206e6f74206861766520616e204e46432063617264604082015260600190565b6000825161339c818460208701612d3c565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610685576106856133a6565b604081016133dd828561305e565b611207602083018461305e565b8082028115828204841417610685576106856133a6565b60008261341e57634e487b7160e01b600052601260045260246000fd5b500490565b6000602080835260008454613437816132ed565b808487015260406001808416600081146134585760018114613472576134a0565b60ff1985168984015283151560051b8901830195506134a0565b896000528660002060005b858110156134985781548b820186015290830190880161347d565b8a0184019650505b509398975050505050505050565b6000600182016134c0576134c06133a6565b5060010190565b601f821115610c9b57600081815260208120601f850160051c810160208610156134ee5750805b601f850160051c820191505b81811015612661578281556001016134fa565b815167ffffffffffffffff81111561352757613527612de2565b61353b8161353584546132ed565b846134c7565b602080601f83116001811461357057600084156135585750858301515b600019600386901b1c1916600185901b178555612661565b600085815260208120601f198616915b8281101561359f57888601518255948401946001909101908401613580565b50858210156135bd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6135d7818461305e565b6040602082015260006111bb6040830184612d60565b6040815260006136006040830185612d60565b82810360208401526130de8185612d60565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061364590830184612d60565b9695505050505050565b60006020828403121561366157600080fd5b815161120781612caa565b6000835161367e818460208801612d3c565b835190830190613692818360208801612d3c565b0194935050505056fea264697066735822122016fc176007172536f15d4f4f3c575ad75e3f44e0fac2956becd0d794f0aa718c64736f6c634300081400334c616b652053746f636b746f6e20596163687420436c7562204d656d62657273686970","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3A9A CODESIZE SUB DUP1 PUSH3 0x3A9A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x47 SWAP2 PUSH3 0x1A3 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x3A77 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x4C5359434D PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH3 0x8C DUP4 DUP3 PUSH3 0x2A2 JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0x9B DUP3 DUP3 PUSH3 0x2A2 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xCD JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xD8 DUP2 PUSH3 0x134 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x8 SSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP3 AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND MUL OR PUSH1 0xA SSTORE PUSH1 0x9 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH3 0x126 DUP4 PUSH3 0x36E JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP PUSH3 0x396 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1C4 DUP5 PUSH3 0x186 JUMP JUMPDEST SWAP3 POP PUSH3 0x1D4 PUSH1 0x20 DUP6 ADD PUSH3 0x186 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x228 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x249 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x29D JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x278 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x299 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x284 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2BE JUMPI PUSH3 0x2BE PUSH3 0x1FD JUMP JUMPDEST PUSH3 0x2D6 DUP2 PUSH3 0x2CF DUP5 SLOAD PUSH3 0x213 JUMP JUMPDEST DUP5 PUSH3 0x24F JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x30E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x2F5 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x299 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x33F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x31E JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x35E JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH3 0x38F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x36D1 DUP1 PUSH3 0x3A6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x25E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70BB0A16 GT PUSH2 0x146 JUMPI DUP1 PUSH4 0xBD26ED33 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xD90D0EE6 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xD90D0EE6 EQ PUSH2 0x5A5 JUMPI DUP1 PUSH4 0xDA104DA2 EQ PUSH2 0x5CA JUMPI DUP1 PUSH4 0xE5DD281B EQ PUSH2 0x5EA JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x60C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x61F JUMPI DUP1 PUSH4 0xFF8CA494 EQ PUSH2 0x632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBD26ED33 EQ PUSH2 0x537 JUMPI DUP1 PUSH4 0xBEC429DB EQ PUSH2 0x54A JUMPI DUP1 PUSH4 0xC4E4AE8A EQ PUSH2 0x55D JUMPI DUP1 PUSH4 0xC84CFCBB EQ PUSH2 0x570 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA1B1EEDE GT PUSH2 0x10A JUMPI DUP1 PUSH4 0xA1B1EEDE EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0xA230C524 EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0xAE99AA3C EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70BB0A16 EQ PUSH2 0x483 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0x8423DF79 EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1D0431FD GT PUSH2 0x1DF JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0x504A5983 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x543A9EB9 EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0x5967FF8B EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1D0431FD EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0x31062623 EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x3363F61F EQ PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xF837C5A GT PUSH2 0x226 JUMPI DUP1 PUSH4 0xF837C5A EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x14D4AECC EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x1928B7C3 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x1BA538CD EQ PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x2FA7C47 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2E0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x276 PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CC0 JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CF9 JUMP JUMPDEST PUSH2 0x68B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A8 PUSH2 0x6B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x2D8C JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9F JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x282 JUMP JUMPDEST PUSH2 0x29E PUSH2 0x2EE CALLDATASIZE PUSH1 0x4 PUSH2 0x2DB8 JUMP JUMPDEST PUSH2 0x76E JUMP JUMPDEST PUSH2 0x29E PUSH2 0x301 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9F JUMP JUMPDEST PUSH2 0x77D JUMP JUMPDEST PUSH2 0x331 PUSH2 0x314 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E8E JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0xF DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x282 JUMP JUMPDEST PUSH2 0x331 PUSH2 0x97E JUMP JUMPDEST PUSH2 0x29E PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC3 JUMP JUMPDEST PUSH2 0x994 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x2C8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x29E PUSH2 0x37B CALLDATASIZE PUSH1 0x4 PUSH2 0x2EED JUMP JUMPDEST PUSH2 0x9EE JUMP JUMPDEST PUSH2 0x29E PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x2F10 JUMP JUMPDEST PUSH2 0xA9A JUMP JUMPDEST PUSH2 0x3A6 PUSH2 0x3A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F4C JUMP JUMPDEST PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x282 JUMP JUMPDEST PUSH2 0x29E PUSH2 0x3D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F7E JUMP JUMPDEST PUSH2 0xB98 JUMP JUMPDEST PUSH2 0x29E PUSH2 0x3E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9F JUMP JUMPDEST PUSH2 0xBF8 JUMP JUMPDEST PUSH2 0x29E PUSH2 0x3F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F10 JUMP JUMPDEST PUSH2 0xC80 JUMP JUMPDEST PUSH2 0x331 PUSH2 0x40C CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x276 PUSH2 0x435 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC3 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x29E PUSH2 0x458 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9F JUMP JUMPDEST PUSH2 0xCA0 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x46B CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9F JUMP JUMPDEST PUSH2 0xD64 JUMP JUMPDEST PUSH2 0x331 PUSH2 0x47E CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC3 JUMP JUMPDEST PUSH2 0xD6F JUMP JUMPDEST PUSH2 0x29E PUSH2 0x491 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FA8 JUMP JUMPDEST PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0x29E PUSH2 0xE17 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x276 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2C8 JUMP JUMPDEST PUSH2 0x2A8 PUSH2 0xE2B JUMP JUMPDEST PUSH2 0x331 PUSH2 0x4D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FC3 JUMP JUMPDEST PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x29E PUSH2 0x4EC CALLDATASIZE PUSH1 0x4 PUSH2 0x2F7E JUMP JUMPDEST PUSH2 0x11C3 JUMP JUMPDEST PUSH2 0x276 PUSH2 0x4FF CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC3 JUMP JUMPDEST PUSH2 0x11CE JUMP JUMPDEST PUSH2 0x517 PUSH2 0x512 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9F JUMP JUMPDEST PUSH2 0x120E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x30E7 JUMP JUMPDEST PUSH2 0x29E PUSH2 0x532 CALLDATASIZE PUSH1 0x4 PUSH2 0x3160 JUMP JUMPDEST PUSH2 0x1539 JUMP JUMPDEST PUSH2 0x29E PUSH2 0x545 CALLDATASIZE PUSH1 0x4 PUSH2 0x31D0 JUMP JUMPDEST PUSH2 0x1551 JUMP JUMPDEST PUSH2 0x29E PUSH2 0x558 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9F JUMP JUMPDEST PUSH2 0x17F9 JUMP JUMPDEST PUSH2 0x29E PUSH2 0x56B CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9F JUMP JUMPDEST PUSH2 0x1850 JUMP JUMPDEST PUSH2 0x583 PUSH2 0x57E CALLDATASIZE PUSH1 0x4 PUSH2 0x2E8E JUMP JUMPDEST PUSH2 0x18A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3227 JUMP JUMPDEST PUSH2 0x2A8 PUSH2 0x5A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9F JUMP JUMPDEST PUSH2 0x1C4E JUMP JUMPDEST PUSH2 0x5B8 PUSH2 0x5B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9F JUMP JUMPDEST PUSH2 0x1C59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x324C JUMP JUMPDEST PUSH2 0x331 PUSH2 0x5D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC3 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5FD PUSH2 0x5F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E8E JUMP JUMPDEST PUSH2 0x1F06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32A2 JUMP JUMPDEST PUSH2 0x276 PUSH2 0x61A CALLDATASIZE PUSH1 0x4 PUSH2 0x32C3 JUMP JUMPDEST PUSH2 0x21A8 JUMP JUMPDEST PUSH2 0x29E PUSH2 0x62D CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC3 JUMP JUMPDEST PUSH2 0x21D6 JUMP JUMPDEST PUSH2 0x276 PUSH2 0x640 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E8E JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x10 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x152A902D PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x685 JUMPI POP PUSH2 0x685 DUP3 PUSH2 0x2214 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x693 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x6C2 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6EE SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x73B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x710 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x73B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x71E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x750 DUP3 PUSH2 0x2266 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x685 JUMP JUMPDEST PUSH2 0x779 DUP3 DUP3 CALLER PUSH2 0x229E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x785 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x790 DUP3 PUSH2 0x22AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x7BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x3327 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x9 ADD SLOAD PUSH1 0xFF AND PUSH2 0x7F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x3355 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x80C SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x838 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x885 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x85A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x885 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x868 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP4 SWAP5 POP PUSH1 0x4 SWAP1 SWAP4 ADD SWAP3 SWAP2 POP PUSH2 0x8AD SWAP1 POP DUP3 DUP3 PUSH2 0x2BEC JUMP JUMPDEST PUSH2 0x8BB PUSH1 0x1 DUP4 ADD PUSH1 0x0 PUSH2 0x2BEC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP4 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x8DE SWAP1 PUSH1 0x4 DUP5 ADD SWAP1 PUSH2 0x2BEC JUMP JUMPDEST POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x9 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH1 0xF SWAP1 PUSH2 0x90A SWAP1 DUP4 SWAP1 PUSH2 0x338A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x10 DUP2 PUSH1 0x40 MLOAD PUSH2 0x92C SWAP2 SWAP1 PUSH2 0x338A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP3 SWAP1 PUSH32 0x879F2AB7F172EE2F8D536629F4F9156D7D4BB907995CD81E3D4CE0DBAB8CD861 SWAP1 PUSH2 0x972 SWAP1 DUP5 SWAP1 PUSH2 0x2D8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x9 SLOAD PUSH2 0x98F SWAP2 SWAP1 PUSH2 0x33BC JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x99C PUSH2 0x2239 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x808EC13129987DEB49EC337AB895A2CF7AF16A4D0D55A51DDC054E2C7FB2515B SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x9F6 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA01 DUP4 PUSH2 0x22AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xA27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x3327 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND SWAP2 DUP4 SWAP2 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA56 JUMPI PUSH2 0xA56 PUSH2 0x3048 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP DUP3 PUSH32 0x236430F4B571218941E190E042FD33BB0183EE65BAB331E1490515C0DE630FAE DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA8D SWAP3 SWAP2 SWAP1 PUSH2 0x33CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAC4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAD1 DUP4 DUP4 CALLER PUSH2 0x22C6 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB1F JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0xB32 DUP6 PUSH2 0x22AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xB58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x3327 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 POP PUSH2 0x2710 SWAP1 PUSH2 0xB85 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP6 PUSH2 0x33EA JUMP JUMPDEST PUSH2 0xB8F SWAP2 SWAP1 PUSH2 0x3401 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA0 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xCCD3ED4A44FAF3E09991DBB052548B2F73FDD2A8DA198E2412A4DFF80DACDD5B SWAP2 ADD PUSH2 0x972 JUMP JUMPDEST PUSH2 0xC00 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC0B DUP3 PUSH2 0x22AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x3327 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x9 ADD SLOAD PUSH1 0xFF AND PUSH2 0xC62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x3355 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xC9B DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1539 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xCA8 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCB3 DUP3 PUSH2 0x22AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xCD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x3327 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x9 ADD SLOAD PUSH1 0xFF AND PUSH2 0xD0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x3355 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x7 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD DUP3 SWAP2 PUSH32 0x12CDB3B117AB46B8AB2F8E7F38E6B3D8A51B3B3FD3188DD781BA38DF5B2309E SWAP2 PUSH2 0xD59 SWAP2 PUSH1 0x4 ADD SWAP1 PUSH2 0x3423 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x685 DUP3 PUSH2 0x2266 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD9B JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xDBF PUSH2 0x2239 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x2DA74F794B62C41386DEE79743B63D866355E0E0AE2A8D97AACB2FF5B7E1549B SWAP1 PUSH2 0xE0C SWAP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xE1F PUSH2 0x2239 JUMP JUMPDEST PUSH2 0xE29 PUSH1 0x0 PUSH2 0x23BA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x6C2 SWAP1 PUSH2 0x32ED JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0xE60 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xEA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x139BDD08185D5D1A1BDC9A5E9959081D1BC81B5A5B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0xEAD PUSH2 0x240C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xF03 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206D696E7420746F207A65726F20616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xF69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D656D62657220616C726561647920686173206120746F6B656E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT PUSH2 0xFBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E205552492063616E6E6F7420626520656D70747900000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD SWAP1 DUP2 SWAP1 PUSH1 0x0 PUSH2 0xFCC DUP4 PUSH2 0x34AE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0xFDB DUP7 DUP3 PUSH2 0x2436 JUMP JUMPDEST PUSH2 0xFE5 DUP2 DUP5 PUSH2 0x2450 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1002 JUMPI PUSH2 0x1002 PUSH2 0x3048 JUMP JUMPDEST DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x60 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE DUP3 MLOAD PUSH1 0xC0 DUP2 ADD DUP5 MSTORE PUSH1 0x0 PUSH1 0xA0 DUP1 DUP4 ADD DUP3 DUP2 MSTORE DUP4 MSTORE DUP6 MLOAD DUP1 DUP9 ADD DUP8 MSTORE DUP3 DUP2 MSTORE DUP4 DUP9 ADD MSTORE DUP3 DUP7 ADD DUP3 SWAP1 MSTORE SWAP3 DUP3 ADD DUP2 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP8 ADD DUP7 MSTORE DUP2 DUP2 MSTORE PUSH1 0x80 DUP4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP5 ADD DUP5 SWAP1 MSTORE DUP6 DUP5 MSTORE PUSH1 0xD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP3 MLOAD DUP2 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH1 0xFF NOT SWAP1 SWAP2 AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x109A JUMPI PUSH2 0x109A PUSH2 0x3048 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x10BD SWAP1 DUP3 PUSH2 0x350D JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP1 MLOAD PUSH1 0x4 DUP4 ADD SWAP1 DUP2 SWAP1 PUSH2 0x10EE SWAP1 DUP3 PUSH2 0x350D JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x1103 SWAP1 DUP3 PUSH2 0x350D JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SWAP1 PUSH2 0x113A SWAP1 DUP3 PUSH2 0x350D JUMP JUMPDEST POP POP POP PUSH1 0xA0 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x9 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE MLOAD DUP3 SWAP1 PUSH32 0x520483995C63AF27F2B1C21CB5C2D5138F865C88A39AEBA56A8756453DF44ACB SWAP1 PUSH2 0x11A7 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH2 0x35CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP1 POP PUSH2 0x11BB PUSH1 0x1 PUSH1 0x8 SSTORE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x779 CALLER DUP4 DUP4 PUSH2 0x24A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1207 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1216 PUSH2 0x2C26 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1221 DUP4 PUSH2 0x22AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1247 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x3327 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1278 JUMPI PUSH2 0x1278 PUSH2 0x3048 JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1289 JUMPI PUSH2 0x1289 PUSH2 0x3048 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x12A7 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x12D3 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1320 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x12F5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1320 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1303 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x4 DUP5 ADD DUP1 SLOAD SWAP3 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x135B SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1387 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13D4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13A9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13D4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13B7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x13ED SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1419 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1466 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x143B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1466 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1449 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0x60 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x149C SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x14C8 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1515 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1515 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 SWAP1 SWAP3 MSTORE POP POP POP DUP2 MSTORE PUSH1 0x9 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1544 DUP5 DUP5 DUP5 PUSH2 0xA9A JUMP JUMPDEST PUSH2 0xB1F CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0x253F JUMP JUMPDEST PUSH2 0x1559 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1564 DUP6 PUSH2 0x22AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x158A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x3327 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT PUSH2 0x15DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436172642049442063616E6E6F7420626520656D707479000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x10 DUP4 PUSH1 0x40 MLOAD PUSH2 0x15EB SWAP2 SWAP1 PUSH2 0x338A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x164B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4643206361726420616C726561647920657869737473000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x9 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x16AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D656D62657220616C72656164792068617320616E204E464320636172640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE TIMESTAMP DUP3 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xD SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP2 MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SWAP1 DUP2 SWAP1 PUSH2 0x16F7 SWAP1 DUP3 PUSH2 0x350D JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x170C SWAP1 DUP3 PUSH2 0x350D JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SWAP1 PUSH2 0x1743 SWAP1 DUP3 PUSH2 0x350D JUMP JUMPDEST POP POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x9 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD DUP5 SWAP1 PUSH1 0xF SWAP1 PUSH2 0x1775 SWAP1 DUP7 SWAP1 PUSH2 0x338A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x10 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1799 SWAP2 SWAP1 PUSH2 0x338A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE DUP5 SWAP1 PUSH32 0xAD6D9C64A14D0FE26FE397F694C96F78A370D5E77D522989DFD8E876FED0DFF7 SWAP1 PUSH2 0x17EB SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x35ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x1801 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180C DUP3 PUSH2 0x22AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1832 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x3327 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1858 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1863 DUP3 PUSH2 0x22AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1889 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x3327 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x10 DUP5 PUSH1 0x40 MLOAD PUSH2 0x18B9 SWAP2 SWAP1 PUSH2 0x338A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x18DE JUMPI POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP DUP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF DUP6 PUSH1 0x40 MLOAD PUSH2 0x18F0 SWAP2 SWAP1 PUSH2 0x338A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD DUP2 KECCAK256 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD SWAP1 SWAP5 MSTORE DUP3 DUP5 KECCAK256 PUSH1 0xC0 DUP4 ADD SWAP1 SWAP4 MSTORE DUP3 SLOAD SWAP1 SWAP5 POP SWAP1 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1934 JUMPI PUSH2 0x1934 PUSH2 0x3048 JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1945 JUMPI PUSH2 0x1945 PUSH2 0x3048 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x1963 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x198F SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19DC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19B1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x19DC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19BF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x4 DUP5 ADD DUP1 SLOAD SWAP3 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x1A17 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1A43 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A90 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1A65 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A90 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A73 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x1AA9 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1AD5 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B22 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1AF7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B22 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B05 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0x60 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x1B58 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B84 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1BD1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1BA6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1BD1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1BB4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 SWAP1 SWAP3 MSTORE POP POP POP DUP2 MSTORE PUSH1 0x9 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD SWAP1 SWAP2 POP ISZERO DUP1 PUSH2 0x1C05 JUMPI POP DUP1 PUSH1 0xA0 ADD MLOAD ISZERO JUMPDEST DUP1 PUSH2 0x1C16 JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD PUSH1 0x60 ADD MLOAD ISZERO JUMPDEST ISZERO PUSH2 0x1C2D JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP5 POP SWAP5 POP SWAP5 POP POP POP PUSH2 0x1C47 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C38 DUP4 PUSH2 0xD64 JUMP JUMPDEST SWAP2 MLOAD PUSH1 0x1 SWAP7 POP SWAP2 SWAP5 POP SWAP1 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x685 DUP3 PUSH2 0x266A JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP4 AND SWAP4 SWAP2 SWAP3 PUSH2 0x1C85 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1CB1 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1CFE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1CD3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1CFE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1CE1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x1D36 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D62 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DAF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D84 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DAF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D92 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x1DC8 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DF4 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1E41 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E16 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E41 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E24 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0x60 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x1E77 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1EA3 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1EF0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1EC5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1EF0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1ED3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 SWAP1 SWAP3 MSTORE POP POP POP PUSH1 0x9 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND DUP7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x10 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1F1B SWAP2 SWAP1 PUSH2 0x338A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1F7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4643206361726420646F6573206E6F74206578697374000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0xF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1F8A SWAP2 SWAP1 PUSH2 0x338A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP3 POP PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x1FCE SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1FFA SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2047 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x201C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2047 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x202A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x2060 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x208C SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x20AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0x60 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x210F SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x213B SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2188 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x215D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2188 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x216B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 SWAP1 SWAP3 MSTORE POP POP POP PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x80 SWAP1 SWAP2 ADD MLOAD SWAP5 SWAP7 SWAP1 SWAP6 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x21DE PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2208 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x2211 DUP2 PUSH2 0x23BA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x685 JUMPI POP PUSH2 0x685 DUP3 PUSH2 0x2773 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE29 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2272 DUP4 PUSH2 0x22AB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0xC9B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x27C3 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x22D2 DUP5 PUSH2 0x22AB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x22EE JUMPI PUSH2 0x22EE DUP2 DUP5 DUP7 PUSH2 0x28C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x232C JUMPI PUSH2 0x230B PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x27C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x235B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x8 SLOAD SUB PUSH2 0x242F JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH2 0x779 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x292D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x2468 DUP3 DUP3 PUSH2 0x350D JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x24D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x2663 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x2581 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x3612 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x25BC JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x25B9 SWAP2 DUP2 ADD SWAP1 PUSH2 0x364F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2625 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x25EA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x25EF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x261D JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x2661 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2675 DUP3 PUSH2 0x2266 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x268F SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x26BB SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2708 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x26DD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2708 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26EB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x2726 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x2738 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x276A JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2752 SWAP3 SWAP2 SWAP1 PUSH2 0x366C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11BB DUP5 PUSH2 0x2945 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x27A4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x685 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x685 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x27D7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2899 JUMPI PUSH1 0x0 PUSH2 0x27E7 DUP5 PUSH2 0x2266 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2813 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2826 JUMPI POP PUSH2 0x2824 DUP2 DUP5 PUSH2 0x21A8 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x284F JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2897 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x28D4 DUP4 DUP4 DUP4 PUSH2 0x29B9 JUMP JUMPDEST PUSH2 0xC9B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2902 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x2937 DUP4 DUP4 PUSH2 0x2A1C JUMP JUMPDEST PUSH2 0xC9B CALLER PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x253F JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2950 DUP3 PUSH2 0x2266 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2968 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x2988 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1207 JUMP JUMPDEST DUP1 PUSH2 0x2992 DUP5 PUSH2 0x2A81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x29A3 SWAP3 SWAP2 SWAP1 PUSH2 0x366C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x11BB JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x29F3 JUMPI POP PUSH2 0x29F3 DUP5 DUP5 PUSH2 0x21A8 JUMP JUMPDEST DUP1 PUSH2 0x11BB JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2A46 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A54 DUP4 DUP4 PUSH1 0x0 PUSH2 0x22C6 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xC9B JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2A8E DUP4 PUSH2 0x2B14 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AAE JUMPI PUSH2 0x2AAE PUSH2 0x2DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2AD8 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x2AE2 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x2B53 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x2B7F JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x2B9D JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x2BB5 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x2BC9 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x2BDB JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x685 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x2BF8 SWAP1 PUSH2 0x32ED JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x2C08 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2211 SWAP2 SWAP1 PUSH2 0x2C91 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C84 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2CA6 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2C92 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x2211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1207 DUP2 PUSH2 0x2CAA JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2CF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D15 DUP4 PUSH2 0x2CDD JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2D31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D57 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2D3F JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2D78 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2D3C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1207 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2D60 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2DCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2DD4 DUP4 PUSH2 0x2CDD JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x2E13 JUMPI PUSH2 0x2E13 PUSH2 0x2DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2E3B JUMPI PUSH2 0x2E3B PUSH2 0x2DE2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x2E54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2E7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1207 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x2DF8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2EB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11BB DUP5 DUP3 DUP6 ADD PUSH2 0x2E6E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2ED5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1207 DUP3 PUSH2 0x2CDD JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x2CF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xB8F PUSH1 0x20 DUP5 ADD PUSH2 0x2EDE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2F25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F2E DUP5 PUSH2 0x2CDD JUMP JUMPDEST SWAP3 POP PUSH2 0x2F3C PUSH1 0x20 DUP6 ADD PUSH2 0x2CDD JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2CF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F9A DUP4 PUSH2 0x2CDD JUMP JUMPDEST SWAP2 POP PUSH2 0xB8F PUSH1 0x20 DUP5 ADD PUSH2 0x2F6E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1207 DUP3 PUSH2 0x2F6E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2FD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FE2 DUP6 PUSH2 0x2CDD JUMP JUMPDEST SWAP4 POP PUSH2 0x2FF0 PUSH1 0x20 DUP7 ADD PUSH2 0x2EDE JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x300D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3019 DUP9 DUP4 DUP10 ADD PUSH2 0x2E6E JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x302F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303C DUP8 DUP3 DUP9 ADD PUSH2 0x2E6E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x307C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0xA0 DUP5 MSTORE PUSH2 0x3095 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x2D60 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x30AE DUP3 DUP3 PUSH2 0x2D60 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x30DE DUP3 DUP3 PUSH2 0x2D60 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH2 0x30F9 PUSH1 0x20 DUP3 ADD DUP4 MLOAD PUSH2 0x305E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0xC0 PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x311E PUSH1 0xE0 DUP5 ADD DUP3 PUSH2 0x2D60 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP5 DUP4 SUB ADD PUSH1 0xA0 DUP6 ADD MSTORE PUSH2 0x3147 DUP3 DUP3 PUSH2 0x3080 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA0 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0xC0 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x317F DUP6 PUSH2 0x2CDD JUMP JUMPDEST SWAP4 POP PUSH2 0x318D PUSH1 0x20 DUP7 ADD PUSH2 0x2CDD JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x31B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x31C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x303C DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x2DF8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x31E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3211 DUP9 DUP4 DUP10 ADD PUSH2 0x2E6E JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x300D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD PUSH2 0x11BB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x305E JUMP JUMPDEST PUSH2 0x3256 DUP2 DUP9 PUSH2 0x305E JUMP JUMPDEST DUP6 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3272 PUSH1 0xC0 DUP4 ADD DUP8 PUSH2 0x2D60 JUMP JUMPDEST DUP6 ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x328C DUP2 DUP7 PUSH2 0x3080 JUMP JUMPDEST SWAP2 POP POP DUP3 ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x30DE PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2D60 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x32DF DUP4 PUSH2 0x2CDD JUMP JUMPDEST SWAP2 POP PUSH2 0xB8F PUSH1 0x20 DUP5 ADD PUSH2 0x2CDD JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3301 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3321 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4D656D62657220646F6573206E6F74206861766520616E204E46432063617264 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x339C DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2D3C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x685 JUMPI PUSH2 0x685 PUSH2 0x33A6 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x33DD DUP3 DUP6 PUSH2 0x305E JUMP JUMPDEST PUSH2 0x1207 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x305E JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x685 JUMPI PUSH2 0x685 PUSH2 0x33A6 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x341E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE PUSH1 0x0 DUP5 SLOAD PUSH2 0x3437 DUP2 PUSH2 0x32ED JUMP JUMPDEST DUP1 DUP5 DUP8 ADD MSTORE PUSH1 0x40 PUSH1 0x1 DUP1 DUP5 AND PUSH1 0x0 DUP2 EQ PUSH2 0x3458 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3472 JUMPI PUSH2 0x34A0 JUMP JUMPDEST PUSH1 0xFF NOT DUP6 AND DUP10 DUP5 ADD MSTORE DUP4 ISZERO ISZERO PUSH1 0x5 SHL DUP10 ADD DUP4 ADD SWAP6 POP PUSH2 0x34A0 JUMP JUMPDEST DUP10 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3498 JUMPI DUP2 SLOAD DUP12 DUP3 ADD DUP7 ADD MSTORE SWAP1 DUP4 ADD SWAP1 DUP9 ADD PUSH2 0x347D JUMP JUMPDEST DUP11 ADD DUP5 ADD SWAP7 POP POP JUMPDEST POP SWAP4 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x34C0 JUMPI PUSH2 0x34C0 PUSH2 0x33A6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xC9B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x34EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2661 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x34FA JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3527 JUMPI PUSH2 0x3527 PUSH2 0x2DE2 JUMP JUMPDEST PUSH2 0x353B DUP2 PUSH2 0x3535 DUP5 SLOAD PUSH2 0x32ED JUMP JUMPDEST DUP5 PUSH2 0x34C7 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3570 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3558 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x2661 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x359F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x3580 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x35BD JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x35D7 DUP2 DUP5 PUSH2 0x305E JUMP JUMPDEST PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x11BB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2D60 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3600 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2D60 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x30DE DUP2 DUP6 PUSH2 0x2D60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x3645 SWAP1 DUP4 ADD DUP5 PUSH2 0x2D60 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1207 DUP2 PUSH2 0x2CAA JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x367E DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x2D3C JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x3692 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x2D3C JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xFC OR PUSH1 0x7 OR 0x25 CALLDATASIZE CALL 0x5D 0x4F 0x4F EXTCODECOPY JUMPI GAS 0xD7 0x5E EXTCODEHASH PREVRANDAO 0xE0 STATICCALL 0xC2 SWAP6 PUSH12 0xECD0D794F0AA718C64736F6C PUSH4 0x43000814 STOP CALLER 0x4C PUSH2 0x6B65 KECCAK256 MSTORE8 PUSH21 0x6F636B746F6E20596163687420436C7562204D656D PUSH3 0x657273 PUSH9 0x697000000000000000 ","sourceMap":"579:12852:21:-:0;;;970:38;;;-1:-1:-1;;;;970:38:21;-1:-1:-1;;;970:38:21;;;3011:431;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3195:10;1380:113:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1380:113:6;;;;-1:-1:-1;1446:13:6;1454:5;-1:-1:-1;1446:13:6;:::i;:::-;-1:-1:-1;1469:7:6;:17;1479:7;1469;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;3526:51:22;3499:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1857:1:14;2061:7;:21;3217:16:21::2;:36:::0;;-1:-1:-1;;;;;;3217:36:21::2;-1:-1:-1::0;;;;;3217:36:21;;::::2;::::0;;;::::2;::::0;;;3263:37;::::2;-1:-1:-1::0;;;;;;;;3310:35:21;::::2;;;3263:17;3310:35:::0;3418:15:::2;:17:::0;;;-1:-1:-1;3418:17:21::2;::::0;::::2;:::i;:::-;;;;;;3011:431:::0;;;579:12852;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:177:22:-;93:13;;-1:-1:-1;;;;;135:31:22;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:458::-;283:6;291;299;352:2;340:9;331:7;327:23;323:32;320:52;;;368:1;365;358:12;320:52;391:40;421:9;391:40;:::i;:::-;381:50;;450:49;495:2;484:9;480:18;450:49;:::i;:::-;542:2;527:18;;521:25;440:59;;-1:-1:-1;;;;;;575:30:22;;565:41;;555:69;;620:1;617;610:12;555:69;643:5;633:15;;;196:458;;;;;:::o;659:127::-;720:10;715:3;711:20;708:1;701:31;751:4;748:1;741:15;775:4;772:1;765:15;791:380;870:1;866:12;;;;913;;;934:61;;988:4;980:6;976:17;966:27;;934:61;1041:2;1033:6;1030:14;1010:18;1007:38;1004:161;;1087:10;1082:3;1078:20;1075:1;1068:31;1122:4;1119:1;1112:15;1150:4;1147:1;1140:15;1004:161;;791:380;;;:::o;1302:545::-;1404:2;1399:3;1396:11;1393:448;;;1440:1;1465:5;1461:2;1454:17;1510:4;1506:2;1496:19;1580:2;1568:10;1564:19;1561:1;1557:27;1551:4;1547:38;1616:4;1604:10;1601:20;1598:47;;;-1:-1:-1;1639:4:22;1598:47;1694:2;1689:3;1685:12;1682:1;1678:20;1672:4;1668:31;1658:41;;1749:82;1767:2;1760:5;1757:13;1749:82;;;1812:17;;;1793:1;1782:13;1749:82;;;1753:3;;;1393:448;1302:545;;;:::o;2023:1352::-;2143:10;;-1:-1:-1;;;;;2165:30:22;;2162:56;;;2198:18;;:::i;:::-;2227:97;2317:6;2277:38;2309:4;2303:11;2277:38;:::i;:::-;2271:4;2227:97;:::i;:::-;2379:4;;2443:2;2432:14;;2460:1;2455:663;;;;3162:1;3179:6;3176:89;;;-1:-1:-1;3231:19:22;;;3225:26;3176:89;-1:-1:-1;;1980:1:22;1976:11;;;1972:24;1968:29;1958:40;2004:1;2000:11;;;1955:57;3278:81;;2425:944;;2455:663;1249:1;1242:14;;;1286:4;1273:18;;-1:-1:-1;;2491:20:22;;;2609:236;2623:7;2620:1;2617:14;2609:236;;;2712:19;;;2706:26;2691:42;;2804:27;;;;2772:1;2760:14;;;;2639:19;;2609:236;;;2613:3;2873:6;2864:7;2861:19;2858:201;;;2934:19;;;2928:26;-1:-1:-1;;3017:1:22;3013:14;;;3029:3;3009:24;3005:37;3001:42;2986:58;2971:74;;2858:201;-1:-1:-1;;;;;3105:1:22;3089:14;;;3085:22;3072:36;;-1:-1:-1;2023:1352:22:o;3588:232::-;3627:3;3648:17;;;3645:140;;3707:10;3702:3;3698:20;3695:1;3688:31;3742:4;3739:1;3732:15;3770:4;3767:1;3760:15;3645:140;-1:-1:-1;3812:1:22;3801:13;;3588:232::o;:::-;579:12852:21;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_1160":{"entryPoint":8862,"id":1160,"parameterSlots":3,"returnSlots":0},"@_approve_1226":{"entryPoint":10179,"id":1226,"parameterSlots":4,"returnSlots":0},"@_baseURI_541":{"entryPoint":null,"id":541,"parameterSlots":0,"returnSlots":1},"@_checkAuthorized_800":{"entryPoint":10441,"id":800,"parameterSlots":3,"returnSlots":0},"@_checkOwner_84":{"entryPoint":8761,"id":84,"parameterSlots":0,"returnSlots":0},"@_getApproved_727":{"entryPoint":null,"id":727,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_763":{"entryPoint":10681,"id":763,"parameterSlots":3,"returnSlots":1},"@_mint_956":{"entryPoint":10780,"id":956,"parameterSlots":2,"returnSlots":0},"@_msgSender_1673":{"entryPoint":null,"id":1673,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_1800":{"entryPoint":null,"id":1800,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_1792":{"entryPoint":9228,"id":1792,"parameterSlots":0,"returnSlots":0},"@_ownerOf_714":{"entryPoint":8875,"id":714,"parameterSlots":1,"returnSlots":1},"@_requireOwned_1292":{"entryPoint":8806,"id":1292,"parameterSlots":1,"returnSlots":1},"@_safeMint_1001":{"entryPoint":10541,"id":1001,"parameterSlots":3,"returnSlots":0},"@_safeMint_971":{"entryPoint":9270,"id":971,"parameterSlots":2,"returnSlots":0},"@_setApprovalForAll_1263":{"entryPoint":9376,"id":1263,"parameterSlots":3,"returnSlots":0},"@_setTokenURI_1555":{"entryPoint":9296,"id":1555,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":9146,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_906":{"entryPoint":8902,"id":906,"parameterSlots":3,"returnSlots":1},"@approve_557":{"entryPoint":1902,"id":557,"parameterSlots":2,"returnSlots":0},"@approvedMarketplaces_6813":{"entryPoint":null,"id":6813,"parameterSlots":0,"returnSlots":0},"@authorizedMinter_6806":{"entryPoint":null,"id":6806,"parameterSlots":0,"returnSlots":0},"@balanceOf_465":{"entryPoint":3439,"id":465,"parameterSlots":1,"returnSlots":1},"@checkOnERC721Received_1660":{"entryPoint":9535,"id":1660,"parameterSlots":5,"returnSlots":0},"@deactivateMembership_7507":{"entryPoint":6224,"id":7507,"parameterSlots":1,"returnSlots":0},"@deactivateNFCCard_7276":{"entryPoint":3232,"id":7276,"parameterSlots":1,"returnSlots":0},"@getApproved_574":{"entryPoint":1861,"id":574,"parameterSlots":1,"returnSlots":1},"@getMemberInfo_7691":{"entryPoint":4622,"id":7691,"parameterSlots":1,"returnSlots":1},"@getNFCCardInfo_7357":{"entryPoint":7942,"id":7357,"parameterSlots":1,"returnSlots":3},"@getTokenIdByMember_7704":{"entryPoint":null,"id":7704,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_607":{"entryPoint":8616,"id":607,"parameterSlots":2,"returnSlots":1},"@isMember_7728":{"entryPoint":4558,"id":7728,"parameterSlots":1,"returnSlots":1},"@linkNFCCard_7165":{"entryPoint":5457,"id":7165,"parameterSlots":4,"returnSlots":0},"@log10_4703":{"entryPoint":11028,"id":4703,"parameterSlots":1,"returnSlots":1},"@memberInfo_6849":{"entryPoint":7257,"id":6849,"parameterSlots":0,"returnSlots":0},"@memberTokenId_6853":{"entryPoint":null,"id":6853,"parameterSlots":0,"returnSlots":0},"@mintMembership_7071":{"entryPoint":3642,"id":7071,"parameterSlots":4,"returnSlots":1},"@name_487":{"entryPoint":1715,"id":487,"parameterSlots":0,"returnSlots":1},"@nfcCardExists_6861":{"entryPoint":null,"id":6861,"parameterSlots":0,"returnSlots":0},"@nfcCardToToken_6857":{"entryPoint":null,"id":6857,"parameterSlots":0,"returnSlots":0},"@ownerOf_478":{"entryPoint":3428,"id":478,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@reactivateMembership_7535":{"entryPoint":6137,"id":7535,"parameterSlots":1,"returnSlots":0},"@reactivateNFCCard_7313":{"entryPoint":3064,"id":7313,"parameterSlots":1,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":3607,"id":98,"parameterSlots":0,"returnSlots":0},"@royaltyInfo_7654":{"entryPoint":2853,"id":7654,"parameterSlots":2,"returnSlots":2},"@safeTransferFrom_671":{"entryPoint":3200,"id":671,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_701":{"entryPoint":5433,"id":701,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_590":{"entryPoint":4547,"id":590,"parameterSlots":2,"returnSlots":0},"@setAuthorizedMinter_7557":{"entryPoint":2452,"id":7557,"parameterSlots":1,"returnSlots":0},"@setMarketplaceApproval_7596":{"entryPoint":2968,"id":7596,"parameterSlots":2,"returnSlots":0},"@setRoyaltyInfo_7615":{"entryPoint":1675,"id":7615,"parameterSlots":2,"returnSlots":0},"@setTransferRestricted_7574":{"entryPoint":3511,"id":7574,"parameterSlots":1,"returnSlots":0},"@supportsInterface_1479":{"entryPoint":8724,"id":1479,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3237":{"entryPoint":null,"id":3237,"parameterSlots":1,"returnSlots":1},"@supportsInterface_437":{"entryPoint":10099,"id":437,"parameterSlots":1,"returnSlots":1},"@supportsInterface_7768":{"entryPoint":1632,"id":7768,"parameterSlots":1,"returnSlots":1},"@symbol_496":{"entryPoint":3627,"id":496,"parameterSlots":0,"returnSlots":1},"@toString_1926":{"entryPoint":10881,"id":1926,"parameterSlots":1,"returnSlots":1},"@tokenURI_1536":{"entryPoint":9834,"id":1536,"parameterSlots":1,"returnSlots":1},"@tokenURI_532":{"entryPoint":10565,"id":532,"parameterSlots":1,"returnSlots":1},"@tokenURI_7744":{"entryPoint":7246,"id":7744,"parameterSlots":1,"returnSlots":1},"@totalSupply_7665":{"entryPoint":2430,"id":7665,"parameterSlots":0,"returnSlots":1},"@transferFrom_653":{"entryPoint":2714,"id":653,"parameterSlots":3,"returnSlots":0},"@transferOwnership_126":{"entryPoint":8662,"id":126,"parameterSlots":1,"returnSlots":0},"@transfersRestricted_6809":{"entryPoint":null,"id":6809,"parameterSlots":0,"returnSlots":0},"@unlinkNFCCard_7230":{"entryPoint":1917,"id":7230,"parameterSlots":1,"returnSlots":0},"@updateMemberTier_7479":{"entryPoint":2542,"id":7479,"parameterSlots":2,"returnSlots":0},"@verifyNFCCard_7434":{"entryPoint":6308,"id":7434,"parameterSlots":1,"returnSlots":3},"abi_decode_address":{"entryPoint":11485,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":11768,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool":{"entryPoint":12142,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_enum_MemberTier":{"entryPoint":11998,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string":{"entryPoint":11886,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":11971,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":12995,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":12048,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":12640,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":12158,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_enum$_MemberTier_$6818t_string_memory_ptrt_string_memory_ptr":{"entryPoint":12227,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":11704,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint96":{"entryPoint":11513,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool":{"entryPoint":12200,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4":{"entryPoint":11456,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":13903,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":11918,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":11679,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_enum$_MemberTier_$6818":{"entryPoint":12013,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr":{"entryPoint":12752,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":12108,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_enum_MemberTier":{"entryPoint":12382,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":11616,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_NFCCard":{"entryPoint":12416,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":13194,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":13932,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":13842,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool_t_address_t_enum$_MemberTier_$6818__to_t_bool_t_address_t_uint8__fromStack_reversed":{"entryPoint":12839,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_enum$_MemberTier_$6818_t_enum$_MemberTier_$6818__to_t_uint8_t_uint8__fromStack_reversed":{"entryPoint":13263,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_enum$_MemberTier_$6818_t_string_memory_ptr__to_t_uint8_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13773,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_enum$_MemberTier_$6818_t_uint256_t_string_memory_ptr_t_bool_t_struct$_NFCCard_$6829_memory_ptr_t_bool__to_t_uint8_t_uint256_t_string_memory_ptr_t_bool_t_struct$_NFCCard_$6829_memory_ptr_t_bool__fromStack_reversed":{"entryPoint":12876,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11660,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13805,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_storage__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13347,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_05ce55e5de52b8b5808930586694950ca0eee6f4925a9fe48816241091de8ee9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1d6dc8c911703b86f29b06d0db96f40df5f282ec62d37ba092827035c01178fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3028800c1dbdd60b51d79f5eeb02acf0deac096bf4f2573b511ed379bc891d8c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13095,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b29e0aab9e757fa31789ac85fd81ae5bd5d8890412c3f590b9908480e647e628__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13141,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bbd75e48baed3f30fbfc2970a751ea32d0284d9d338895802bf1a6041c2e8aa0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c7bafc2e0f4372a5b344c2a3be3502b5e1e0ddc1f4f4ceb9f51bd7ff71b29a1f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d633f097afe2c3b3efba3957b2369f4231e0e493227ac0996c0f90cc0a5005e9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_MemberInfo_$6844_memory_ptr__to_t_struct$_MemberInfo_$6844_memory_ptr__fromStack_reversed":{"entryPoint":12519,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bool_t_string_memory_ptr__to_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12962,"id":null,"parameterSlots":4,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":13313,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":13290,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":13244,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":13511,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":13581,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":11580,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":13037,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":13486,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":13222,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":12360,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":11746,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":11434,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:23057:22","statements":[{"nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nodeType":"YulBlock","src":"58:87:22","statements":[{"body":{"nodeType":"YulBlock","src":"123:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"132:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"125:6:22"},"nodeType":"YulFunctionCall","src":"125:12:22"},"nodeType":"YulExpressionStatement","src":"125:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"81:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"92:5:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"108:10:22","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"99:3:22"},"nodeType":"YulFunctionCall","src":"99:20:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"88:3:22"},"nodeType":"YulFunctionCall","src":"88:32:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"78:2:22"},"nodeType":"YulFunctionCall","src":"78:43:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"71:6:22"},"nodeType":"YulFunctionCall","src":"71:51:22"},"nodeType":"YulIf","src":"68:71:22"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47:5:22","type":""}],"src":"14:131:22"},{"body":{"nodeType":"YulBlock","src":"219:176:22","statements":[{"body":{"nodeType":"YulBlock","src":"265:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"274:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"277:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"267:6:22"},"nodeType":"YulFunctionCall","src":"267:12:22"},"nodeType":"YulExpressionStatement","src":"267:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"240:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"249:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"236:3:22"},"nodeType":"YulFunctionCall","src":"236:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"261:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"232:3:22"},"nodeType":"YulFunctionCall","src":"232:32:22"},"nodeType":"YulIf","src":"229:52:22"},{"nodeType":"YulVariableDeclaration","src":"290:36:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"316:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"303:12:22"},"nodeType":"YulFunctionCall","src":"303:23:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"294:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"359:5:22"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"335:23:22"},"nodeType":"YulFunctionCall","src":"335:30:22"},"nodeType":"YulExpressionStatement","src":"335:30:22"},{"nodeType":"YulAssignment","src":"374:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"384:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"374:6:22"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"185:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"196:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"208:6:22","type":""}],"src":"150:245:22"},{"body":{"nodeType":"YulBlock","src":"495:92:22","statements":[{"nodeType":"YulAssignment","src":"505:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"517:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"528:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"513:3:22"},"nodeType":"YulFunctionCall","src":"513:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"505:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"547:9:22"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"572:6:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"565:6:22"},"nodeType":"YulFunctionCall","src":"565:14:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"558:6:22"},"nodeType":"YulFunctionCall","src":"558:22:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"540:6:22"},"nodeType":"YulFunctionCall","src":"540:41:22"},"nodeType":"YulExpressionStatement","src":"540:41:22"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"464:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"475:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"486:4:22","type":""}],"src":"400:187:22"},{"body":{"nodeType":"YulBlock","src":"641:124:22","statements":[{"nodeType":"YulAssignment","src":"651:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"673:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"660:12:22"},"nodeType":"YulFunctionCall","src":"660:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"651:5:22"}]},{"body":{"nodeType":"YulBlock","src":"743:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"755:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"745:6:22"},"nodeType":"YulFunctionCall","src":"745:12:22"},"nodeType":"YulExpressionStatement","src":"745:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"702:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"713:5:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"728:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"733:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"724:3:22"},"nodeType":"YulFunctionCall","src":"724:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"737:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"720:3:22"},"nodeType":"YulFunctionCall","src":"720:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"709:3:22"},"nodeType":"YulFunctionCall","src":"709:31:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"699:2:22"},"nodeType":"YulFunctionCall","src":"699:42:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"692:6:22"},"nodeType":"YulFunctionCall","src":"692:50:22"},"nodeType":"YulIf","src":"689:70:22"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"620:6:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"631:5:22","type":""}],"src":"592:173:22"},{"body":{"nodeType":"YulBlock","src":"856:280:22","statements":[{"body":{"nodeType":"YulBlock","src":"902:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"911:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"914:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"904:6:22"},"nodeType":"YulFunctionCall","src":"904:12:22"},"nodeType":"YulExpressionStatement","src":"904:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"877:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"886:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"873:3:22"},"nodeType":"YulFunctionCall","src":"873:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"898:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"869:3:22"},"nodeType":"YulFunctionCall","src":"869:32:22"},"nodeType":"YulIf","src":"866:52:22"},{"nodeType":"YulAssignment","src":"927:39:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"956:9:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"937:18:22"},"nodeType":"YulFunctionCall","src":"937:29:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"927:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"975:45:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1005:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1016:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1001:3:22"},"nodeType":"YulFunctionCall","src":"1001:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"988:12:22"},"nodeType":"YulFunctionCall","src":"988:32:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"979:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1090:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1099:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1102:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1092:6:22"},"nodeType":"YulFunctionCall","src":"1092:12:22"},"nodeType":"YulExpressionStatement","src":"1092:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1042:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1053:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"1060:26:22","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1049:3:22"},"nodeType":"YulFunctionCall","src":"1049:38:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1039:2:22"},"nodeType":"YulFunctionCall","src":"1039:49:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1032:6:22"},"nodeType":"YulFunctionCall","src":"1032:57:22"},"nodeType":"YulIf","src":"1029:77:22"},{"nodeType":"YulAssignment","src":"1115:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"1125:5:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1115:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"814:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"825:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"837:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"845:6:22","type":""}],"src":"770:366:22"},{"body":{"nodeType":"YulBlock","src":"1207:184:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1217:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1226:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1221:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1286:63:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1311:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"1316:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1307:3:22"},"nodeType":"YulFunctionCall","src":"1307:11:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1330:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"1335:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1326:3:22"},"nodeType":"YulFunctionCall","src":"1326:11:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1320:5:22"},"nodeType":"YulFunctionCall","src":"1320:18:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1300:6:22"},"nodeType":"YulFunctionCall","src":"1300:39:22"},"nodeType":"YulExpressionStatement","src":"1300:39:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1247:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"1250:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1244:2:22"},"nodeType":"YulFunctionCall","src":"1244:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1258:19:22","statements":[{"nodeType":"YulAssignment","src":"1260:15:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1269:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"1272:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1265:3:22"},"nodeType":"YulFunctionCall","src":"1265:10:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1260:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"1240:3:22","statements":[]},"src":"1236:113:22"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1369:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"1374:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1365:3:22"},"nodeType":"YulFunctionCall","src":"1365:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"1383:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1358:6:22"},"nodeType":"YulFunctionCall","src":"1358:27:22"},"nodeType":"YulExpressionStatement","src":"1358:27:22"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1185:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1190:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"1195:6:22","type":""}],"src":"1141:250:22"},{"body":{"nodeType":"YulBlock","src":"1446:221:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1456:26:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1476:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1470:5:22"},"nodeType":"YulFunctionCall","src":"1470:12:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1460:6:22","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1498:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"1503:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1491:6:22"},"nodeType":"YulFunctionCall","src":"1491:19:22"},"nodeType":"YulExpressionStatement","src":"1491:19:22"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1558:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"1565:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1554:3:22"},"nodeType":"YulFunctionCall","src":"1554:16:22"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1576:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"1581:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1572:3:22"},"nodeType":"YulFunctionCall","src":"1572:14:22"},{"name":"length","nodeType":"YulIdentifier","src":"1588:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"1519:34:22"},"nodeType":"YulFunctionCall","src":"1519:76:22"},"nodeType":"YulExpressionStatement","src":"1519:76:22"},{"nodeType":"YulAssignment","src":"1604:57:22","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1619:3:22"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1632:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1640:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1628:3:22"},"nodeType":"YulFunctionCall","src":"1628:15:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1649:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1645:3:22"},"nodeType":"YulFunctionCall","src":"1645:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1624:3:22"},"nodeType":"YulFunctionCall","src":"1624:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1615:3:22"},"nodeType":"YulFunctionCall","src":"1615:39:22"},{"kind":"number","nodeType":"YulLiteral","src":"1656:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1611:3:22"},"nodeType":"YulFunctionCall","src":"1611:50:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1604:3:22"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1423:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1430:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1438:3:22","type":""}],"src":"1396:271:22"},{"body":{"nodeType":"YulBlock","src":"1793:99:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1810:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1821:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1803:6:22"},"nodeType":"YulFunctionCall","src":"1803:21:22"},"nodeType":"YulExpressionStatement","src":"1803:21:22"},{"nodeType":"YulAssignment","src":"1833:53:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1859:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1871:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1882:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1867:3:22"},"nodeType":"YulFunctionCall","src":"1867:18:22"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1841:17:22"},"nodeType":"YulFunctionCall","src":"1841:45:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1833:4:22"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1762:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1773:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1784:4:22","type":""}],"src":"1672:220:22"},{"body":{"nodeType":"YulBlock","src":"1967:110:22","statements":[{"body":{"nodeType":"YulBlock","src":"2013:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2022:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2025:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2015:6:22"},"nodeType":"YulFunctionCall","src":"2015:12:22"},"nodeType":"YulExpressionStatement","src":"2015:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1988:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1997:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1984:3:22"},"nodeType":"YulFunctionCall","src":"1984:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2009:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1980:3:22"},"nodeType":"YulFunctionCall","src":"1980:32:22"},"nodeType":"YulIf","src":"1977:52:22"},{"nodeType":"YulAssignment","src":"2038:33:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2061:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2048:12:22"},"nodeType":"YulFunctionCall","src":"2048:23:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2038:6:22"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1933:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1944:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1956:6:22","type":""}],"src":"1897:180:22"},{"body":{"nodeType":"YulBlock","src":"2183:102:22","statements":[{"nodeType":"YulAssignment","src":"2193:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2205:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2216:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2201:3:22"},"nodeType":"YulFunctionCall","src":"2201:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2193:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2235:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2250:6:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2266:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2271:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2262:3:22"},"nodeType":"YulFunctionCall","src":"2262:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"2275:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2258:3:22"},"nodeType":"YulFunctionCall","src":"2258:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2246:3:22"},"nodeType":"YulFunctionCall","src":"2246:32:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2228:6:22"},"nodeType":"YulFunctionCall","src":"2228:51:22"},"nodeType":"YulExpressionStatement","src":"2228:51:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2152:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2163:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2174:4:22","type":""}],"src":"2082:203:22"},{"body":{"nodeType":"YulBlock","src":"2377:167:22","statements":[{"body":{"nodeType":"YulBlock","src":"2423:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2432:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2435:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2425:6:22"},"nodeType":"YulFunctionCall","src":"2425:12:22"},"nodeType":"YulExpressionStatement","src":"2425:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2398:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2407:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2394:3:22"},"nodeType":"YulFunctionCall","src":"2394:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2419:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2390:3:22"},"nodeType":"YulFunctionCall","src":"2390:32:22"},"nodeType":"YulIf","src":"2387:52:22"},{"nodeType":"YulAssignment","src":"2448:39:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2477:9:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2458:18:22"},"nodeType":"YulFunctionCall","src":"2458:29:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2448:6:22"}]},{"nodeType":"YulAssignment","src":"2496:42:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2523:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2534:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2519:3:22"},"nodeType":"YulFunctionCall","src":"2519:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2506:12:22"},"nodeType":"YulFunctionCall","src":"2506:32:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2496:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2335:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2346:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2358:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2366:6:22","type":""}],"src":"2290:254:22"},{"body":{"nodeType":"YulBlock","src":"2581:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2598:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2605:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2610:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2601:3:22"},"nodeType":"YulFunctionCall","src":"2601:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2591:6:22"},"nodeType":"YulFunctionCall","src":"2591:31:22"},"nodeType":"YulExpressionStatement","src":"2591:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2638:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2641:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2631:6:22"},"nodeType":"YulFunctionCall","src":"2631:15:22"},"nodeType":"YulExpressionStatement","src":"2631:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2662:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2665:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2655:6:22"},"nodeType":"YulFunctionCall","src":"2655:15:22"},"nodeType":"YulExpressionStatement","src":"2655:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2549:127:22"},{"body":{"nodeType":"YulBlock","src":"2756:557:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2766:28:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2776:18:22","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2770:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2821:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2823:16:22"},"nodeType":"YulFunctionCall","src":"2823:18:22"},"nodeType":"YulExpressionStatement","src":"2823:18:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2809:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"2817:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2806:2:22"},"nodeType":"YulFunctionCall","src":"2806:14:22"},"nodeType":"YulIf","src":"2803:40:22"},{"nodeType":"YulVariableDeclaration","src":"2852:17:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2866:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2862:3:22"},"nodeType":"YulFunctionCall","src":"2862:7:22"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2856:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2878:23:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2898:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2892:5:22"},"nodeType":"YulFunctionCall","src":"2892:9:22"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2882:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2910:73:22","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2932:6:22"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2956:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2964:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2952:3:22"},"nodeType":"YulFunctionCall","src":"2952:15:22"},{"name":"_2","nodeType":"YulIdentifier","src":"2969:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2948:3:22"},"nodeType":"YulFunctionCall","src":"2948:24:22"},{"kind":"number","nodeType":"YulLiteral","src":"2974:2:22","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2944:3:22"},"nodeType":"YulFunctionCall","src":"2944:33:22"},{"name":"_2","nodeType":"YulIdentifier","src":"2979:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2940:3:22"},"nodeType":"YulFunctionCall","src":"2940:42:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2928:3:22"},"nodeType":"YulFunctionCall","src":"2928:55:22"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2914:10:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"3042:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3044:16:22"},"nodeType":"YulFunctionCall","src":"3044:18:22"},"nodeType":"YulExpressionStatement","src":"3044:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3001:10:22"},{"name":"_1","nodeType":"YulIdentifier","src":"3013:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2998:2:22"},"nodeType":"YulFunctionCall","src":"2998:18:22"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3021:10:22"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3033:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3018:2:22"},"nodeType":"YulFunctionCall","src":"3018:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2995:2:22"},"nodeType":"YulFunctionCall","src":"2995:46:22"},"nodeType":"YulIf","src":"2992:72:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3080:2:22","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3084:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3073:6:22"},"nodeType":"YulFunctionCall","src":"3073:22:22"},"nodeType":"YulExpressionStatement","src":"3073:22:22"},{"nodeType":"YulAssignment","src":"3104:15:22","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3113:6:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3104:5:22"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3135:6:22"},{"name":"length","nodeType":"YulIdentifier","src":"3143:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3128:6:22"},"nodeType":"YulFunctionCall","src":"3128:22:22"},"nodeType":"YulExpressionStatement","src":"3128:22:22"},{"body":{"nodeType":"YulBlock","src":"3188:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3197:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3200:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3190:6:22"},"nodeType":"YulFunctionCall","src":"3190:12:22"},"nodeType":"YulExpressionStatement","src":"3190:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3169:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"3174:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3165:3:22"},"nodeType":"YulFunctionCall","src":"3165:16:22"},{"name":"end","nodeType":"YulIdentifier","src":"3183:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3162:2:22"},"nodeType":"YulFunctionCall","src":"3162:25:22"},"nodeType":"YulIf","src":"3159:45:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3230:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3238:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3226:3:22"},"nodeType":"YulFunctionCall","src":"3226:17:22"},{"name":"src","nodeType":"YulIdentifier","src":"3245:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"3250:6:22"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3213:12:22"},"nodeType":"YulFunctionCall","src":"3213:44:22"},"nodeType":"YulExpressionStatement","src":"3213:44:22"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3281:6:22"},{"name":"length","nodeType":"YulIdentifier","src":"3289:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3277:3:22"},"nodeType":"YulFunctionCall","src":"3277:19:22"},{"kind":"number","nodeType":"YulLiteral","src":"3298:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3273:3:22"},"nodeType":"YulFunctionCall","src":"3273:30:22"},{"kind":"number","nodeType":"YulLiteral","src":"3305:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3266:6:22"},"nodeType":"YulFunctionCall","src":"3266:41:22"},"nodeType":"YulExpressionStatement","src":"3266:41:22"}]},"name":"abi_decode_available_length_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2725:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"2730:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"2738:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2746:5:22","type":""}],"src":"2681:632:22"},{"body":{"nodeType":"YulBlock","src":"3371:169:22","statements":[{"body":{"nodeType":"YulBlock","src":"3420:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3429:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3432:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3422:6:22"},"nodeType":"YulFunctionCall","src":"3422:12:22"},"nodeType":"YulExpressionStatement","src":"3422:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3399:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3407:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3395:3:22"},"nodeType":"YulFunctionCall","src":"3395:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"3414:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3391:3:22"},"nodeType":"YulFunctionCall","src":"3391:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3384:6:22"},"nodeType":"YulFunctionCall","src":"3384:35:22"},"nodeType":"YulIf","src":"3381:55:22"},{"nodeType":"YulAssignment","src":"3445:89:22","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3493:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3501:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3489:3:22"},"nodeType":"YulFunctionCall","src":"3489:17:22"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3521:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3508:12:22"},"nodeType":"YulFunctionCall","src":"3508:20:22"},{"name":"end","nodeType":"YulIdentifier","src":"3530:3:22"}],"functionName":{"name":"abi_decode_available_length_string","nodeType":"YulIdentifier","src":"3454:34:22"},"nodeType":"YulFunctionCall","src":"3454:80:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3445:5:22"}]}]},"name":"abi_decode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3345:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"3353:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3361:5:22","type":""}],"src":"3318:222:22"},{"body":{"nodeType":"YulBlock","src":"3625:242:22","statements":[{"body":{"nodeType":"YulBlock","src":"3671:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3680:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3683:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3673:6:22"},"nodeType":"YulFunctionCall","src":"3673:12:22"},"nodeType":"YulExpressionStatement","src":"3673:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3646:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"3655:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3642:3:22"},"nodeType":"YulFunctionCall","src":"3642:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"3667:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3638:3:22"},"nodeType":"YulFunctionCall","src":"3638:32:22"},"nodeType":"YulIf","src":"3635:52:22"},{"nodeType":"YulVariableDeclaration","src":"3696:37:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3723:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3710:12:22"},"nodeType":"YulFunctionCall","src":"3710:23:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3700:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"3776:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3785:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3788:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3778:6:22"},"nodeType":"YulFunctionCall","src":"3778:12:22"},"nodeType":"YulExpressionStatement","src":"3778:12:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3748:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3756:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3745:2:22"},"nodeType":"YulFunctionCall","src":"3745:30:22"},"nodeType":"YulIf","src":"3742:50:22"},{"nodeType":"YulAssignment","src":"3801:60:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3833:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3844:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3829:3:22"},"nodeType":"YulFunctionCall","src":"3829:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3853:7:22"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"3811:17:22"},"nodeType":"YulFunctionCall","src":"3811:50:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3801:6:22"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3591:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3602:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3614:6:22","type":""}],"src":"3545:322:22"},{"body":{"nodeType":"YulBlock","src":"3973:76:22","statements":[{"nodeType":"YulAssignment","src":"3983:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3995:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4006:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3991:3:22"},"nodeType":"YulFunctionCall","src":"3991:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3983:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4025:9:22"},{"name":"value0","nodeType":"YulIdentifier","src":"4036:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4018:6:22"},"nodeType":"YulFunctionCall","src":"4018:25:22"},"nodeType":"YulExpressionStatement","src":"4018:25:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3942:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3953:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3964:4:22","type":""}],"src":"3872:177:22"},{"body":{"nodeType":"YulBlock","src":"4124:116:22","statements":[{"body":{"nodeType":"YulBlock","src":"4170:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4179:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4182:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4172:6:22"},"nodeType":"YulFunctionCall","src":"4172:12:22"},"nodeType":"YulExpressionStatement","src":"4172:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4145:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"4154:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4141:3:22"},"nodeType":"YulFunctionCall","src":"4141:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"4166:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4137:3:22"},"nodeType":"YulFunctionCall","src":"4137:32:22"},"nodeType":"YulIf","src":"4134:52:22"},{"nodeType":"YulAssignment","src":"4195:39:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4224:9:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4205:18:22"},"nodeType":"YulFunctionCall","src":"4205:29:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4195:6:22"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4090:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4101:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4113:6:22","type":""}],"src":"4054:186:22"},{"body":{"nodeType":"YulBlock","src":"4302:94:22","statements":[{"nodeType":"YulAssignment","src":"4312:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4334:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4321:12:22"},"nodeType":"YulFunctionCall","src":"4321:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4312:5:22"}]},{"body":{"nodeType":"YulBlock","src":"4374:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4383:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4386:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4376:6:22"},"nodeType":"YulFunctionCall","src":"4376:12:22"},"nodeType":"YulExpressionStatement","src":"4376:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4363:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"4370:1:22","type":"","value":"4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4360:2:22"},"nodeType":"YulFunctionCall","src":"4360:12:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4353:6:22"},"nodeType":"YulFunctionCall","src":"4353:20:22"},"nodeType":"YulIf","src":"4350:40:22"}]},"name":"abi_decode_enum_MemberTier","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4281:6:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4292:5:22","type":""}],"src":"4245:151:22"},{"body":{"nodeType":"YulBlock","src":"4503:175:22","statements":[{"body":{"nodeType":"YulBlock","src":"4549:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4558:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4561:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4551:6:22"},"nodeType":"YulFunctionCall","src":"4551:12:22"},"nodeType":"YulExpressionStatement","src":"4551:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4524:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"4533:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4520:3:22"},"nodeType":"YulFunctionCall","src":"4520:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"4545:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4516:3:22"},"nodeType":"YulFunctionCall","src":"4516:32:22"},"nodeType":"YulIf","src":"4513:52:22"},{"nodeType":"YulAssignment","src":"4574:33:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4597:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4584:12:22"},"nodeType":"YulFunctionCall","src":"4584:23:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4574:6:22"}]},{"nodeType":"YulAssignment","src":"4616:56:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4657:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4668:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4653:3:22"},"nodeType":"YulFunctionCall","src":"4653:18:22"}],"functionName":{"name":"abi_decode_enum_MemberTier","nodeType":"YulIdentifier","src":"4626:26:22"},"nodeType":"YulFunctionCall","src":"4626:46:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4616:6:22"}]}]},"name":"abi_decode_tuple_t_uint256t_enum$_MemberTier_$6818","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4461:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4472:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4484:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4492:6:22","type":""}],"src":"4401:277:22"},{"body":{"nodeType":"YulBlock","src":"4787:224:22","statements":[{"body":{"nodeType":"YulBlock","src":"4833:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4842:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4845:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4835:6:22"},"nodeType":"YulFunctionCall","src":"4835:12:22"},"nodeType":"YulExpressionStatement","src":"4835:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4808:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"4817:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4804:3:22"},"nodeType":"YulFunctionCall","src":"4804:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"4829:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4800:3:22"},"nodeType":"YulFunctionCall","src":"4800:32:22"},"nodeType":"YulIf","src":"4797:52:22"},{"nodeType":"YulAssignment","src":"4858:39:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4887:9:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4868:18:22"},"nodeType":"YulFunctionCall","src":"4868:29:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4858:6:22"}]},{"nodeType":"YulAssignment","src":"4906:48:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4939:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4950:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4935:3:22"},"nodeType":"YulFunctionCall","src":"4935:18:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4916:18:22"},"nodeType":"YulFunctionCall","src":"4916:38:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4906:6:22"}]},{"nodeType":"YulAssignment","src":"4963:42:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4990:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5001:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4986:3:22"},"nodeType":"YulFunctionCall","src":"4986:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4973:12:22"},"nodeType":"YulFunctionCall","src":"4973:32:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4963:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4737:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4748:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4760:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4768:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4776:6:22","type":""}],"src":"4683:328:22"},{"body":{"nodeType":"YulBlock","src":"5103:161:22","statements":[{"body":{"nodeType":"YulBlock","src":"5149:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5158:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5161:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5151:6:22"},"nodeType":"YulFunctionCall","src":"5151:12:22"},"nodeType":"YulExpressionStatement","src":"5151:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5124:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"5133:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5120:3:22"},"nodeType":"YulFunctionCall","src":"5120:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"5145:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5116:3:22"},"nodeType":"YulFunctionCall","src":"5116:32:22"},"nodeType":"YulIf","src":"5113:52:22"},{"nodeType":"YulAssignment","src":"5174:33:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5197:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5184:12:22"},"nodeType":"YulFunctionCall","src":"5184:23:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5174:6:22"}]},{"nodeType":"YulAssignment","src":"5216:42:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5243:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5254:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5239:3:22"},"nodeType":"YulFunctionCall","src":"5239:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5226:12:22"},"nodeType":"YulFunctionCall","src":"5226:32:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5216:6:22"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5061:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5072:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5084:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5092:6:22","type":""}],"src":"5016:248:22"},{"body":{"nodeType":"YulBlock","src":"5398:145:22","statements":[{"nodeType":"YulAssignment","src":"5408:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5420:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5431:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5416:3:22"},"nodeType":"YulFunctionCall","src":"5416:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5408:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5450:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5465:6:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5481:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5486:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5477:3:22"},"nodeType":"YulFunctionCall","src":"5477:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"5490:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5473:3:22"},"nodeType":"YulFunctionCall","src":"5473:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5461:3:22"},"nodeType":"YulFunctionCall","src":"5461:32:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5443:6:22"},"nodeType":"YulFunctionCall","src":"5443:51:22"},"nodeType":"YulExpressionStatement","src":"5443:51:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5514:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5525:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5510:3:22"},"nodeType":"YulFunctionCall","src":"5510:18:22"},{"name":"value1","nodeType":"YulIdentifier","src":"5530:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5503:6:22"},"nodeType":"YulFunctionCall","src":"5503:34:22"},"nodeType":"YulExpressionStatement","src":"5503:34:22"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5359:9:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5370:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5378:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5389:4:22","type":""}],"src":"5269:274:22"},{"body":{"nodeType":"YulBlock","src":"5594:114:22","statements":[{"nodeType":"YulAssignment","src":"5604:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5626:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5613:12:22"},"nodeType":"YulFunctionCall","src":"5613:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5604:5:22"}]},{"body":{"nodeType":"YulBlock","src":"5686:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5695:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5698:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5688:6:22"},"nodeType":"YulFunctionCall","src":"5688:12:22"},"nodeType":"YulExpressionStatement","src":"5688:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5655:5:22"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5676:5:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5669:6:22"},"nodeType":"YulFunctionCall","src":"5669:13:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5662:6:22"},"nodeType":"YulFunctionCall","src":"5662:21:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5652:2:22"},"nodeType":"YulFunctionCall","src":"5652:32:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5645:6:22"},"nodeType":"YulFunctionCall","src":"5645:40:22"},"nodeType":"YulIf","src":"5642:60:22"}]},"name":"abi_decode_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5573:6:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5584:5:22","type":""}],"src":"5548:160:22"},{"body":{"nodeType":"YulBlock","src":"5797:170:22","statements":[{"body":{"nodeType":"YulBlock","src":"5843:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5852:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5855:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5845:6:22"},"nodeType":"YulFunctionCall","src":"5845:12:22"},"nodeType":"YulExpressionStatement","src":"5845:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5818:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"5827:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5814:3:22"},"nodeType":"YulFunctionCall","src":"5814:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"5839:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5810:3:22"},"nodeType":"YulFunctionCall","src":"5810:32:22"},"nodeType":"YulIf","src":"5807:52:22"},{"nodeType":"YulAssignment","src":"5868:39:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5897:9:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5878:18:22"},"nodeType":"YulFunctionCall","src":"5878:29:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5868:6:22"}]},{"nodeType":"YulAssignment","src":"5916:45:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5946:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5957:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5942:3:22"},"nodeType":"YulFunctionCall","src":"5942:18:22"}],"functionName":{"name":"abi_decode_bool","nodeType":"YulIdentifier","src":"5926:15:22"},"nodeType":"YulFunctionCall","src":"5926:35:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5916:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5755:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5766:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5778:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5786:6:22","type":""}],"src":"5713:254:22"},{"body":{"nodeType":"YulBlock","src":"6039:113:22","statements":[{"body":{"nodeType":"YulBlock","src":"6085:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6094:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6097:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6087:6:22"},"nodeType":"YulFunctionCall","src":"6087:12:22"},"nodeType":"YulExpressionStatement","src":"6087:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6060:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"6069:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6056:3:22"},"nodeType":"YulFunctionCall","src":"6056:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"6081:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6052:3:22"},"nodeType":"YulFunctionCall","src":"6052:32:22"},"nodeType":"YulIf","src":"6049:52:22"},{"nodeType":"YulAssignment","src":"6110:36:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6136:9:22"}],"functionName":{"name":"abi_decode_bool","nodeType":"YulIdentifier","src":"6120:15:22"},"nodeType":"YulFunctionCall","src":"6120:26:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6110:6:22"}]}]},"name":"abi_decode_tuple_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6005:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6016:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6028:6:22","type":""}],"src":"5972:180:22"},{"body":{"nodeType":"YulBlock","src":"6313:559:22","statements":[{"body":{"nodeType":"YulBlock","src":"6360:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6369:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6372:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6362:6:22"},"nodeType":"YulFunctionCall","src":"6362:12:22"},"nodeType":"YulExpressionStatement","src":"6362:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6334:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"6343:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6330:3:22"},"nodeType":"YulFunctionCall","src":"6330:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"6355:3:22","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6326:3:22"},"nodeType":"YulFunctionCall","src":"6326:33:22"},"nodeType":"YulIf","src":"6323:53:22"},{"nodeType":"YulAssignment","src":"6385:39:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6414:9:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6395:18:22"},"nodeType":"YulFunctionCall","src":"6395:29:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6385:6:22"}]},{"nodeType":"YulAssignment","src":"6433:56:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6474:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6485:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6470:3:22"},"nodeType":"YulFunctionCall","src":"6470:18:22"}],"functionName":{"name":"abi_decode_enum_MemberTier","nodeType":"YulIdentifier","src":"6443:26:22"},"nodeType":"YulFunctionCall","src":"6443:46:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6433:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"6498:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6529:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6540:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6525:3:22"},"nodeType":"YulFunctionCall","src":"6525:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6512:12:22"},"nodeType":"YulFunctionCall","src":"6512:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6502:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6553:28:22","value":{"kind":"number","nodeType":"YulLiteral","src":"6563:18:22","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6557:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"6608:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6617:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6620:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6610:6:22"},"nodeType":"YulFunctionCall","src":"6610:12:22"},"nodeType":"YulExpressionStatement","src":"6610:12:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6596:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"6604:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6593:2:22"},"nodeType":"YulFunctionCall","src":"6593:14:22"},"nodeType":"YulIf","src":"6590:34:22"},{"nodeType":"YulAssignment","src":"6633:60:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6665:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"6676:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6661:3:22"},"nodeType":"YulFunctionCall","src":"6661:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6685:7:22"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"6643:17:22"},"nodeType":"YulFunctionCall","src":"6643:50:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6633:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"6702:48:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6735:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6746:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6731:3:22"},"nodeType":"YulFunctionCall","src":"6731:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6718:12:22"},"nodeType":"YulFunctionCall","src":"6718:32:22"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"6706:8:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"6779:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6788:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6791:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6781:6:22"},"nodeType":"YulFunctionCall","src":"6781:12:22"},"nodeType":"YulExpressionStatement","src":"6781:12:22"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"6765:8:22"},{"name":"_1","nodeType":"YulIdentifier","src":"6775:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6762:2:22"},"nodeType":"YulFunctionCall","src":"6762:16:22"},"nodeType":"YulIf","src":"6759:36:22"},{"nodeType":"YulAssignment","src":"6804:62:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6836:9:22"},{"name":"offset_1","nodeType":"YulIdentifier","src":"6847:8:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6832:3:22"},"nodeType":"YulFunctionCall","src":"6832:24:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6858:7:22"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"6814:17:22"},"nodeType":"YulFunctionCall","src":"6814:52:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6804:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_enum$_MemberTier_$6818t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6255:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6266:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6278:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6286:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6294:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6302:6:22","type":""}],"src":"6157:715:22"},{"body":{"nodeType":"YulBlock","src":"6909:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6926:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6933:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6938:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6929:3:22"},"nodeType":"YulFunctionCall","src":"6929:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6919:6:22"},"nodeType":"YulFunctionCall","src":"6919:31:22"},"nodeType":"YulExpressionStatement","src":"6919:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6966:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6969:4:22","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6959:6:22"},"nodeType":"YulFunctionCall","src":"6959:15:22"},"nodeType":"YulExpressionStatement","src":"6959:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6990:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6993:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6983:6:22"},"nodeType":"YulFunctionCall","src":"6983:15:22"},"nodeType":"YulExpressionStatement","src":"6983:15:22"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"6877:127:22"},{"body":{"nodeType":"YulBlock","src":"7061:186:22","statements":[{"body":{"nodeType":"YulBlock","src":"7103:111:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7124:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7131:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7136:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7127:3:22"},"nodeType":"YulFunctionCall","src":"7127:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7117:6:22"},"nodeType":"YulFunctionCall","src":"7117:31:22"},"nodeType":"YulExpressionStatement","src":"7117:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7168:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7171:4:22","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7161:6:22"},"nodeType":"YulFunctionCall","src":"7161:15:22"},"nodeType":"YulExpressionStatement","src":"7161:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7196:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7199:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7189:6:22"},"nodeType":"YulFunctionCall","src":"7189:15:22"},"nodeType":"YulExpressionStatement","src":"7189:15:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7084:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"7091:1:22","type":"","value":"4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7081:2:22"},"nodeType":"YulFunctionCall","src":"7081:12:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7074:6:22"},"nodeType":"YulFunctionCall","src":"7074:20:22"},"nodeType":"YulIf","src":"7071:143:22"},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7230:3:22"},{"name":"value","nodeType":"YulIdentifier","src":"7235:5:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7223:6:22"},"nodeType":"YulFunctionCall","src":"7223:18:22"},"nodeType":"YulExpressionStatement","src":"7223:18:22"}]},"name":"abi_encode_enum_MemberTier","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7045:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7052:3:22","type":""}],"src":"7009:238:22"},{"body":{"nodeType":"YulBlock","src":"7310:593:22","statements":[{"nodeType":"YulVariableDeclaration","src":"7320:32:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7346:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7340:5:22"},"nodeType":"YulFunctionCall","src":"7340:12:22"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"7324:12:22","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7368:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"7373:4:22","type":"","value":"0xa0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7361:6:22"},"nodeType":"YulFunctionCall","src":"7361:17:22"},"nodeType":"YulExpressionStatement","src":"7361:17:22"},{"nodeType":"YulVariableDeclaration","src":"7387:59:22","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"7417:12:22"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7435:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"7440:4:22","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7431:3:22"},"nodeType":"YulFunctionCall","src":"7431:14:22"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"7399:17:22"},"nodeType":"YulFunctionCall","src":"7399:47:22"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"7391:4:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7455:45:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7487:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"7494:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7483:3:22"},"nodeType":"YulFunctionCall","src":"7483:16:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7477:5:22"},"nodeType":"YulFunctionCall","src":"7477:23:22"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"7459:14:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7520:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"7525:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7516:3:22"},"nodeType":"YulFunctionCall","src":"7516:14:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7536:4:22"},{"name":"pos","nodeType":"YulIdentifier","src":"7542:3:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7532:3:22"},"nodeType":"YulFunctionCall","src":"7532:14:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7509:6:22"},"nodeType":"YulFunctionCall","src":"7509:38:22"},"nodeType":"YulExpressionStatement","src":"7509:38:22"},{"nodeType":"YulVariableDeclaration","src":"7556:53:22","value":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"7588:14:22"},{"name":"tail","nodeType":"YulIdentifier","src":"7604:4:22"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"7570:17:22"},"nodeType":"YulFunctionCall","src":"7570:39:22"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"7560:6:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7629:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"7634:4:22","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7625:3:22"},"nodeType":"YulFunctionCall","src":"7625:14:22"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7651:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"7658:4:22","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7647:3:22"},"nodeType":"YulFunctionCall","src":"7647:16:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7641:5:22"},"nodeType":"YulFunctionCall","src":"7641:23:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7618:6:22"},"nodeType":"YulFunctionCall","src":"7618:47:22"},"nodeType":"YulExpressionStatement","src":"7618:47:22"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7685:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"7690:4:22","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7681:3:22"},"nodeType":"YulFunctionCall","src":"7681:14:22"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7721:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"7728:4:22","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7717:3:22"},"nodeType":"YulFunctionCall","src":"7717:16:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7711:5:22"},"nodeType":"YulFunctionCall","src":"7711:23:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7704:6:22"},"nodeType":"YulFunctionCall","src":"7704:31:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7697:6:22"},"nodeType":"YulFunctionCall","src":"7697:39:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7674:6:22"},"nodeType":"YulFunctionCall","src":"7674:63:22"},"nodeType":"YulExpressionStatement","src":"7674:63:22"},{"nodeType":"YulVariableDeclaration","src":"7746:45:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7778:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"7785:4:22","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7774:3:22"},"nodeType":"YulFunctionCall","src":"7774:16:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7768:5:22"},"nodeType":"YulFunctionCall","src":"7768:23:22"},"variables":[{"name":"memberValue0_2","nodeType":"YulTypedName","src":"7750:14:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7811:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"7816:4:22","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7807:3:22"},"nodeType":"YulFunctionCall","src":"7807:14:22"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"7827:6:22"},{"name":"pos","nodeType":"YulIdentifier","src":"7835:3:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7823:3:22"},"nodeType":"YulFunctionCall","src":"7823:16:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7800:6:22"},"nodeType":"YulFunctionCall","src":"7800:40:22"},"nodeType":"YulExpressionStatement","src":"7800:40:22"},{"nodeType":"YulAssignment","src":"7849:48:22","value":{"arguments":[{"name":"memberValue0_2","nodeType":"YulIdentifier","src":"7874:14:22"},{"name":"tail_1","nodeType":"YulIdentifier","src":"7890:6:22"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"7856:17:22"},"nodeType":"YulFunctionCall","src":"7856:41:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7849:3:22"}]}]},"name":"abi_encode_struct_NFCCard","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7287:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7294:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7302:3:22","type":""}],"src":"7252:651:22"},{"body":{"nodeType":"YulBlock","src":"8065:710:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8082:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8093:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8075:6:22"},"nodeType":"YulFunctionCall","src":"8075:21:22"},"nodeType":"YulExpressionStatement","src":"8075:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8138:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8132:5:22"},"nodeType":"YulFunctionCall","src":"8132:13:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8151:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8162:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8147:3:22"},"nodeType":"YulFunctionCall","src":"8147:18:22"}],"functionName":{"name":"abi_encode_enum_MemberTier","nodeType":"YulIdentifier","src":"8105:26:22"},"nodeType":"YulFunctionCall","src":"8105:61:22"},"nodeType":"YulExpressionStatement","src":"8105:61:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8186:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8197:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8182:3:22"},"nodeType":"YulFunctionCall","src":"8182:18:22"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8212:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"8220:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8208:3:22"},"nodeType":"YulFunctionCall","src":"8208:15:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8202:5:22"},"nodeType":"YulFunctionCall","src":"8202:22:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8175:6:22"},"nodeType":"YulFunctionCall","src":"8175:50:22"},"nodeType":"YulExpressionStatement","src":"8175:50:22"},{"nodeType":"YulVariableDeclaration","src":"8234:42:22","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8264:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"8272:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8260:3:22"},"nodeType":"YulFunctionCall","src":"8260:15:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8254:5:22"},"nodeType":"YulFunctionCall","src":"8254:22:22"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8238:12:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8296:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8307:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8292:3:22"},"nodeType":"YulFunctionCall","src":"8292:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"8312:4:22","type":"","value":"0xc0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8285:6:22"},"nodeType":"YulFunctionCall","src":"8285:32:22"},"nodeType":"YulExpressionStatement","src":"8285:32:22"},{"nodeType":"YulVariableDeclaration","src":"8326:66:22","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"8358:12:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8376:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8387:3:22","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8372:3:22"},"nodeType":"YulFunctionCall","src":"8372:19:22"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"8340:17:22"},"nodeType":"YulFunctionCall","src":"8340:52:22"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"8330:6:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8412:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8423:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8408:3:22"},"nodeType":"YulFunctionCall","src":"8408:19:22"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8453:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"8461:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8449:3:22"},"nodeType":"YulFunctionCall","src":"8449:15:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8443:5:22"},"nodeType":"YulFunctionCall","src":"8443:22:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8436:6:22"},"nodeType":"YulFunctionCall","src":"8436:30:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8429:6:22"},"nodeType":"YulFunctionCall","src":"8429:38:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8401:6:22"},"nodeType":"YulFunctionCall","src":"8401:67:22"},"nodeType":"YulExpressionStatement","src":"8401:67:22"},{"nodeType":"YulVariableDeclaration","src":"8477:45:22","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8509:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"8517:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8505:3:22"},"nodeType":"YulFunctionCall","src":"8505:16:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8499:5:22"},"nodeType":"YulFunctionCall","src":"8499:23:22"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"8481:14:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8542:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8553:3:22","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8538:3:22"},"nodeType":"YulFunctionCall","src":"8538:19:22"},{"arguments":[{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"8567:6:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"8575:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8563:3:22"},"nodeType":"YulFunctionCall","src":"8563:22:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8591:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8587:3:22"},"nodeType":"YulFunctionCall","src":"8587:7:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8559:3:22"},"nodeType":"YulFunctionCall","src":"8559:36:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8531:6:22"},"nodeType":"YulFunctionCall","src":"8531:65:22"},"nodeType":"YulExpressionStatement","src":"8531:65:22"},{"nodeType":"YulVariableDeclaration","src":"8605:63:22","value":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"8645:14:22"},{"name":"tail_1","nodeType":"YulIdentifier","src":"8661:6:22"}],"functionName":{"name":"abi_encode_struct_NFCCard","nodeType":"YulIdentifier","src":"8619:25:22"},"nodeType":"YulFunctionCall","src":"8619:49:22"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"8609:6:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8688:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8699:4:22","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8684:3:22"},"nodeType":"YulFunctionCall","src":"8684:20:22"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8730:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"8738:3:22","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8726:3:22"},"nodeType":"YulFunctionCall","src":"8726:16:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8720:5:22"},"nodeType":"YulFunctionCall","src":"8720:23:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8713:6:22"},"nodeType":"YulFunctionCall","src":"8713:31:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8706:6:22"},"nodeType":"YulFunctionCall","src":"8706:39:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8677:6:22"},"nodeType":"YulFunctionCall","src":"8677:69:22"},"nodeType":"YulExpressionStatement","src":"8677:69:22"},{"nodeType":"YulAssignment","src":"8755:14:22","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"8763:6:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8755:4:22"}]}]},"name":"abi_encode_tuple_t_struct$_MemberInfo_$6844_memory_ptr__to_t_struct$_MemberInfo_$6844_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8034:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8045:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8056:4:22","type":""}],"src":"7908:867:22"},{"body":{"nodeType":"YulBlock","src":"8910:537:22","statements":[{"body":{"nodeType":"YulBlock","src":"8957:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8966:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8969:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8959:6:22"},"nodeType":"YulFunctionCall","src":"8959:12:22"},"nodeType":"YulExpressionStatement","src":"8959:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8931:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"8940:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8927:3:22"},"nodeType":"YulFunctionCall","src":"8927:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"8952:3:22","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8923:3:22"},"nodeType":"YulFunctionCall","src":"8923:33:22"},"nodeType":"YulIf","src":"8920:53:22"},{"nodeType":"YulAssignment","src":"8982:39:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9011:9:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"8992:18:22"},"nodeType":"YulFunctionCall","src":"8992:29:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8982:6:22"}]},{"nodeType":"YulAssignment","src":"9030:48:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9063:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9074:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9059:3:22"},"nodeType":"YulFunctionCall","src":"9059:18:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"9040:18:22"},"nodeType":"YulFunctionCall","src":"9040:38:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9030:6:22"}]},{"nodeType":"YulAssignment","src":"9087:42:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9114:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9125:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9110:3:22"},"nodeType":"YulFunctionCall","src":"9110:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9097:12:22"},"nodeType":"YulFunctionCall","src":"9097:32:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9087:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"9138:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9169:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9180:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9165:3:22"},"nodeType":"YulFunctionCall","src":"9165:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9152:12:22"},"nodeType":"YulFunctionCall","src":"9152:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9142:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"9227:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9236:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9239:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9229:6:22"},"nodeType":"YulFunctionCall","src":"9229:12:22"},"nodeType":"YulExpressionStatement","src":"9229:12:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9199:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"9207:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9196:2:22"},"nodeType":"YulFunctionCall","src":"9196:30:22"},"nodeType":"YulIf","src":"9193:50:22"},{"nodeType":"YulVariableDeclaration","src":"9252:32:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9266:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"9277:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9262:3:22"},"nodeType":"YulFunctionCall","src":"9262:22:22"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9256:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"9332:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9341:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9344:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9334:6:22"},"nodeType":"YulFunctionCall","src":"9334:12:22"},"nodeType":"YulExpressionStatement","src":"9334:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"9311:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"9315:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9307:3:22"},"nodeType":"YulFunctionCall","src":"9307:13:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9322:7:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9303:3:22"},"nodeType":"YulFunctionCall","src":"9303:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9296:6:22"},"nodeType":"YulFunctionCall","src":"9296:35:22"},"nodeType":"YulIf","src":"9293:55:22"},{"nodeType":"YulAssignment","src":"9357:84:22","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"9406:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"9410:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9402:3:22"},"nodeType":"YulFunctionCall","src":"9402:11:22"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"9428:2:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9415:12:22"},"nodeType":"YulFunctionCall","src":"9415:16:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9433:7:22"}],"functionName":{"name":"abi_decode_available_length_string","nodeType":"YulIdentifier","src":"9367:34:22"},"nodeType":"YulFunctionCall","src":"9367:74:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9357:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8852:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8863:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8875:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8883:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8891:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8899:6:22","type":""}],"src":"8780:667:22"},{"body":{"nodeType":"YulBlock","src":"9603:661:22","statements":[{"body":{"nodeType":"YulBlock","src":"9650:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9659:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9662:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9652:6:22"},"nodeType":"YulFunctionCall","src":"9652:12:22"},"nodeType":"YulExpressionStatement","src":"9652:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9624:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"9633:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9620:3:22"},"nodeType":"YulFunctionCall","src":"9620:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"9645:3:22","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9616:3:22"},"nodeType":"YulFunctionCall","src":"9616:33:22"},"nodeType":"YulIf","src":"9613:53:22"},{"nodeType":"YulAssignment","src":"9675:33:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9698:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9685:12:22"},"nodeType":"YulFunctionCall","src":"9685:23:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9675:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"9717:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9748:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9759:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9744:3:22"},"nodeType":"YulFunctionCall","src":"9744:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9731:12:22"},"nodeType":"YulFunctionCall","src":"9731:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9721:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9772:28:22","value":{"kind":"number","nodeType":"YulLiteral","src":"9782:18:22","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9776:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"9827:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9836:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9839:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9829:6:22"},"nodeType":"YulFunctionCall","src":"9829:12:22"},"nodeType":"YulExpressionStatement","src":"9829:12:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9815:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"9823:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9812:2:22"},"nodeType":"YulFunctionCall","src":"9812:14:22"},"nodeType":"YulIf","src":"9809:34:22"},{"nodeType":"YulAssignment","src":"9852:60:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9884:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"9895:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9880:3:22"},"nodeType":"YulFunctionCall","src":"9880:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9904:7:22"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"9862:17:22"},"nodeType":"YulFunctionCall","src":"9862:50:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9852:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"9921:48:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9954:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9965:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9950:3:22"},"nodeType":"YulFunctionCall","src":"9950:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9937:12:22"},"nodeType":"YulFunctionCall","src":"9937:32:22"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"9925:8:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"9998:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10007:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10010:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10000:6:22"},"nodeType":"YulFunctionCall","src":"10000:12:22"},"nodeType":"YulExpressionStatement","src":"10000:12:22"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"9984:8:22"},{"name":"_1","nodeType":"YulIdentifier","src":"9994:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9981:2:22"},"nodeType":"YulFunctionCall","src":"9981:16:22"},"nodeType":"YulIf","src":"9978:36:22"},{"nodeType":"YulAssignment","src":"10023:62:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10055:9:22"},{"name":"offset_1","nodeType":"YulIdentifier","src":"10066:8:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10051:3:22"},"nodeType":"YulFunctionCall","src":"10051:24:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10077:7:22"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"10033:17:22"},"nodeType":"YulFunctionCall","src":"10033:52:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10023:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"10094:48:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10127:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10138:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10123:3:22"},"nodeType":"YulFunctionCall","src":"10123:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10110:12:22"},"nodeType":"YulFunctionCall","src":"10110:32:22"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"10098:8:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"10171:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10180:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10183:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10173:6:22"},"nodeType":"YulFunctionCall","src":"10173:12:22"},"nodeType":"YulExpressionStatement","src":"10173:12:22"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"10157:8:22"},{"name":"_1","nodeType":"YulIdentifier","src":"10167:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10154:2:22"},"nodeType":"YulFunctionCall","src":"10154:16:22"},"nodeType":"YulIf","src":"10151:36:22"},{"nodeType":"YulAssignment","src":"10196:62:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10228:9:22"},{"name":"offset_2","nodeType":"YulIdentifier","src":"10239:8:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10224:3:22"},"nodeType":"YulFunctionCall","src":"10224:24:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10250:7:22"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"10206:17:22"},"nodeType":"YulFunctionCall","src":"10206:52:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10196:6:22"}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9545:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9556:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9568:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9576:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9584:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9592:6:22","type":""}],"src":"9452:812:22"},{"body":{"nodeType":"YulBlock","src":"10433:224:22","statements":[{"nodeType":"YulAssignment","src":"10443:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10455:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10466:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10451:3:22"},"nodeType":"YulFunctionCall","src":"10451:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10443:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10485:9:22"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10510:6:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10503:6:22"},"nodeType":"YulFunctionCall","src":"10503:14:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10496:6:22"},"nodeType":"YulFunctionCall","src":"10496:22:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10478:6:22"},"nodeType":"YulFunctionCall","src":"10478:41:22"},"nodeType":"YulExpressionStatement","src":"10478:41:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10539:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10550:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10535:3:22"},"nodeType":"YulFunctionCall","src":"10535:18:22"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10559:6:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10575:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"10580:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10571:3:22"},"nodeType":"YulFunctionCall","src":"10571:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"10584:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10567:3:22"},"nodeType":"YulFunctionCall","src":"10567:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10555:3:22"},"nodeType":"YulFunctionCall","src":"10555:32:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10528:6:22"},"nodeType":"YulFunctionCall","src":"10528:60:22"},"nodeType":"YulExpressionStatement","src":"10528:60:22"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10624:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10636:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10647:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10632:3:22"},"nodeType":"YulFunctionCall","src":"10632:18:22"}],"functionName":{"name":"abi_encode_enum_MemberTier","nodeType":"YulIdentifier","src":"10597:26:22"},"nodeType":"YulFunctionCall","src":"10597:54:22"},"nodeType":"YulExpressionStatement","src":"10597:54:22"}]},"name":"abi_encode_tuple_t_bool_t_address_t_enum$_MemberTier_$6818__to_t_bool_t_address_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10386:9:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10397:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10405:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10413:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10424:4:22","type":""}],"src":"10269:388:22"},{"body":{"nodeType":"YulBlock","src":"10974:450:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11011:6:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"11019:9:22"}],"functionName":{"name":"abi_encode_enum_MemberTier","nodeType":"YulIdentifier","src":"10984:26:22"},"nodeType":"YulFunctionCall","src":"10984:45:22"},"nodeType":"YulExpressionStatement","src":"10984:45:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11049:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11060:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11045:3:22"},"nodeType":"YulFunctionCall","src":"11045:18:22"},{"name":"value1","nodeType":"YulIdentifier","src":"11065:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11038:6:22"},"nodeType":"YulFunctionCall","src":"11038:34:22"},"nodeType":"YulExpressionStatement","src":"11038:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11092:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11103:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11088:3:22"},"nodeType":"YulFunctionCall","src":"11088:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"11108:3:22","type":"","value":"192"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11081:6:22"},"nodeType":"YulFunctionCall","src":"11081:31:22"},"nodeType":"YulExpressionStatement","src":"11081:31:22"},{"nodeType":"YulVariableDeclaration","src":"11121:60:22","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11153:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11165:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11176:3:22","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11161:3:22"},"nodeType":"YulFunctionCall","src":"11161:19:22"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"11135:17:22"},"nodeType":"YulFunctionCall","src":"11135:46:22"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"11125:6:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11201:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11212:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11197:3:22"},"nodeType":"YulFunctionCall","src":"11197:18:22"},{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11231:6:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11224:6:22"},"nodeType":"YulFunctionCall","src":"11224:14:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11217:6:22"},"nodeType":"YulFunctionCall","src":"11217:22:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11190:6:22"},"nodeType":"YulFunctionCall","src":"11190:50:22"},"nodeType":"YulExpressionStatement","src":"11190:50:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11260:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11271:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11256:3:22"},"nodeType":"YulFunctionCall","src":"11256:19:22"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"11281:6:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"11289:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11277:3:22"},"nodeType":"YulFunctionCall","src":"11277:22:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11249:6:22"},"nodeType":"YulFunctionCall","src":"11249:51:22"},"nodeType":"YulExpressionStatement","src":"11249:51:22"},{"nodeType":"YulAssignment","src":"11309:49:22","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"11343:6:22"},{"name":"tail_1","nodeType":"YulIdentifier","src":"11351:6:22"}],"functionName":{"name":"abi_encode_struct_NFCCard","nodeType":"YulIdentifier","src":"11317:25:22"},"nodeType":"YulFunctionCall","src":"11317:41:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11309:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11378:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11389:3:22","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11374:3:22"},"nodeType":"YulFunctionCall","src":"11374:19:22"},{"arguments":[{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"11409:6:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11402:6:22"},"nodeType":"YulFunctionCall","src":"11402:14:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11395:6:22"},"nodeType":"YulFunctionCall","src":"11395:22:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11367:6:22"},"nodeType":"YulFunctionCall","src":"11367:51:22"},"nodeType":"YulExpressionStatement","src":"11367:51:22"}]},"name":"abi_encode_tuple_t_enum$_MemberTier_$6818_t_uint256_t_string_memory_ptr_t_bool_t_struct$_NFCCard_$6829_memory_ptr_t_bool__to_t_uint8_t_uint256_t_string_memory_ptr_t_bool_t_struct$_NFCCard_$6829_memory_ptr_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10903:9:22","type":""},{"name":"value5","nodeType":"YulTypedName","src":"10914:6:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10922:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10930:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10938:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10946:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10954:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10965:4:22","type":""}],"src":"10662:762:22"},{"body":{"nodeType":"YulBlock","src":"11600:201:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11617:9:22"},{"name":"value0","nodeType":"YulIdentifier","src":"11628:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11610:6:22"},"nodeType":"YulFunctionCall","src":"11610:25:22"},"nodeType":"YulExpressionStatement","src":"11610:25:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11655:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11666:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11651:3:22"},"nodeType":"YulFunctionCall","src":"11651:18:22"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11685:6:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11678:6:22"},"nodeType":"YulFunctionCall","src":"11678:14:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11671:6:22"},"nodeType":"YulFunctionCall","src":"11671:22:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11644:6:22"},"nodeType":"YulFunctionCall","src":"11644:50:22"},"nodeType":"YulExpressionStatement","src":"11644:50:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11714:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11725:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11710:3:22"},"nodeType":"YulFunctionCall","src":"11710:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"11730:2:22","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11703:6:22"},"nodeType":"YulFunctionCall","src":"11703:30:22"},"nodeType":"YulExpressionStatement","src":"11703:30:22"},{"nodeType":"YulAssignment","src":"11742:53:22","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11768:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11780:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11791:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11776:3:22"},"nodeType":"YulFunctionCall","src":"11776:18:22"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"11750:17:22"},"nodeType":"YulFunctionCall","src":"11750:45:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11742:4:22"}]}]},"name":"abi_encode_tuple_t_uint256_t_bool_t_string_memory_ptr__to_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11553:9:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11564:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11572:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11580:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11591:4:22","type":""}],"src":"11429:372:22"},{"body":{"nodeType":"YulBlock","src":"11893:173:22","statements":[{"body":{"nodeType":"YulBlock","src":"11939:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11948:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11951:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11941:6:22"},"nodeType":"YulFunctionCall","src":"11941:12:22"},"nodeType":"YulExpressionStatement","src":"11941:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11914:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"11923:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11910:3:22"},"nodeType":"YulFunctionCall","src":"11910:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"11935:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11906:3:22"},"nodeType":"YulFunctionCall","src":"11906:32:22"},"nodeType":"YulIf","src":"11903:52:22"},{"nodeType":"YulAssignment","src":"11964:39:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11993:9:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"11974:18:22"},"nodeType":"YulFunctionCall","src":"11974:29:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11964:6:22"}]},{"nodeType":"YulAssignment","src":"12012:48:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12045:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"12056:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12041:3:22"},"nodeType":"YulFunctionCall","src":"12041:18:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"12022:18:22"},"nodeType":"YulFunctionCall","src":"12022:38:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12012:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11851:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11862:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11874:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11882:6:22","type":""}],"src":"11806:260:22"},{"body":{"nodeType":"YulBlock","src":"12126:325:22","statements":[{"nodeType":"YulAssignment","src":"12136:22:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12150:1:22","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"12153:4:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"12146:3:22"},"nodeType":"YulFunctionCall","src":"12146:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12136:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"12167:38:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12197:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"12203:1:22","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12193:3:22"},"nodeType":"YulFunctionCall","src":"12193:12:22"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"12171:18:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"12244:31:22","statements":[{"nodeType":"YulAssignment","src":"12246:27:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12260:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"12268:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12256:3:22"},"nodeType":"YulFunctionCall","src":"12256:17:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12246:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12224:18:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12217:6:22"},"nodeType":"YulFunctionCall","src":"12217:26:22"},"nodeType":"YulIf","src":"12214:61:22"},{"body":{"nodeType":"YulBlock","src":"12334:111:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12355:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12362:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"12367:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12358:3:22"},"nodeType":"YulFunctionCall","src":"12358:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12348:6:22"},"nodeType":"YulFunctionCall","src":"12348:31:22"},"nodeType":"YulExpressionStatement","src":"12348:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12399:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12402:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12392:6:22"},"nodeType":"YulFunctionCall","src":"12392:15:22"},"nodeType":"YulExpressionStatement","src":"12392:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12427:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12430:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12420:6:22"},"nodeType":"YulFunctionCall","src":"12420:15:22"},"nodeType":"YulExpressionStatement","src":"12420:15:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12290:18:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12313:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"12321:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12310:2:22"},"nodeType":"YulFunctionCall","src":"12310:14:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12287:2:22"},"nodeType":"YulFunctionCall","src":"12287:38:22"},"nodeType":"YulIf","src":"12284:161:22"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"12106:4:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12115:6:22","type":""}],"src":"12071:380:22"},{"body":{"nodeType":"YulBlock","src":"12630:170:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12647:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"12658:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12640:6:22"},"nodeType":"YulFunctionCall","src":"12640:21:22"},"nodeType":"YulExpressionStatement","src":"12640:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12681:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"12692:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12677:3:22"},"nodeType":"YulFunctionCall","src":"12677:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"12697:2:22","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12670:6:22"},"nodeType":"YulFunctionCall","src":"12670:30:22"},"nodeType":"YulExpressionStatement","src":"12670:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12720:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"12731:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12716:3:22"},"nodeType":"YulFunctionCall","src":"12716:18:22"},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","kind":"string","nodeType":"YulLiteral","src":"12736:22:22","type":"","value":"Token does not exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12709:6:22"},"nodeType":"YulFunctionCall","src":"12709:50:22"},"nodeType":"YulExpressionStatement","src":"12709:50:22"},{"nodeType":"YulAssignment","src":"12768:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12780:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"12791:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12776:3:22"},"nodeType":"YulFunctionCall","src":"12776:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12768:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12607:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12621:4:22","type":""}],"src":"12456:344:22"},{"body":{"nodeType":"YulBlock","src":"12979:182:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12996:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13007:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12989:6:22"},"nodeType":"YulFunctionCall","src":"12989:21:22"},"nodeType":"YulExpressionStatement","src":"12989:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13030:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13041:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13026:3:22"},"nodeType":"YulFunctionCall","src":"13026:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"13046:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13019:6:22"},"nodeType":"YulFunctionCall","src":"13019:30:22"},"nodeType":"YulExpressionStatement","src":"13019:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13069:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13080:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13065:3:22"},"nodeType":"YulFunctionCall","src":"13065:18:22"},{"hexValue":"4d656d62657220646f6573206e6f74206861766520616e204e46432063617264","kind":"string","nodeType":"YulLiteral","src":"13085:34:22","type":"","value":"Member does not have an NFC card"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13058:6:22"},"nodeType":"YulFunctionCall","src":"13058:62:22"},"nodeType":"YulExpressionStatement","src":"13058:62:22"},{"nodeType":"YulAssignment","src":"13129:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13141:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13152:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13137:3:22"},"nodeType":"YulFunctionCall","src":"13137:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13129:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_b29e0aab9e757fa31789ac85fd81ae5bd5d8890412c3f590b9908480e647e628__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12956:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12970:4:22","type":""}],"src":"12805:356:22"},{"body":{"nodeType":"YulBlock","src":"13305:150:22","statements":[{"nodeType":"YulVariableDeclaration","src":"13315:27:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13335:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13329:5:22"},"nodeType":"YulFunctionCall","src":"13329:13:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13319:6:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13390:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"13398:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13386:3:22"},"nodeType":"YulFunctionCall","src":"13386:17:22"},{"name":"pos","nodeType":"YulIdentifier","src":"13405:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"13410:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"13351:34:22"},"nodeType":"YulFunctionCall","src":"13351:66:22"},"nodeType":"YulExpressionStatement","src":"13351:66:22"},{"nodeType":"YulAssignment","src":"13426:23:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13437:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"13442:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13433:3:22"},"nodeType":"YulFunctionCall","src":"13433:16:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13426:3:22"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13281:3:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13286:6:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13297:3:22","type":""}],"src":"13166:289:22"},{"body":{"nodeType":"YulBlock","src":"13492:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13509:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13516:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"13521:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13512:3:22"},"nodeType":"YulFunctionCall","src":"13512:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13502:6:22"},"nodeType":"YulFunctionCall","src":"13502:31:22"},"nodeType":"YulExpressionStatement","src":"13502:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13549:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13552:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13542:6:22"},"nodeType":"YulFunctionCall","src":"13542:15:22"},"nodeType":"YulExpressionStatement","src":"13542:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13573:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13576:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13566:6:22"},"nodeType":"YulFunctionCall","src":"13566:15:22"},"nodeType":"YulExpressionStatement","src":"13566:15:22"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"13460:127:22"},{"body":{"nodeType":"YulBlock","src":"13641:79:22","statements":[{"nodeType":"YulAssignment","src":"13651:17:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13663:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"13666:1:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13659:3:22"},"nodeType":"YulFunctionCall","src":"13659:9:22"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"13651:4:22"}]},{"body":{"nodeType":"YulBlock","src":"13692:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13694:16:22"},"nodeType":"YulFunctionCall","src":"13694:18:22"},"nodeType":"YulExpressionStatement","src":"13694:18:22"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"13683:4:22"},{"name":"x","nodeType":"YulIdentifier","src":"13689:1:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13680:2:22"},"nodeType":"YulFunctionCall","src":"13680:11:22"},"nodeType":"YulIf","src":"13677:37:22"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13623:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"13626:1:22","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"13632:4:22","type":""}],"src":"13592:128:22"},{"body":{"nodeType":"YulBlock","src":"13880:159:22","statements":[{"nodeType":"YulAssignment","src":"13890:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13902:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13913:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13898:3:22"},"nodeType":"YulFunctionCall","src":"13898:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13890:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13952:6:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"13960:9:22"}],"functionName":{"name":"abi_encode_enum_MemberTier","nodeType":"YulIdentifier","src":"13925:26:22"},"nodeType":"YulFunctionCall","src":"13925:45:22"},"nodeType":"YulExpressionStatement","src":"13925:45:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14006:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14018:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"14029:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14014:3:22"},"nodeType":"YulFunctionCall","src":"14014:18:22"}],"functionName":{"name":"abi_encode_enum_MemberTier","nodeType":"YulIdentifier","src":"13979:26:22"},"nodeType":"YulFunctionCall","src":"13979:54:22"},"nodeType":"YulExpressionStatement","src":"13979:54:22"}]},"name":"abi_encode_tuple_t_enum$_MemberTier_$6818_t_enum$_MemberTier_$6818__to_t_uint8_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13841:9:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13852:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13860:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13871:4:22","type":""}],"src":"13725:314:22"},{"body":{"nodeType":"YulBlock","src":"14201:218:22","statements":[{"nodeType":"YulAssignment","src":"14211:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14223:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"14234:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14219:3:22"},"nodeType":"YulFunctionCall","src":"14219:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14211:4:22"}]},{"nodeType":"YulVariableDeclaration","src":"14246:29:22","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14264:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"14269:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14260:3:22"},"nodeType":"YulFunctionCall","src":"14260:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"14273:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14256:3:22"},"nodeType":"YulFunctionCall","src":"14256:19:22"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"14250:2:22","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14291:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14306:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"14314:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14302:3:22"},"nodeType":"YulFunctionCall","src":"14302:15:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14284:6:22"},"nodeType":"YulFunctionCall","src":"14284:34:22"},"nodeType":"YulExpressionStatement","src":"14284:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14338:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"14349:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14334:3:22"},"nodeType":"YulFunctionCall","src":"14334:18:22"},{"name":"value1","nodeType":"YulIdentifier","src":"14354:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14327:6:22"},"nodeType":"YulFunctionCall","src":"14327:34:22"},"nodeType":"YulExpressionStatement","src":"14327:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14381:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"14392:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14377:3:22"},"nodeType":"YulFunctionCall","src":"14377:18:22"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"14401:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"14409:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14397:3:22"},"nodeType":"YulFunctionCall","src":"14397:15:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14370:6:22"},"nodeType":"YulFunctionCall","src":"14370:43:22"},"nodeType":"YulExpressionStatement","src":"14370:43:22"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14154:9:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14165:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14173:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14181:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14192:4:22","type":""}],"src":"14044:375:22"},{"body":{"nodeType":"YulBlock","src":"14476:116:22","statements":[{"nodeType":"YulAssignment","src":"14486:20:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14501:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"14504:1:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14497:3:22"},"nodeType":"YulFunctionCall","src":"14497:9:22"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"14486:7:22"}]},{"body":{"nodeType":"YulBlock","src":"14564:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14566:16:22"},"nodeType":"YulFunctionCall","src":"14566:18:22"},"nodeType":"YulExpressionStatement","src":"14566:18:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14535:1:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14528:6:22"},"nodeType":"YulFunctionCall","src":"14528:9:22"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14542:1:22"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"14549:7:22"},{"name":"x","nodeType":"YulIdentifier","src":"14558:1:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"14545:3:22"},"nodeType":"YulFunctionCall","src":"14545:15:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14539:2:22"},"nodeType":"YulFunctionCall","src":"14539:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"14525:2:22"},"nodeType":"YulFunctionCall","src":"14525:37:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14518:6:22"},"nodeType":"YulFunctionCall","src":"14518:45:22"},"nodeType":"YulIf","src":"14515:71:22"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14455:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"14458:1:22","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"14464:7:22","type":""}],"src":"14424:168:22"},{"body":{"nodeType":"YulBlock","src":"14629:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14646:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14653:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"14658:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14649:3:22"},"nodeType":"YulFunctionCall","src":"14649:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14639:6:22"},"nodeType":"YulFunctionCall","src":"14639:31:22"},"nodeType":"YulExpressionStatement","src":"14639:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14686:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14689:4:22","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14679:6:22"},"nodeType":"YulFunctionCall","src":"14679:15:22"},"nodeType":"YulExpressionStatement","src":"14679:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14710:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14713:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14703:6:22"},"nodeType":"YulFunctionCall","src":"14703:15:22"},"nodeType":"YulExpressionStatement","src":"14703:15:22"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"14597:127:22"},{"body":{"nodeType":"YulBlock","src":"14775:171:22","statements":[{"body":{"nodeType":"YulBlock","src":"14806:111:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14827:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14834:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"14839:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14830:3:22"},"nodeType":"YulFunctionCall","src":"14830:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14820:6:22"},"nodeType":"YulFunctionCall","src":"14820:31:22"},"nodeType":"YulExpressionStatement","src":"14820:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14871:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14874:4:22","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14864:6:22"},"nodeType":"YulFunctionCall","src":"14864:15:22"},"nodeType":"YulExpressionStatement","src":"14864:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14899:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14902:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14892:6:22"},"nodeType":"YulFunctionCall","src":"14892:15:22"},"nodeType":"YulExpressionStatement","src":"14892:15:22"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14795:1:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14788:6:22"},"nodeType":"YulFunctionCall","src":"14788:9:22"},"nodeType":"YulIf","src":"14785:132:22"},{"nodeType":"YulAssignment","src":"14926:14:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14935:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"14938:1:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"14931:3:22"},"nodeType":"YulFunctionCall","src":"14931:9:22"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"14926:1:22"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14760:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"14763:1:22","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"14769:1:22","type":""}],"src":"14729:217:22"},{"body":{"nodeType":"YulBlock","src":"15007:65:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15024:1:22","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"15027:3:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15017:6:22"},"nodeType":"YulFunctionCall","src":"15017:14:22"},"nodeType":"YulExpressionStatement","src":"15017:14:22"},{"nodeType":"YulAssignment","src":"15040:26:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15058:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15061:4:22","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"15048:9:22"},"nodeType":"YulFunctionCall","src":"15048:18:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"15040:4:22"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"14990:3:22","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"14998:4:22","type":""}],"src":"14951:121:22"},{"body":{"nodeType":"YulBlock","src":"15195:845:22","statements":[{"nodeType":"YulVariableDeclaration","src":"15205:12:22","value":{"kind":"number","nodeType":"YulLiteral","src":"15215:2:22","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"15209:2:22","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15233:9:22"},{"name":"_1","nodeType":"YulIdentifier","src":"15244:2:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15226:6:22"},"nodeType":"YulFunctionCall","src":"15226:21:22"},"nodeType":"YulExpressionStatement","src":"15226:21:22"},{"nodeType":"YulVariableDeclaration","src":"15256:12:22","value":{"kind":"number","nodeType":"YulLiteral","src":"15267:1:22","type":"","value":"0"},"variables":[{"name":"ret","nodeType":"YulTypedName","src":"15260:3:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15277:30:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15300:6:22"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"15294:5:22"},"nodeType":"YulFunctionCall","src":"15294:13:22"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"15281:9:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15316:50:22","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"15356:9:22"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"15330:25:22"},"nodeType":"YulFunctionCall","src":"15330:36:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15320:6:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15386:9:22"},{"name":"_1","nodeType":"YulIdentifier","src":"15397:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15382:3:22"},"nodeType":"YulFunctionCall","src":"15382:18:22"},{"name":"length","nodeType":"YulIdentifier","src":"15402:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15375:6:22"},"nodeType":"YulFunctionCall","src":"15375:34:22"},"nodeType":"YulExpressionStatement","src":"15375:34:22"},{"nodeType":"YulVariableDeclaration","src":"15418:12:22","value":{"kind":"number","nodeType":"YulLiteral","src":"15428:2:22","type":"","value":"64"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"15422:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15439:11:22","value":{"kind":"number","nodeType":"YulLiteral","src":"15449:1:22","type":"","value":"1"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"15443:2:22","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"15500:151:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15525:9:22"},{"name":"_2","nodeType":"YulIdentifier","src":"15536:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15521:3:22"},"nodeType":"YulFunctionCall","src":"15521:18:22"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"15545:9:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15560:3:22","type":"","value":"255"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15556:3:22"},"nodeType":"YulFunctionCall","src":"15556:8:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15541:3:22"},"nodeType":"YulFunctionCall","src":"15541:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15514:6:22"},"nodeType":"YulFunctionCall","src":"15514:52:22"},"nodeType":"YulExpressionStatement","src":"15514:52:22"},{"nodeType":"YulAssignment","src":"15579:62:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15594:9:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15609:1:22","type":"","value":"5"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15626:6:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15619:6:22"},"nodeType":"YulFunctionCall","src":"15619:14:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15612:6:22"},"nodeType":"YulFunctionCall","src":"15612:22:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15605:3:22"},"nodeType":"YulFunctionCall","src":"15605:30:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15590:3:22"},"nodeType":"YulFunctionCall","src":"15590:46:22"},{"name":"_2","nodeType":"YulIdentifier","src":"15638:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15586:3:22"},"nodeType":"YulFunctionCall","src":"15586:55:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"15579:3:22"}]}]},"nodeType":"YulCase","src":"15493:158:22","value":{"kind":"number","nodeType":"YulLiteral","src":"15498:1:22","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"15667:347:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15688:1:22","type":"","value":"0"},{"name":"value0","nodeType":"YulIdentifier","src":"15691:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15681:6:22"},"nodeType":"YulFunctionCall","src":"15681:17:22"},"nodeType":"YulExpressionStatement","src":"15681:17:22"},{"nodeType":"YulVariableDeclaration","src":"15711:31:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15736:1:22","type":"","value":"0"},{"name":"_1","nodeType":"YulIdentifier","src":"15739:2:22"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"15726:9:22"},"nodeType":"YulFunctionCall","src":"15726:16:22"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"15715:7:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15755:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"15764:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"15759:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"15832:126:22","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15865:9:22"},{"name":"i","nodeType":"YulIdentifier","src":"15876:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15861:3:22"},"nodeType":"YulFunctionCall","src":"15861:17:22"},{"name":"_2","nodeType":"YulIdentifier","src":"15880:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15857:3:22"},"nodeType":"YulFunctionCall","src":"15857:26:22"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"15891:7:22"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"15885:5:22"},"nodeType":"YulFunctionCall","src":"15885:14:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15850:6:22"},"nodeType":"YulFunctionCall","src":"15850:50:22"},"nodeType":"YulExpressionStatement","src":"15850:50:22"},{"nodeType":"YulAssignment","src":"15917:27:22","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"15932:7:22"},{"name":"_3","nodeType":"YulIdentifier","src":"15941:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15928:3:22"},"nodeType":"YulFunctionCall","src":"15928:16:22"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"15917:7:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15789:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"15792:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15786:2:22"},"nodeType":"YulFunctionCall","src":"15786:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15800:19:22","statements":[{"nodeType":"YulAssignment","src":"15802:15:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15811:1:22"},{"name":"_1","nodeType":"YulIdentifier","src":"15814:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15807:3:22"},"nodeType":"YulFunctionCall","src":"15807:10:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"15802:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"15782:3:22","statements":[]},"src":"15778:180:22"},{"nodeType":"YulAssignment","src":"15971:33:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15986:9:22"},{"name":"i","nodeType":"YulIdentifier","src":"15997:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15982:3:22"},"nodeType":"YulFunctionCall","src":"15982:17:22"},{"name":"_2","nodeType":"YulIdentifier","src":"16001:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15978:3:22"},"nodeType":"YulFunctionCall","src":"15978:26:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"15971:3:22"}]}]},"nodeType":"YulCase","src":"15660:354:22","value":{"kind":"number","nodeType":"YulLiteral","src":"15665:1:22","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"15470:9:22"},{"name":"_3","nodeType":"YulIdentifier","src":"15481:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15466:3:22"},"nodeType":"YulFunctionCall","src":"15466:18:22"},"nodeType":"YulSwitch","src":"15459:555:22"},{"nodeType":"YulAssignment","src":"16023:11:22","value":{"name":"ret","nodeType":"YulIdentifier","src":"16031:3:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16023:4:22"}]}]},"name":"abi_encode_tuple_t_string_storage__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15164:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15175:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15186:4:22","type":""}],"src":"15077:963:22"},{"body":{"nodeType":"YulBlock","src":"16219:172:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16236:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"16247:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16229:6:22"},"nodeType":"YulFunctionCall","src":"16229:21:22"},"nodeType":"YulExpressionStatement","src":"16229:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16270:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"16281:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16266:3:22"},"nodeType":"YulFunctionCall","src":"16266:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"16286:2:22","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16259:6:22"},"nodeType":"YulFunctionCall","src":"16259:30:22"},"nodeType":"YulExpressionStatement","src":"16259:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16309:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"16320:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16305:3:22"},"nodeType":"YulFunctionCall","src":"16305:18:22"},{"hexValue":"4e6f7420617574686f72697a656420746f206d696e74","kind":"string","nodeType":"YulLiteral","src":"16325:24:22","type":"","value":"Not authorized to mint"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16298:6:22"},"nodeType":"YulFunctionCall","src":"16298:52:22"},"nodeType":"YulExpressionStatement","src":"16298:52:22"},{"nodeType":"YulAssignment","src":"16359:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16371:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"16382:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16367:3:22"},"nodeType":"YulFunctionCall","src":"16367:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16359:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16196:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16210:4:22","type":""}],"src":"16045:346:22"},{"body":{"nodeType":"YulBlock","src":"16570:177:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16587:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"16598:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16580:6:22"},"nodeType":"YulFunctionCall","src":"16580:21:22"},"nodeType":"YulExpressionStatement","src":"16580:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16621:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"16632:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16617:3:22"},"nodeType":"YulFunctionCall","src":"16617:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"16637:2:22","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16610:6:22"},"nodeType":"YulFunctionCall","src":"16610:30:22"},"nodeType":"YulExpressionStatement","src":"16610:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16660:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"16671:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16656:3:22"},"nodeType":"YulFunctionCall","src":"16656:18:22"},{"hexValue":"43616e6e6f74206d696e7420746f207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"16676:29:22","type":"","value":"Cannot mint to zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16649:6:22"},"nodeType":"YulFunctionCall","src":"16649:57:22"},"nodeType":"YulExpressionStatement","src":"16649:57:22"},{"nodeType":"YulAssignment","src":"16715:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16727:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"16738:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16723:3:22"},"nodeType":"YulFunctionCall","src":"16723:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16715:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16547:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16561:4:22","type":""}],"src":"16396:351:22"},{"body":{"nodeType":"YulBlock","src":"16926:176:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16943:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"16954:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16936:6:22"},"nodeType":"YulFunctionCall","src":"16936:21:22"},"nodeType":"YulExpressionStatement","src":"16936:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16977:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"16988:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16973:3:22"},"nodeType":"YulFunctionCall","src":"16973:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"16993:2:22","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16966:6:22"},"nodeType":"YulFunctionCall","src":"16966:30:22"},"nodeType":"YulExpressionStatement","src":"16966:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17016:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"17027:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17012:3:22"},"nodeType":"YulFunctionCall","src":"17012:18:22"},{"hexValue":"4d656d62657220616c726561647920686173206120746f6b656e","kind":"string","nodeType":"YulLiteral","src":"17032:28:22","type":"","value":"Member already has a token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17005:6:22"},"nodeType":"YulFunctionCall","src":"17005:56:22"},"nodeType":"YulExpressionStatement","src":"17005:56:22"},{"nodeType":"YulAssignment","src":"17070:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17082:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"17093:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17078:3:22"},"nodeType":"YulFunctionCall","src":"17078:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17070:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_bbd75e48baed3f30fbfc2970a751ea32d0284d9d338895802bf1a6041c2e8aa0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16903:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16917:4:22","type":""}],"src":"16752:350:22"},{"body":{"nodeType":"YulBlock","src":"17281:175:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17298:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"17309:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17291:6:22"},"nodeType":"YulFunctionCall","src":"17291:21:22"},"nodeType":"YulExpressionStatement","src":"17291:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17332:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"17343:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17328:3:22"},"nodeType":"YulFunctionCall","src":"17328:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"17348:2:22","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17321:6:22"},"nodeType":"YulFunctionCall","src":"17321:30:22"},"nodeType":"YulExpressionStatement","src":"17321:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17371:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"17382:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17367:3:22"},"nodeType":"YulFunctionCall","src":"17367:18:22"},{"hexValue":"546f6b656e205552492063616e6e6f7420626520656d707479","kind":"string","nodeType":"YulLiteral","src":"17387:27:22","type":"","value":"Token URI cannot be empty"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17360:6:22"},"nodeType":"YulFunctionCall","src":"17360:55:22"},"nodeType":"YulExpressionStatement","src":"17360:55:22"},{"nodeType":"YulAssignment","src":"17424:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17436:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"17447:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17432:3:22"},"nodeType":"YulFunctionCall","src":"17432:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17424:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_d633f097afe2c3b3efba3957b2369f4231e0e493227ac0996c0f90cc0a5005e9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17258:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17272:4:22","type":""}],"src":"17107:349:22"},{"body":{"nodeType":"YulBlock","src":"17508:88:22","statements":[{"body":{"nodeType":"YulBlock","src":"17539:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17541:16:22"},"nodeType":"YulFunctionCall","src":"17541:18:22"},"nodeType":"YulExpressionStatement","src":"17541:18:22"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17524:5:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17535:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17531:3:22"},"nodeType":"YulFunctionCall","src":"17531:6:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17521:2:22"},"nodeType":"YulFunctionCall","src":"17521:17:22"},"nodeType":"YulIf","src":"17518:43:22"},{"nodeType":"YulAssignment","src":"17570:20:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17581:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"17588:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17577:3:22"},"nodeType":"YulFunctionCall","src":"17577:13:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"17570:3:22"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17490:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"17500:3:22","type":""}],"src":"17461:135:22"},{"body":{"nodeType":"YulBlock","src":"17682:464:22","statements":[{"body":{"nodeType":"YulBlock","src":"17715:425:22","statements":[{"nodeType":"YulVariableDeclaration","src":"17729:11:22","value":{"kind":"number","nodeType":"YulLiteral","src":"17739:1:22","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"17733:2:22","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"17760:2:22"},{"name":"array","nodeType":"YulIdentifier","src":"17764:5:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17753:6:22"},"nodeType":"YulFunctionCall","src":"17753:17:22"},"nodeType":"YulExpressionStatement","src":"17753:17:22"},{"nodeType":"YulVariableDeclaration","src":"17783:31:22","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"17805:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"17809:4:22","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"17795:9:22"},"nodeType":"YulFunctionCall","src":"17795:19:22"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"17787:4:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17827:57:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"17850:4:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17860:1:22","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"17867:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"17879:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17863:3:22"},"nodeType":"YulFunctionCall","src":"17863:19:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"17856:3:22"},"nodeType":"YulFunctionCall","src":"17856:27:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17846:3:22"},"nodeType":"YulFunctionCall","src":"17846:38:22"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"17831:11:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"17921:23:22","statements":[{"nodeType":"YulAssignment","src":"17923:19:22","value":{"name":"data","nodeType":"YulIdentifier","src":"17938:4:22"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"17923:11:22"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"17903:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"17915:4:22","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17900:2:22"},"nodeType":"YulFunctionCall","src":"17900:20:22"},"nodeType":"YulIf","src":"17897:47:22"},{"nodeType":"YulVariableDeclaration","src":"17957:41:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"17971:4:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17981:1:22","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"17988:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"17993:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17984:3:22"},"nodeType":"YulFunctionCall","src":"17984:12:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"17977:3:22"},"nodeType":"YulFunctionCall","src":"17977:20:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17967:3:22"},"nodeType":"YulFunctionCall","src":"17967:31:22"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"17961:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18011:24:22","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"18024:11:22"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"18015:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"18109:21:22","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"18118:5:22"},{"name":"_1","nodeType":"YulIdentifier","src":"18125:2:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"18111:6:22"},"nodeType":"YulFunctionCall","src":"18111:17:22"},"nodeType":"YulExpressionStatement","src":"18111:17:22"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"18059:5:22"},{"name":"_2","nodeType":"YulIdentifier","src":"18066:2:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18056:2:22"},"nodeType":"YulFunctionCall","src":"18056:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18070:26:22","statements":[{"nodeType":"YulAssignment","src":"18072:22:22","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"18085:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"18092:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18081:3:22"},"nodeType":"YulFunctionCall","src":"18081:13:22"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"18072:5:22"}]}]},"pre":{"nodeType":"YulBlock","src":"18052:3:22","statements":[]},"src":"18048:82:22"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"17698:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"17703:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17695:2:22"},"nodeType":"YulFunctionCall","src":"17695:11:22"},"nodeType":"YulIf","src":"17692:448:22"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"17654:5:22","type":""},{"name":"len","nodeType":"YulTypedName","src":"17661:3:22","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"17666:10:22","type":""}],"src":"17601:545:22"},{"body":{"nodeType":"YulBlock","src":"18236:81:22","statements":[{"nodeType":"YulAssignment","src":"18246:65:22","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18261:4:22"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18279:1:22","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"18282:3:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18275:3:22"},"nodeType":"YulFunctionCall","src":"18275:11:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18292:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18288:3:22"},"nodeType":"YulFunctionCall","src":"18288:6:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18271:3:22"},"nodeType":"YulFunctionCall","src":"18271:24:22"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18267:3:22"},"nodeType":"YulFunctionCall","src":"18267:29:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18257:3:22"},"nodeType":"YulFunctionCall","src":"18257:40:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18303:1:22","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"18306:3:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18299:3:22"},"nodeType":"YulFunctionCall","src":"18299:11:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"18254:2:22"},"nodeType":"YulFunctionCall","src":"18254:57:22"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"18246:4:22"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"18213:4:22","type":""},{"name":"len","nodeType":"YulTypedName","src":"18219:3:22","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"18227:4:22","type":""}],"src":"18151:166:22"},{"body":{"nodeType":"YulBlock","src":"18418:1256:22","statements":[{"nodeType":"YulVariableDeclaration","src":"18428:24:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18448:3:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18442:5:22"},"nodeType":"YulFunctionCall","src":"18442:10:22"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"18432:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"18495:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"18497:16:22"},"nodeType":"YulFunctionCall","src":"18497:18:22"},"nodeType":"YulExpressionStatement","src":"18497:18:22"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"18467:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"18475:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18464:2:22"},"nodeType":"YulFunctionCall","src":"18464:30:22"},"nodeType":"YulIf","src":"18461:56:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18570:4:22"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18608:4:22"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"18602:5:22"},"nodeType":"YulFunctionCall","src":"18602:11:22"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"18576:25:22"},"nodeType":"YulFunctionCall","src":"18576:38:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"18616:6:22"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"18526:43:22"},"nodeType":"YulFunctionCall","src":"18526:97:22"},"nodeType":"YulExpressionStatement","src":"18526:97:22"},{"nodeType":"YulVariableDeclaration","src":"18632:18:22","value":{"kind":"number","nodeType":"YulLiteral","src":"18649:1:22","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"18636:9:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18659:23:22","value":{"kind":"number","nodeType":"YulLiteral","src":"18678:4:22","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"18663:11:22","type":""}]},{"nodeType":"YulAssignment","src":"18691:24:22","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"18704:11:22"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"18691:9:22"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"18761:656:22","statements":[{"nodeType":"YulVariableDeclaration","src":"18775:35:22","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"18794:6:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18806:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18802:3:22"},"nodeType":"YulFunctionCall","src":"18802:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18790:3:22"},"nodeType":"YulFunctionCall","src":"18790:20:22"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"18779:7:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18823:49:22","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18867:4:22"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"18837:29:22"},"nodeType":"YulFunctionCall","src":"18837:35:22"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"18827:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18885:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"18894:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"18889:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"18972:172:22","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"18997:6:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19015:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"19020:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19011:3:22"},"nodeType":"YulFunctionCall","src":"19011:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19005:5:22"},"nodeType":"YulFunctionCall","src":"19005:26:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"18990:6:22"},"nodeType":"YulFunctionCall","src":"18990:42:22"},"nodeType":"YulExpressionStatement","src":"18990:42:22"},{"nodeType":"YulAssignment","src":"19049:24:22","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"19063:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"19071:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19059:3:22"},"nodeType":"YulFunctionCall","src":"19059:14:22"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"19049:6:22"}]},{"nodeType":"YulAssignment","src":"19090:40:22","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"19107:9:22"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"19118:11:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19103:3:22"},"nodeType":"YulFunctionCall","src":"19103:27:22"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"19090:9:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18919:1:22"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"18922:7:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18916:2:22"},"nodeType":"YulFunctionCall","src":"18916:14:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18931:28:22","statements":[{"nodeType":"YulAssignment","src":"18933:24:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18942:1:22"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"18945:11:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18938:3:22"},"nodeType":"YulFunctionCall","src":"18938:19:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"18933:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"18912:3:22","statements":[]},"src":"18908:236:22"},{"body":{"nodeType":"YulBlock","src":"19192:166:22","statements":[{"nodeType":"YulVariableDeclaration","src":"19210:43:22","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19237:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"19242:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19233:3:22"},"nodeType":"YulFunctionCall","src":"19233:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19227:5:22"},"nodeType":"YulFunctionCall","src":"19227:26:22"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"19214:9:22","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"19277:6:22"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"19289:9:22"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19316:1:22","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"19319:6:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19312:3:22"},"nodeType":"YulFunctionCall","src":"19312:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"19328:3:22","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19308:3:22"},"nodeType":"YulFunctionCall","src":"19308:24:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19338:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19334:3:22"},"nodeType":"YulFunctionCall","src":"19334:6:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"19304:3:22"},"nodeType":"YulFunctionCall","src":"19304:37:22"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19300:3:22"},"nodeType":"YulFunctionCall","src":"19300:42:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19285:3:22"},"nodeType":"YulFunctionCall","src":"19285:58:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19270:6:22"},"nodeType":"YulFunctionCall","src":"19270:74:22"},"nodeType":"YulExpressionStatement","src":"19270:74:22"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"19163:7:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"19172:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19160:2:22"},"nodeType":"YulFunctionCall","src":"19160:19:22"},"nodeType":"YulIf","src":"19157:201:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19378:4:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19392:1:22","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"19395:6:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19388:3:22"},"nodeType":"YulFunctionCall","src":"19388:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"19404:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19384:3:22"},"nodeType":"YulFunctionCall","src":"19384:22:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19371:6:22"},"nodeType":"YulFunctionCall","src":"19371:36:22"},"nodeType":"YulExpressionStatement","src":"19371:36:22"}]},"nodeType":"YulCase","src":"18754:663:22","value":{"kind":"number","nodeType":"YulLiteral","src":"18759:1:22","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"19434:234:22","statements":[{"nodeType":"YulVariableDeclaration","src":"19448:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"19461:1:22","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"19452:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"19497:67:22","statements":[{"nodeType":"YulAssignment","src":"19515:35:22","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19534:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"19539:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19530:3:22"},"nodeType":"YulFunctionCall","src":"19530:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19524:5:22"},"nodeType":"YulFunctionCall","src":"19524:26:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19515:5:22"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"19478:6:22"},"nodeType":"YulIf","src":"19475:89:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19584:4:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19643:5:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"19650:6:22"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"19590:52:22"},"nodeType":"YulFunctionCall","src":"19590:67:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19577:6:22"},"nodeType":"YulFunctionCall","src":"19577:81:22"},"nodeType":"YulExpressionStatement","src":"19577:81:22"}]},"nodeType":"YulCase","src":"19426:242:22","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"18734:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"18742:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18731:2:22"},"nodeType":"YulFunctionCall","src":"18731:14:22"},"nodeType":"YulSwitch","src":"18724:944:22"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"18403:4:22","type":""},{"name":"src","nodeType":"YulTypedName","src":"18409:3:22","type":""}],"src":"18322:1352:22"},{"body":{"nodeType":"YulBlock","src":"19841:162:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19878:6:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"19886:9:22"}],"functionName":{"name":"abi_encode_enum_MemberTier","nodeType":"YulIdentifier","src":"19851:26:22"},"nodeType":"YulFunctionCall","src":"19851:45:22"},"nodeType":"YulExpressionStatement","src":"19851:45:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19916:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"19927:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19912:3:22"},"nodeType":"YulFunctionCall","src":"19912:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"19932:2:22","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19905:6:22"},"nodeType":"YulFunctionCall","src":"19905:30:22"},"nodeType":"YulExpressionStatement","src":"19905:30:22"},{"nodeType":"YulAssignment","src":"19944:53:22","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19970:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19982:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"19993:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19978:3:22"},"nodeType":"YulFunctionCall","src":"19978:18:22"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"19952:17:22"},"nodeType":"YulFunctionCall","src":"19952:45:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19944:4:22"}]}]},"name":"abi_encode_tuple_t_enum$_MemberTier_$6818_t_string_memory_ptr__to_t_uint8_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19802:9:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19813:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19821:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19832:4:22","type":""}],"src":"19679:324:22"},{"body":{"nodeType":"YulBlock","src":"20182:173:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20199:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"20210:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20192:6:22"},"nodeType":"YulFunctionCall","src":"20192:21:22"},"nodeType":"YulExpressionStatement","src":"20192:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20233:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"20244:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20229:3:22"},"nodeType":"YulFunctionCall","src":"20229:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"20249:2:22","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20222:6:22"},"nodeType":"YulFunctionCall","src":"20222:30:22"},"nodeType":"YulExpressionStatement","src":"20222:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20272:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"20283:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20268:3:22"},"nodeType":"YulFunctionCall","src":"20268:18:22"},{"hexValue":"436172642049442063616e6e6f7420626520656d707479","kind":"string","nodeType":"YulLiteral","src":"20288:25:22","type":"","value":"Card ID cannot be empty"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20261:6:22"},"nodeType":"YulFunctionCall","src":"20261:53:22"},"nodeType":"YulExpressionStatement","src":"20261:53:22"},{"nodeType":"YulAssignment","src":"20323:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20335:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"20346:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20331:3:22"},"nodeType":"YulFunctionCall","src":"20331:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20323:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_c7bafc2e0f4372a5b344c2a3be3502b5e1e0ddc1f4f4ceb9f51bd7ff71b29a1f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20159:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20173:4:22","type":""}],"src":"20008:347:22"},{"body":{"nodeType":"YulBlock","src":"20534:173:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20551:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"20562:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20544:6:22"},"nodeType":"YulFunctionCall","src":"20544:21:22"},"nodeType":"YulExpressionStatement","src":"20544:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20585:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"20596:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20581:3:22"},"nodeType":"YulFunctionCall","src":"20581:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"20601:2:22","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20574:6:22"},"nodeType":"YulFunctionCall","src":"20574:30:22"},"nodeType":"YulExpressionStatement","src":"20574:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20624:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"20635:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20620:3:22"},"nodeType":"YulFunctionCall","src":"20620:18:22"},{"hexValue":"4e4643206361726420616c726561647920657869737473","kind":"string","nodeType":"YulLiteral","src":"20640:25:22","type":"","value":"NFC card already exists"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20613:6:22"},"nodeType":"YulFunctionCall","src":"20613:53:22"},"nodeType":"YulExpressionStatement","src":"20613:53:22"},{"nodeType":"YulAssignment","src":"20675:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20687:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"20698:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20683:3:22"},"nodeType":"YulFunctionCall","src":"20683:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20675:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_3028800c1dbdd60b51d79f5eeb02acf0deac096bf4f2573b511ed379bc891d8c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20511:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20525:4:22","type":""}],"src":"20360:347:22"},{"body":{"nodeType":"YulBlock","src":"20886:180:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20903:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"20914:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20896:6:22"},"nodeType":"YulFunctionCall","src":"20896:21:22"},"nodeType":"YulExpressionStatement","src":"20896:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20937:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"20948:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20933:3:22"},"nodeType":"YulFunctionCall","src":"20933:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"20953:2:22","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20926:6:22"},"nodeType":"YulFunctionCall","src":"20926:30:22"},"nodeType":"YulExpressionStatement","src":"20926:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20976:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"20987:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20972:3:22"},"nodeType":"YulFunctionCall","src":"20972:18:22"},{"hexValue":"4d656d62657220616c72656164792068617320616e204e46432063617264","kind":"string","nodeType":"YulLiteral","src":"20992:32:22","type":"","value":"Member already has an NFC card"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20965:6:22"},"nodeType":"YulFunctionCall","src":"20965:60:22"},"nodeType":"YulExpressionStatement","src":"20965:60:22"},{"nodeType":"YulAssignment","src":"21034:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21046:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"21057:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21042:3:22"},"nodeType":"YulFunctionCall","src":"21042:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21034:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_1d6dc8c911703b86f29b06d0db96f40df5f282ec62d37ba092827035c01178fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20863:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20877:4:22","type":""}],"src":"20712:354:22"},{"body":{"nodeType":"YulBlock","src":"21240:214:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21257:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"21268:2:22","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21250:6:22"},"nodeType":"YulFunctionCall","src":"21250:21:22"},"nodeType":"YulExpressionStatement","src":"21250:21:22"},{"nodeType":"YulVariableDeclaration","src":"21280:59:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21312:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21324:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"21335:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21320:3:22"},"nodeType":"YulFunctionCall","src":"21320:18:22"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"21294:17:22"},"nodeType":"YulFunctionCall","src":"21294:45:22"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"21284:6:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21359:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"21370:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21355:3:22"},"nodeType":"YulFunctionCall","src":"21355:18:22"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"21379:6:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"21387:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21375:3:22"},"nodeType":"YulFunctionCall","src":"21375:22:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21348:6:22"},"nodeType":"YulFunctionCall","src":"21348:50:22"},"nodeType":"YulExpressionStatement","src":"21348:50:22"},{"nodeType":"YulAssignment","src":"21407:41:22","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21433:6:22"},{"name":"tail_1","nodeType":"YulIdentifier","src":"21441:6:22"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"21415:17:22"},"nodeType":"YulFunctionCall","src":"21415:33:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21407:4:22"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21201:9:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21212:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21220:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21231:4:22","type":""}],"src":"21071:383:22"},{"body":{"nodeType":"YulBlock","src":"21633:173:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21650:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"21661:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21643:6:22"},"nodeType":"YulFunctionCall","src":"21643:21:22"},"nodeType":"YulExpressionStatement","src":"21643:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21684:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"21695:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21680:3:22"},"nodeType":"YulFunctionCall","src":"21680:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"21700:2:22","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21673:6:22"},"nodeType":"YulFunctionCall","src":"21673:30:22"},"nodeType":"YulExpressionStatement","src":"21673:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21723:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"21734:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21719:3:22"},"nodeType":"YulFunctionCall","src":"21719:18:22"},{"hexValue":"4e4643206361726420646f6573206e6f74206578697374","kind":"string","nodeType":"YulLiteral","src":"21739:25:22","type":"","value":"NFC card does not exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21712:6:22"},"nodeType":"YulFunctionCall","src":"21712:53:22"},"nodeType":"YulExpressionStatement","src":"21712:53:22"},{"nodeType":"YulAssignment","src":"21774:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21786:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"21797:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21782:3:22"},"nodeType":"YulFunctionCall","src":"21782:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21774:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_05ce55e5de52b8b5808930586694950ca0eee6f4925a9fe48816241091de8ee9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21610:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21624:4:22","type":""}],"src":"21459:347:22"},{"body":{"nodeType":"YulBlock","src":"22014:286:22","statements":[{"nodeType":"YulVariableDeclaration","src":"22024:29:22","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22042:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"22047:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22038:3:22"},"nodeType":"YulFunctionCall","src":"22038:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"22051:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22034:3:22"},"nodeType":"YulFunctionCall","src":"22034:19:22"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"22028:2:22","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22069:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22084:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"22092:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22080:3:22"},"nodeType":"YulFunctionCall","src":"22080:15:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22062:6:22"},"nodeType":"YulFunctionCall","src":"22062:34:22"},"nodeType":"YulExpressionStatement","src":"22062:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22116:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"22127:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22112:3:22"},"nodeType":"YulFunctionCall","src":"22112:18:22"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22136:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"22144:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22132:3:22"},"nodeType":"YulFunctionCall","src":"22132:15:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22105:6:22"},"nodeType":"YulFunctionCall","src":"22105:43:22"},"nodeType":"YulExpressionStatement","src":"22105:43:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22168:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"22179:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22164:3:22"},"nodeType":"YulFunctionCall","src":"22164:18:22"},{"name":"value2","nodeType":"YulIdentifier","src":"22184:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22157:6:22"},"nodeType":"YulFunctionCall","src":"22157:34:22"},"nodeType":"YulExpressionStatement","src":"22157:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22211:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"22222:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22207:3:22"},"nodeType":"YulFunctionCall","src":"22207:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"22227:3:22","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22200:6:22"},"nodeType":"YulFunctionCall","src":"22200:31:22"},"nodeType":"YulExpressionStatement","src":"22200:31:22"},{"nodeType":"YulAssignment","src":"22240:54:22","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"22266:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22278:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"22289:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22274:3:22"},"nodeType":"YulFunctionCall","src":"22274:19:22"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"22248:17:22"},"nodeType":"YulFunctionCall","src":"22248:46:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22240:4:22"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21959:9:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21970:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21978:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21986:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21994:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22005:4:22","type":""}],"src":"21811:489:22"},{"body":{"nodeType":"YulBlock","src":"22385:169:22","statements":[{"body":{"nodeType":"YulBlock","src":"22431:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22440:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22443:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22433:6:22"},"nodeType":"YulFunctionCall","src":"22433:12:22"},"nodeType":"YulExpressionStatement","src":"22433:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"22406:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"22415:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22402:3:22"},"nodeType":"YulFunctionCall","src":"22402:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"22427:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22398:3:22"},"nodeType":"YulFunctionCall","src":"22398:32:22"},"nodeType":"YulIf","src":"22395:52:22"},{"nodeType":"YulVariableDeclaration","src":"22456:29:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22475:9:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22469:5:22"},"nodeType":"YulFunctionCall","src":"22469:16:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"22460:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22518:5:22"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"22494:23:22"},"nodeType":"YulFunctionCall","src":"22494:30:22"},"nodeType":"YulExpressionStatement","src":"22494:30:22"},{"nodeType":"YulAssignment","src":"22533:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"22543:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"22533:6:22"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22351:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"22362:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"22374:6:22","type":""}],"src":"22305:249:22"},{"body":{"nodeType":"YulBlock","src":"22746:309:22","statements":[{"nodeType":"YulVariableDeclaration","src":"22756:27:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22776:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22770:5:22"},"nodeType":"YulFunctionCall","src":"22770:13:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"22760:6:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22831:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"22839:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22827:3:22"},"nodeType":"YulFunctionCall","src":"22827:17:22"},{"name":"pos","nodeType":"YulIdentifier","src":"22846:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"22851:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"22792:34:22"},"nodeType":"YulFunctionCall","src":"22792:66:22"},"nodeType":"YulExpressionStatement","src":"22792:66:22"},{"nodeType":"YulVariableDeclaration","src":"22867:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22884:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"22889:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22880:3:22"},"nodeType":"YulFunctionCall","src":"22880:16:22"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"22871:5:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22905:29:22","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22927:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22921:5:22"},"nodeType":"YulFunctionCall","src":"22921:13:22"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"22909:8:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22982:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"22990:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22978:3:22"},"nodeType":"YulFunctionCall","src":"22978:17:22"},{"name":"end_1","nodeType":"YulIdentifier","src":"22997:5:22"},{"name":"length_1","nodeType":"YulIdentifier","src":"23004:8:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"22943:34:22"},"nodeType":"YulFunctionCall","src":"22943:70:22"},"nodeType":"YulExpressionStatement","src":"22943:70:22"},{"nodeType":"YulAssignment","src":"23022:27:22","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"23033:5:22"},{"name":"length_1","nodeType":"YulIdentifier","src":"23040:8:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23029:3:22"},"nodeType":"YulFunctionCall","src":"23029:20:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23022:3:22"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22714:3:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22719:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22727:6:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22738:3:22","type":""}],"src":"22559:496:22"}]},"contents":"{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint96(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffff))) { revert(0, 0) }\n        value1 := value\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_string(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_enum_MemberTier(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(lt(value, 4)) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_enum$_MemberTier_$6818(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_enum_MemberTier(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_bool(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bool(headStart)\n    }\n    function abi_decode_tuple_t_addresst_enum$_MemberTier_$6818t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_enum_MemberTier(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_string(add(headStart, offset_1), dataEnd)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_enum_MemberTier(value, pos)\n    {\n        if iszero(lt(value, 4))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_struct_NFCCard(value, pos) -> end\n    {\n        let memberValue0 := mload(value)\n        mstore(pos, 0xa0)\n        let tail := abi_encode_string(memberValue0, add(pos, 0xa0))\n        let memberValue0_1 := mload(add(value, 0x20))\n        mstore(add(pos, 0x20), sub(tail, pos))\n        let tail_1 := abi_encode_string(memberValue0_1, tail)\n        mstore(add(pos, 0x40), mload(add(value, 0x40)))\n        mstore(add(pos, 0x60), iszero(iszero(mload(add(value, 0x60)))))\n        let memberValue0_2 := mload(add(value, 0x80))\n        mstore(add(pos, 0x80), sub(tail_1, pos))\n        end := abi_encode_string(memberValue0_2, tail_1)\n    }\n    function abi_encode_tuple_t_struct$_MemberInfo_$6844_memory_ptr__to_t_struct$_MemberInfo_$6844_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        abi_encode_enum_MemberTier(mload(value0), add(headStart, 32))\n        mstore(add(headStart, 64), mload(add(value0, 32)))\n        let memberValue0 := mload(add(value0, 64))\n        mstore(add(headStart, 96), 0xc0)\n        let tail_1 := abi_encode_string(memberValue0, add(headStart, 224))\n        mstore(add(headStart, 128), iszero(iszero(mload(add(value0, 96)))))\n        let memberValue0_1 := mload(add(value0, 128))\n        mstore(add(headStart, 160), add(sub(tail_1, headStart), not(31)))\n        let tail_2 := abi_encode_struct_NFCCard(memberValue0_1, tail_1)\n        mstore(add(headStart, 0xc0), iszero(iszero(mload(add(value0, 160)))))\n        tail := tail_2\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 96))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value3 := abi_decode_string(add(headStart, offset_2), dataEnd)\n    }\n    function abi_encode_tuple_t_bool_t_address_t_enum$_MemberTier_$6818__to_t_bool_t_address_t_uint8__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        abi_encode_enum_MemberTier(value2, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_enum$_MemberTier_$6818_t_uint256_t_string_memory_ptr_t_bool_t_struct$_NFCCard_$6829_memory_ptr_t_bool__to_t_uint8_t_uint256_t_string_memory_ptr_t_bool_t_struct$_NFCCard_$6829_memory_ptr_t_bool__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        abi_encode_enum_MemberTier(value0, headStart)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 192)\n        let tail_1 := abi_encode_string(value2, add(headStart, 192))\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n        mstore(add(headStart, 128), sub(tail_1, headStart))\n        tail := abi_encode_struct_NFCCard(value4, tail_1)\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n    }\n    function abi_encode_tuple_t_uint256_t_bool_t_string_memory_ptr__to_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n        mstore(add(headStart, 64), 96)\n        tail := abi_encode_string(value2, add(headStart, 96))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Token does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b29e0aab9e757fa31789ac85fd81ae5bd5d8890412c3f590b9908480e647e628__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Member does not have an NFC card\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_enum$_MemberTier_$6818_t_enum$_MemberTier_$6818__to_t_uint8_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        abi_encode_enum_MemberTier(value0, headStart)\n        abi_encode_enum_MemberTier(value1, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_tuple_t_string_storage__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := extract_byte_array_length(slotValue)\n        mstore(add(headStart, _1), length)\n        let _2 := 64\n        let _3 := 1\n        switch and(slotValue, _3)\n        case 0 {\n            mstore(add(headStart, _2), and(slotValue, not(255)))\n            ret := add(add(headStart, shl(5, iszero(iszero(length)))), _2)\n        }\n        case 1 {\n            mstore(0, value0)\n            let dataPos := keccak256(0, _1)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _1) }\n            {\n                mstore(add(add(headStart, i), _2), sload(dataPos))\n                dataPos := add(dataPos, _3)\n            }\n            ret := add(add(headStart, i), _2)\n        }\n        tail := ret\n    }\n    function abi_encode_tuple_t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Not authorized to mint\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Cannot mint to zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bbd75e48baed3f30fbfc2970a751ea32d0284d9d338895802bf1a6041c2e8aa0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Member already has a token\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d633f097afe2c3b3efba3957b2369f4231e0e493227ac0996c0f90cc0a5005e9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Token URI cannot be empty\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_enum$_MemberTier_$6818_t_string_memory_ptr__to_t_uint8_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        abi_encode_enum_MemberTier(value0, headStart)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_string(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_c7bafc2e0f4372a5b344c2a3be3502b5e1e0ddc1f4f4ceb9f51bd7ff71b29a1f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Card ID cannot be empty\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3028800c1dbdd60b51d79f5eeb02acf0deac096bf4f2573b511ed379bc891d8c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"NFC card already exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1d6dc8c911703b86f29b06d0db96f40df5f282ec62d37ba092827035c01178fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Member already has an NFC card\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_string(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_05ce55e5de52b8b5808930586694950ca0eee6f4925a9fe48816241091de8ee9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"NFC card does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x25E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70BB0A16 GT PUSH2 0x146 JUMPI DUP1 PUSH4 0xBD26ED33 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xD90D0EE6 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xD90D0EE6 EQ PUSH2 0x5A5 JUMPI DUP1 PUSH4 0xDA104DA2 EQ PUSH2 0x5CA JUMPI DUP1 PUSH4 0xE5DD281B EQ PUSH2 0x5EA JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x60C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x61F JUMPI DUP1 PUSH4 0xFF8CA494 EQ PUSH2 0x632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBD26ED33 EQ PUSH2 0x537 JUMPI DUP1 PUSH4 0xBEC429DB EQ PUSH2 0x54A JUMPI DUP1 PUSH4 0xC4E4AE8A EQ PUSH2 0x55D JUMPI DUP1 PUSH4 0xC84CFCBB EQ PUSH2 0x570 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA1B1EEDE GT PUSH2 0x10A JUMPI DUP1 PUSH4 0xA1B1EEDE EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0xA230C524 EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0xAE99AA3C EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70BB0A16 EQ PUSH2 0x483 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0x8423DF79 EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1D0431FD GT PUSH2 0x1DF JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0x504A5983 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x543A9EB9 EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0x5967FF8B EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1D0431FD EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0x31062623 EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x3363F61F EQ PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xF837C5A GT PUSH2 0x226 JUMPI DUP1 PUSH4 0xF837C5A EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x14D4AECC EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x1928B7C3 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x1BA538CD EQ PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x2FA7C47 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2E0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x276 PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CC0 JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CF9 JUMP JUMPDEST PUSH2 0x68B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A8 PUSH2 0x6B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x2D8C JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9F JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x282 JUMP JUMPDEST PUSH2 0x29E PUSH2 0x2EE CALLDATASIZE PUSH1 0x4 PUSH2 0x2DB8 JUMP JUMPDEST PUSH2 0x76E JUMP JUMPDEST PUSH2 0x29E PUSH2 0x301 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9F JUMP JUMPDEST PUSH2 0x77D JUMP JUMPDEST PUSH2 0x331 PUSH2 0x314 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E8E JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0xF DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x282 JUMP JUMPDEST PUSH2 0x331 PUSH2 0x97E JUMP JUMPDEST PUSH2 0x29E PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC3 JUMP JUMPDEST PUSH2 0x994 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x2C8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x29E PUSH2 0x37B CALLDATASIZE PUSH1 0x4 PUSH2 0x2EED JUMP JUMPDEST PUSH2 0x9EE JUMP JUMPDEST PUSH2 0x29E PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x2F10 JUMP JUMPDEST PUSH2 0xA9A JUMP JUMPDEST PUSH2 0x3A6 PUSH2 0x3A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F4C JUMP JUMPDEST PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x282 JUMP JUMPDEST PUSH2 0x29E PUSH2 0x3D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F7E JUMP JUMPDEST PUSH2 0xB98 JUMP JUMPDEST PUSH2 0x29E PUSH2 0x3E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9F JUMP JUMPDEST PUSH2 0xBF8 JUMP JUMPDEST PUSH2 0x29E PUSH2 0x3F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F10 JUMP JUMPDEST PUSH2 0xC80 JUMP JUMPDEST PUSH2 0x331 PUSH2 0x40C CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x276 PUSH2 0x435 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC3 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x29E PUSH2 0x458 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9F JUMP JUMPDEST PUSH2 0xCA0 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x46B CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9F JUMP JUMPDEST PUSH2 0xD64 JUMP JUMPDEST PUSH2 0x331 PUSH2 0x47E CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC3 JUMP JUMPDEST PUSH2 0xD6F JUMP JUMPDEST PUSH2 0x29E PUSH2 0x491 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FA8 JUMP JUMPDEST PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0x29E PUSH2 0xE17 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x276 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2C8 JUMP JUMPDEST PUSH2 0x2A8 PUSH2 0xE2B JUMP JUMPDEST PUSH2 0x331 PUSH2 0x4D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FC3 JUMP JUMPDEST PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x29E PUSH2 0x4EC CALLDATASIZE PUSH1 0x4 PUSH2 0x2F7E JUMP JUMPDEST PUSH2 0x11C3 JUMP JUMPDEST PUSH2 0x276 PUSH2 0x4FF CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC3 JUMP JUMPDEST PUSH2 0x11CE JUMP JUMPDEST PUSH2 0x517 PUSH2 0x512 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9F JUMP JUMPDEST PUSH2 0x120E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x30E7 JUMP JUMPDEST PUSH2 0x29E PUSH2 0x532 CALLDATASIZE PUSH1 0x4 PUSH2 0x3160 JUMP JUMPDEST PUSH2 0x1539 JUMP JUMPDEST PUSH2 0x29E PUSH2 0x545 CALLDATASIZE PUSH1 0x4 PUSH2 0x31D0 JUMP JUMPDEST PUSH2 0x1551 JUMP JUMPDEST PUSH2 0x29E PUSH2 0x558 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9F JUMP JUMPDEST PUSH2 0x17F9 JUMP JUMPDEST PUSH2 0x29E PUSH2 0x56B CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9F JUMP JUMPDEST PUSH2 0x1850 JUMP JUMPDEST PUSH2 0x583 PUSH2 0x57E CALLDATASIZE PUSH1 0x4 PUSH2 0x2E8E JUMP JUMPDEST PUSH2 0x18A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3227 JUMP JUMPDEST PUSH2 0x2A8 PUSH2 0x5A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9F JUMP JUMPDEST PUSH2 0x1C4E JUMP JUMPDEST PUSH2 0x5B8 PUSH2 0x5B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D9F JUMP JUMPDEST PUSH2 0x1C59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x324C JUMP JUMPDEST PUSH2 0x331 PUSH2 0x5D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC3 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5FD PUSH2 0x5F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E8E JUMP JUMPDEST PUSH2 0x1F06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32A2 JUMP JUMPDEST PUSH2 0x276 PUSH2 0x61A CALLDATASIZE PUSH1 0x4 PUSH2 0x32C3 JUMP JUMPDEST PUSH2 0x21A8 JUMP JUMPDEST PUSH2 0x29E PUSH2 0x62D CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC3 JUMP JUMPDEST PUSH2 0x21D6 JUMP JUMPDEST PUSH2 0x276 PUSH2 0x640 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E8E JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x10 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x152A902D PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x685 JUMPI POP PUSH2 0x685 DUP3 PUSH2 0x2214 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x693 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x6C2 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6EE SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x73B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x710 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x73B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x71E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x750 DUP3 PUSH2 0x2266 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x685 JUMP JUMPDEST PUSH2 0x779 DUP3 DUP3 CALLER PUSH2 0x229E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x785 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x790 DUP3 PUSH2 0x22AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x7BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x3327 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x9 ADD SLOAD PUSH1 0xFF AND PUSH2 0x7F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x3355 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x80C SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x838 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x885 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x85A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x885 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x868 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP4 SWAP5 POP PUSH1 0x4 SWAP1 SWAP4 ADD SWAP3 SWAP2 POP PUSH2 0x8AD SWAP1 POP DUP3 DUP3 PUSH2 0x2BEC JUMP JUMPDEST PUSH2 0x8BB PUSH1 0x1 DUP4 ADD PUSH1 0x0 PUSH2 0x2BEC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP4 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x8DE SWAP1 PUSH1 0x4 DUP5 ADD SWAP1 PUSH2 0x2BEC JUMP JUMPDEST POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x9 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH1 0xF SWAP1 PUSH2 0x90A SWAP1 DUP4 SWAP1 PUSH2 0x338A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x10 DUP2 PUSH1 0x40 MLOAD PUSH2 0x92C SWAP2 SWAP1 PUSH2 0x338A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP3 SWAP1 PUSH32 0x879F2AB7F172EE2F8D536629F4F9156D7D4BB907995CD81E3D4CE0DBAB8CD861 SWAP1 PUSH2 0x972 SWAP1 DUP5 SWAP1 PUSH2 0x2D8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x9 SLOAD PUSH2 0x98F SWAP2 SWAP1 PUSH2 0x33BC JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x99C PUSH2 0x2239 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x808EC13129987DEB49EC337AB895A2CF7AF16A4D0D55A51DDC054E2C7FB2515B SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x9F6 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA01 DUP4 PUSH2 0x22AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xA27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x3327 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND SWAP2 DUP4 SWAP2 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA56 JUMPI PUSH2 0xA56 PUSH2 0x3048 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP DUP3 PUSH32 0x236430F4B571218941E190E042FD33BB0183EE65BAB331E1490515C0DE630FAE DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA8D SWAP3 SWAP2 SWAP1 PUSH2 0x33CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAC4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAD1 DUP4 DUP4 CALLER PUSH2 0x22C6 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB1F JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0xB32 DUP6 PUSH2 0x22AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xB58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x3327 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 POP PUSH2 0x2710 SWAP1 PUSH2 0xB85 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP6 PUSH2 0x33EA JUMP JUMPDEST PUSH2 0xB8F SWAP2 SWAP1 PUSH2 0x3401 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA0 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xCCD3ED4A44FAF3E09991DBB052548B2F73FDD2A8DA198E2412A4DFF80DACDD5B SWAP2 ADD PUSH2 0x972 JUMP JUMPDEST PUSH2 0xC00 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC0B DUP3 PUSH2 0x22AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x3327 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x9 ADD SLOAD PUSH1 0xFF AND PUSH2 0xC62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x3355 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xC9B DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1539 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xCA8 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCB3 DUP3 PUSH2 0x22AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xCD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x3327 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x9 ADD SLOAD PUSH1 0xFF AND PUSH2 0xD0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x3355 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x7 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD DUP3 SWAP2 PUSH32 0x12CDB3B117AB46B8AB2F8E7F38E6B3D8A51B3B3FD3188DD781BA38DF5B2309E SWAP2 PUSH2 0xD59 SWAP2 PUSH1 0x4 ADD SWAP1 PUSH2 0x3423 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x685 DUP3 PUSH2 0x2266 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD9B JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xDBF PUSH2 0x2239 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x2DA74F794B62C41386DEE79743B63D866355E0E0AE2A8D97AACB2FF5B7E1549B SWAP1 PUSH2 0xE0C SWAP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xE1F PUSH2 0x2239 JUMP JUMPDEST PUSH2 0xE29 PUSH1 0x0 PUSH2 0x23BA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x6C2 SWAP1 PUSH2 0x32ED JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0xE60 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xEA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x139BDD08185D5D1A1BDC9A5E9959081D1BC81B5A5B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0xEAD PUSH2 0x240C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xF03 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206D696E7420746F207A65726F20616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xF69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D656D62657220616C726561647920686173206120746F6B656E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT PUSH2 0xFBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E205552492063616E6E6F7420626520656D70747900000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD SWAP1 DUP2 SWAP1 PUSH1 0x0 PUSH2 0xFCC DUP4 PUSH2 0x34AE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0xFDB DUP7 DUP3 PUSH2 0x2436 JUMP JUMPDEST PUSH2 0xFE5 DUP2 DUP5 PUSH2 0x2450 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1002 JUMPI PUSH2 0x1002 PUSH2 0x3048 JUMP JUMPDEST DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x60 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE DUP3 MLOAD PUSH1 0xC0 DUP2 ADD DUP5 MSTORE PUSH1 0x0 PUSH1 0xA0 DUP1 DUP4 ADD DUP3 DUP2 MSTORE DUP4 MSTORE DUP6 MLOAD DUP1 DUP9 ADD DUP8 MSTORE DUP3 DUP2 MSTORE DUP4 DUP9 ADD MSTORE DUP3 DUP7 ADD DUP3 SWAP1 MSTORE SWAP3 DUP3 ADD DUP2 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP8 ADD DUP7 MSTORE DUP2 DUP2 MSTORE PUSH1 0x80 DUP4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP5 ADD DUP5 SWAP1 MSTORE DUP6 DUP5 MSTORE PUSH1 0xD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP3 MLOAD DUP2 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH1 0xFF NOT SWAP1 SWAP2 AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x109A JUMPI PUSH2 0x109A PUSH2 0x3048 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x10BD SWAP1 DUP3 PUSH2 0x350D JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP1 MLOAD PUSH1 0x4 DUP4 ADD SWAP1 DUP2 SWAP1 PUSH2 0x10EE SWAP1 DUP3 PUSH2 0x350D JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x1103 SWAP1 DUP3 PUSH2 0x350D JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SWAP1 PUSH2 0x113A SWAP1 DUP3 PUSH2 0x350D JUMP JUMPDEST POP POP POP PUSH1 0xA0 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x9 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE MLOAD DUP3 SWAP1 PUSH32 0x520483995C63AF27F2B1C21CB5C2D5138F865C88A39AEBA56A8756453DF44ACB SWAP1 PUSH2 0x11A7 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH2 0x35CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP1 POP PUSH2 0x11BB PUSH1 0x1 PUSH1 0x8 SSTORE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x779 CALLER DUP4 DUP4 PUSH2 0x24A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1207 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1216 PUSH2 0x2C26 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1221 DUP4 PUSH2 0x22AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1247 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x3327 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1278 JUMPI PUSH2 0x1278 PUSH2 0x3048 JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1289 JUMPI PUSH2 0x1289 PUSH2 0x3048 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x12A7 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x12D3 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1320 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x12F5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1320 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1303 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x4 DUP5 ADD DUP1 SLOAD SWAP3 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x135B SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1387 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13D4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13A9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13D4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13B7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x13ED SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1419 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1466 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x143B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1466 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1449 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0x60 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x149C SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x14C8 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1515 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1515 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 SWAP1 SWAP3 MSTORE POP POP POP DUP2 MSTORE PUSH1 0x9 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1544 DUP5 DUP5 DUP5 PUSH2 0xA9A JUMP JUMPDEST PUSH2 0xB1F CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0x253F JUMP JUMPDEST PUSH2 0x1559 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1564 DUP6 PUSH2 0x22AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x158A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x3327 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT PUSH2 0x15DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436172642049442063616E6E6F7420626520656D707479000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x10 DUP4 PUSH1 0x40 MLOAD PUSH2 0x15EB SWAP2 SWAP1 PUSH2 0x338A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x164B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4643206361726420616C726561647920657869737473000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x9 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x16AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D656D62657220616C72656164792068617320616E204E464320636172640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE TIMESTAMP DUP3 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xD SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP2 MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SWAP1 DUP2 SWAP1 PUSH2 0x16F7 SWAP1 DUP3 PUSH2 0x350D JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x170C SWAP1 DUP3 PUSH2 0x350D JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SWAP1 PUSH2 0x1743 SWAP1 DUP3 PUSH2 0x350D JUMP JUMPDEST POP POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x9 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD DUP5 SWAP1 PUSH1 0xF SWAP1 PUSH2 0x1775 SWAP1 DUP7 SWAP1 PUSH2 0x338A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x10 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1799 SWAP2 SWAP1 PUSH2 0x338A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE DUP5 SWAP1 PUSH32 0xAD6D9C64A14D0FE26FE397F694C96F78A370D5E77D522989DFD8E876FED0DFF7 SWAP1 PUSH2 0x17EB SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x35ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x1801 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180C DUP3 PUSH2 0x22AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1832 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x3327 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1858 PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1863 DUP3 PUSH2 0x22AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1889 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x3327 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x10 DUP5 PUSH1 0x40 MLOAD PUSH2 0x18B9 SWAP2 SWAP1 PUSH2 0x338A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x18DE JUMPI POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP DUP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF DUP6 PUSH1 0x40 MLOAD PUSH2 0x18F0 SWAP2 SWAP1 PUSH2 0x338A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD DUP2 KECCAK256 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD SWAP1 SWAP5 MSTORE DUP3 DUP5 KECCAK256 PUSH1 0xC0 DUP4 ADD SWAP1 SWAP4 MSTORE DUP3 SLOAD SWAP1 SWAP5 POP SWAP1 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1934 JUMPI PUSH2 0x1934 PUSH2 0x3048 JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1945 JUMPI PUSH2 0x1945 PUSH2 0x3048 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x1963 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x198F SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19DC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19B1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x19DC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19BF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x4 DUP5 ADD DUP1 SLOAD SWAP3 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x1A17 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1A43 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A90 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1A65 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A90 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A73 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x1AA9 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1AD5 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B22 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1AF7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B22 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B05 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0x60 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x1B58 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B84 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1BD1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1BA6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1BD1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1BB4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 SWAP1 SWAP3 MSTORE POP POP POP DUP2 MSTORE PUSH1 0x9 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD SWAP1 SWAP2 POP ISZERO DUP1 PUSH2 0x1C05 JUMPI POP DUP1 PUSH1 0xA0 ADD MLOAD ISZERO JUMPDEST DUP1 PUSH2 0x1C16 JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD PUSH1 0x60 ADD MLOAD ISZERO JUMPDEST ISZERO PUSH2 0x1C2D JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP5 POP SWAP5 POP SWAP5 POP POP POP PUSH2 0x1C47 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C38 DUP4 PUSH2 0xD64 JUMP JUMPDEST SWAP2 MLOAD PUSH1 0x1 SWAP7 POP SWAP2 SWAP5 POP SWAP1 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x685 DUP3 PUSH2 0x266A JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP4 AND SWAP4 SWAP2 SWAP3 PUSH2 0x1C85 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1CB1 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1CFE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1CD3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1CFE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1CE1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x1D36 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D62 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DAF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D84 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DAF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D92 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x1DC8 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DF4 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1E41 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E16 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E41 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E24 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0x60 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x1E77 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1EA3 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1EF0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1EC5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1EF0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1ED3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 SWAP1 SWAP3 MSTORE POP POP POP PUSH1 0x9 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND DUP7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x10 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1F1B SWAP2 SWAP1 PUSH2 0x338A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1F7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4643206361726420646F6573206E6F74206578697374000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0xF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1F8A SWAP2 SWAP1 PUSH2 0x338A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP3 POP PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x1FCE SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1FFA SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2047 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x201C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2047 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x202A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x2060 SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x208C SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x20AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0x60 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x210F SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x213B SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2188 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x215D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2188 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x216B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 SWAP1 SWAP3 MSTORE POP POP POP PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x80 SWAP1 SWAP2 ADD MLOAD SWAP5 SWAP7 SWAP1 SWAP6 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x21DE PUSH2 0x2239 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2208 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x2211 DUP2 PUSH2 0x23BA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x685 JUMPI POP PUSH2 0x685 DUP3 PUSH2 0x2773 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE29 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2272 DUP4 PUSH2 0x22AB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0xC9B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x27C3 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x22D2 DUP5 PUSH2 0x22AB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x22EE JUMPI PUSH2 0x22EE DUP2 DUP5 DUP7 PUSH2 0x28C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x232C JUMPI PUSH2 0x230B PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x27C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x235B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x8 SLOAD SUB PUSH2 0x242F JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH2 0x779 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x292D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x2468 DUP3 DUP3 PUSH2 0x350D JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x24D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x2663 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x2581 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x3612 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x25BC JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x25B9 SWAP2 DUP2 ADD SWAP1 PUSH2 0x364F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2625 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x25EA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x25EF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x261D JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x2661 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2675 DUP3 PUSH2 0x2266 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x268F SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x26BB SWAP1 PUSH2 0x32ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2708 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x26DD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2708 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26EB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x2726 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x2738 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x276A JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2752 SWAP3 SWAP2 SWAP1 PUSH2 0x366C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11BB DUP5 PUSH2 0x2945 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x27A4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x685 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x685 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x27D7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2899 JUMPI PUSH1 0x0 PUSH2 0x27E7 DUP5 PUSH2 0x2266 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2813 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2826 JUMPI POP PUSH2 0x2824 DUP2 DUP5 PUSH2 0x21A8 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x284F JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2897 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x28D4 DUP4 DUP4 DUP4 PUSH2 0x29B9 JUMP JUMPDEST PUSH2 0xC9B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2902 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x2937 DUP4 DUP4 PUSH2 0x2A1C JUMP JUMPDEST PUSH2 0xC9B CALLER PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x253F JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2950 DUP3 PUSH2 0x2266 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2968 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x2988 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1207 JUMP JUMPDEST DUP1 PUSH2 0x2992 DUP5 PUSH2 0x2A81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x29A3 SWAP3 SWAP2 SWAP1 PUSH2 0x366C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x11BB JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x29F3 JUMPI POP PUSH2 0x29F3 DUP5 DUP5 PUSH2 0x21A8 JUMP JUMPDEST DUP1 PUSH2 0x11BB JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2A46 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A54 DUP4 DUP4 PUSH1 0x0 PUSH2 0x22C6 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xC9B JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2A8E DUP4 PUSH2 0x2B14 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AAE JUMPI PUSH2 0x2AAE PUSH2 0x2DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2AD8 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x2AE2 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x2B53 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x2B7F JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x2B9D JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x2BB5 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x2BC9 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x2BDB JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x685 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x2BF8 SWAP1 PUSH2 0x32ED JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x2C08 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2211 SWAP2 SWAP1 PUSH2 0x2C91 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C84 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2CA6 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2C92 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x2211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1207 DUP2 PUSH2 0x2CAA JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2CF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D15 DUP4 PUSH2 0x2CDD JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2D31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D57 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2D3F JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2D78 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2D3C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1207 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2D60 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2DCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2DD4 DUP4 PUSH2 0x2CDD JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x2E13 JUMPI PUSH2 0x2E13 PUSH2 0x2DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2E3B JUMPI PUSH2 0x2E3B PUSH2 0x2DE2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x2E54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2E7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1207 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x2DF8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2EB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11BB DUP5 DUP3 DUP6 ADD PUSH2 0x2E6E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2ED5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1207 DUP3 PUSH2 0x2CDD JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x2CF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xB8F PUSH1 0x20 DUP5 ADD PUSH2 0x2EDE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2F25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F2E DUP5 PUSH2 0x2CDD JUMP JUMPDEST SWAP3 POP PUSH2 0x2F3C PUSH1 0x20 DUP6 ADD PUSH2 0x2CDD JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2CF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F9A DUP4 PUSH2 0x2CDD JUMP JUMPDEST SWAP2 POP PUSH2 0xB8F PUSH1 0x20 DUP5 ADD PUSH2 0x2F6E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1207 DUP3 PUSH2 0x2F6E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2FD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FE2 DUP6 PUSH2 0x2CDD JUMP JUMPDEST SWAP4 POP PUSH2 0x2FF0 PUSH1 0x20 DUP7 ADD PUSH2 0x2EDE JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x300D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3019 DUP9 DUP4 DUP10 ADD PUSH2 0x2E6E JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x302F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303C DUP8 DUP3 DUP9 ADD PUSH2 0x2E6E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x307C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0xA0 DUP5 MSTORE PUSH2 0x3095 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x2D60 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x30AE DUP3 DUP3 PUSH2 0x2D60 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x30DE DUP3 DUP3 PUSH2 0x2D60 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH2 0x30F9 PUSH1 0x20 DUP3 ADD DUP4 MLOAD PUSH2 0x305E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0xC0 PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x311E PUSH1 0xE0 DUP5 ADD DUP3 PUSH2 0x2D60 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP5 DUP4 SUB ADD PUSH1 0xA0 DUP6 ADD MSTORE PUSH2 0x3147 DUP3 DUP3 PUSH2 0x3080 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA0 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0xC0 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x317F DUP6 PUSH2 0x2CDD JUMP JUMPDEST SWAP4 POP PUSH2 0x318D PUSH1 0x20 DUP7 ADD PUSH2 0x2CDD JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x31B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x31C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x303C DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x2DF8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x31E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3211 DUP9 DUP4 DUP10 ADD PUSH2 0x2E6E JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x300D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD PUSH2 0x11BB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x305E JUMP JUMPDEST PUSH2 0x3256 DUP2 DUP9 PUSH2 0x305E JUMP JUMPDEST DUP6 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3272 PUSH1 0xC0 DUP4 ADD DUP8 PUSH2 0x2D60 JUMP JUMPDEST DUP6 ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x328C DUP2 DUP7 PUSH2 0x3080 JUMP JUMPDEST SWAP2 POP POP DUP3 ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x30DE PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2D60 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x32DF DUP4 PUSH2 0x2CDD JUMP JUMPDEST SWAP2 POP PUSH2 0xB8F PUSH1 0x20 DUP5 ADD PUSH2 0x2CDD JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3301 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3321 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4D656D62657220646F6573206E6F74206861766520616E204E46432063617264 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x339C DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2D3C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x685 JUMPI PUSH2 0x685 PUSH2 0x33A6 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x33DD DUP3 DUP6 PUSH2 0x305E JUMP JUMPDEST PUSH2 0x1207 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x305E JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x685 JUMPI PUSH2 0x685 PUSH2 0x33A6 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x341E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE PUSH1 0x0 DUP5 SLOAD PUSH2 0x3437 DUP2 PUSH2 0x32ED JUMP JUMPDEST DUP1 DUP5 DUP8 ADD MSTORE PUSH1 0x40 PUSH1 0x1 DUP1 DUP5 AND PUSH1 0x0 DUP2 EQ PUSH2 0x3458 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3472 JUMPI PUSH2 0x34A0 JUMP JUMPDEST PUSH1 0xFF NOT DUP6 AND DUP10 DUP5 ADD MSTORE DUP4 ISZERO ISZERO PUSH1 0x5 SHL DUP10 ADD DUP4 ADD SWAP6 POP PUSH2 0x34A0 JUMP JUMPDEST DUP10 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3498 JUMPI DUP2 SLOAD DUP12 DUP3 ADD DUP7 ADD MSTORE SWAP1 DUP4 ADD SWAP1 DUP9 ADD PUSH2 0x347D JUMP JUMPDEST DUP11 ADD DUP5 ADD SWAP7 POP POP JUMPDEST POP SWAP4 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x34C0 JUMPI PUSH2 0x34C0 PUSH2 0x33A6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xC9B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x34EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2661 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x34FA JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3527 JUMPI PUSH2 0x3527 PUSH2 0x2DE2 JUMP JUMPDEST PUSH2 0x353B DUP2 PUSH2 0x3535 DUP5 SLOAD PUSH2 0x32ED JUMP JUMPDEST DUP5 PUSH2 0x34C7 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3570 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3558 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x2661 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x359F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x3580 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x35BD JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x35D7 DUP2 DUP5 PUSH2 0x305E JUMP JUMPDEST PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x11BB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2D60 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3600 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2D60 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x30DE DUP2 DUP6 PUSH2 0x2D60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x3645 SWAP1 DUP4 ADD DUP5 PUSH2 0x2D60 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1207 DUP2 PUSH2 0x2CAA JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x367E DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x2D3C JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x3692 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x2D3C JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xFC OR PUSH1 0x7 OR 0x25 CALLDATASIZE CALL 0x5D 0x4F 0x4F EXTCODECOPY JUMPI GAS 0xD7 0x5E EXTCODEHASH PREVRANDAO 0xE0 STATICCALL 0xC2 SWAP6 PUSH12 0xECD0D794F0AA718C64736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"579:12852:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13170:259;;;;;;:::i;:::-;;:::i;:::-;;;565:14:22;;558:22;540:41;;528:2;513:18;13170:259:21;;;;;;;;11421:162;;;;;;:::i;:::-;;:::i;:::-;;2263:89:6;;;:::i;:::-;;;;;;;:::i;3299:154::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2246:32:22;;;2228:51;;2216:2;2201:18;3299:154:6;2082:203:22;3152:113:6;;;;;;:::i;:::-;;:::i;6197:612:21:-;;;;;;:::i;:::-;;:::i;2027:48::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4018:25:22;;;4006:2;3991:18;2027:48:21;3872:177:22;12056:98:21;;;:::i;10334:242::-;;;;;;:::i;:::-;;:::i;899:31::-;;;;;-1:-1:-1;;;;;899:31:21;;;9400:339;;;;;;:::i;:::-;;:::i;3852:578:6:-;;;;;;:::i;:::-;;:::i;11643:358:21:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;5461:32:22;;;5443:51;;5525:2;5510:18;;5503:34;;;;5416:18;11643:358:21;5269:274:22;10895:212:21;;;;;;:::i;:::-;;:::i;7454:291::-;;;;;;:::i;:::-;;:::i;4464:132:6:-;;;;;;:::i;:::-;;:::i;12488:121:21:-;;;;;;:::i;:::-;-1:-1:-1;;;;;12581:21:21;12555:7;12581:21;;;:13;:21;;;;;;;12488:121;1014:52;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6942:379;;;;;;:::i;:::-;;:::i;2103:118:6:-;;;;;;:::i;:::-;;:::i;1861:208::-;;;;;;:::i;:::-;;:::i;10640:172:21:-;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;970:38:21:-;;;;;-1:-1:-1;;;970:38:21;;;;;;1638:85:0;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;2394:93:6;;;:::i;3665:1133:21:-;;;;;;:::i;:::-;;:::i;3487:144:6:-;;;;;;:::i;:::-;;:::i;12676:180:21:-;;;;;;:::i;:::-;;:::i;12220:199::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4630:233:6:-;;;;;;:::i;:::-;;:::i;5079:972:21:-;;;;;;:::i;:::-;;:::i;10076:190::-;;;;;;:::i;:::-;;:::i;9812:191::-;;;;;;:::i;:::-;;:::i;8693:637::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;12971:189::-;;;;;;:::i;:::-;;:::i;1864:48::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;1918:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;8007:407;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;3665:153:6:-;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;2102:44:21:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13170:259;13314:4;-1:-1:-1;;;;;;13341:41:21;;-1:-1:-1;;;13341:41:21;;:81;;;13386:36;13410:11;13386:23;:36::i;:::-;13334:88;13170:259;-1:-1:-1;;13170:259:21:o;11421:162::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;11549:27:21::1;-1:-1:-1::0;;;11549:27:21::1;-1:-1:-1::0;;;;;11510:29:21;;::::1;11549:27;11510:17;11549:27:::0;11421:162::o;2263:89:6:-;2308:13;2340:5;2333:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2263:89;:::o;3299:154::-;3366:7;3385:22;3399:7;3385:13;:22::i;:::-;-1:-1:-1;5679:7:6;5705:24;;;:15;:24;;;;;;-1:-1:-1;;;;;5705:24:6;3425:21;5609:127;3152:113;3223:35;3232:2;3236:7;735:10:12;3223:8:6;:35::i;:::-;3152:113;;:::o;6197:612:21:-;1531:13:0;:11;:13::i;:::-;6303:1:21::1;6274:17;6283:7:::0;6274:8:::1;:17::i;:::-;-1:-1:-1::0;;;;;6274:31:21::1;::::0;6266:64:::1;;;;-1:-1:-1::0;;;6266:64:21::1;;;;;;;:::i;:::-;;;;;;;;;6348:19;::::0;;;:10:::1;:19;::::0;;;;:30:::1;;::::0;::::1;;6340:75;;;;-1:-1:-1::0;;;6340:75:21::1;;;;;;;:::i;:::-;6434:20;6457:19:::0;;;:10:::1;:19;::::0;;;;:27:::1;;6434:57:::0;;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;6549:19:21::1;::::0;;;:10:::1;:19;::::0;;;;6434:57;;-1:-1:-1;6549:27:21::1;::::0;;::::1;::::0;:19;-1:-1:-1;6542:34:21::1;::::0;-1:-1:-1;6549:27:21;:19;6542:34:::1;:::i;:::-;;;::::0;::::1;;;:::i;:::-;;;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;6542:34:21::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;6619:5:21::1;6586:19:::0;;;:10:::1;:19;::::0;;;;;;:30:::1;;:38:::0;;-1:-1:-1;;6586:38:21::1;::::0;;6686:22;:14:::1;::::0;:22:::1;::::0;6701:6;;6686:22:::1;:::i;:::-;;;;;;;;;;;;;6679:29;;;6725:13;6739:6;6725:21;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;6718:28;;-1:-1:-1;;6718:28:21::1;::::0;;6786:7;;6770:32:::1;::::0;::::1;::::0;6795:6;;6770:32:::1;:::i;:::-;;;;;;;;6256:553;6197:612:::0;:::o;12056:98::-;12102:7;12146:1;12128:15;;:19;;;;:::i;:::-;12121:26;;12056:98;:::o;10334:242::-;1531:13:0;:11;:13::i;:::-;10439:16:21::1;::::0;;-1:-1:-1;;;;;10465:36:21;;::::1;-1:-1:-1::0;;;;;;10465:36:21;::::1;::::0;::::1;::::0;;;10516:53:::1;::::0;10439:16;::::1;::::0;10465:36;10439:16;;10516:53:::1;::::0;10419:17:::1;::::0;10516:53:::1;10409:167;10334:242:::0;:::o;9400:339::-;1531:13:0;:11;:13::i;:::-;9529:1:21::1;9500:17;9509:7:::0;9500:8:::1;:17::i;:::-;-1:-1:-1::0;;;;;9500:31:21::1;::::0;9492:64:::1;;;;-1:-1:-1::0;;;9492:64:21::1;;;;;;;:::i;:::-;9575:18;9596:19:::0;;;:10:::1;:19;::::0;;;;:24;;::::1;::::0;::::1;::::0;9657:7;;-1:-1:-1;;9630:34:21::1;9596:24:::0;9657:7;9630:34:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;9706:7;9688:44;9715:7;9724;9688:44;;;;;;;:::i;:::-;;;;;;;;9482:257;9400:339:::0;;:::o;3852:578:6:-;-1:-1:-1;;;;;3946:16:6;;3942:87;;3985:33;;-1:-1:-1;;;3985:33:6;;4015:1;3985:33;;;2228:51:22;2201:18;;3985:33:6;2082:203:22;3942:87:6;4247:21;4271:34;4279:2;4283:7;735:10:12;4271:7:6;:34::i;:::-;4247:58;;4336:4;-1:-1:-1;;;;;4319:21:6;:13;-1:-1:-1;;;;;4319:21:6;;4315:109;;4363:50;;-1:-1:-1;;;4363:50:6;;-1:-1:-1;;;;;14302:15:22;;;4363:50:6;;;14284:34:22;14334:18;;;14327:34;;;14397:15;;14377:18;;;14370:43;14219:18;;4363:50:6;14044:375:22;4315:109:6;3932:498;3852:578;;;:::o;11643:358:21:-;11764:16;;;11827:17;11836:7;11827:8;:17::i;:::-;-1:-1:-1;;;;;11827:31:21;;11819:64;;;;-1:-1:-1;;;11819:64:21;;;;;;;:::i;:::-;11913:17;;-1:-1:-1;;;;;11913:17:21;;;-1:-1:-1;11989:5:21;;11957:28;;-1:-1:-1;;;11969:16:21;;-1:-1:-1;;;;;11969:16:21;11957:9;:28;:::i;:::-;11956:38;;;;:::i;:::-;11940:54;;11643:358;;;;;:::o;10895:212::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;10992:33:21;::::1;;::::0;;;:20:::1;:33;::::0;;;;;;;;:44;;-1:-1:-1;;10992:44:21::1;::::0;::::1;;::::0;;::::1;::::0;;;11051:49;;540:41:22;;;11051:49:21::1;::::0;513:18:22;11051:49:21::1;400:187:22::0;7454:291:21;1531:13:0;:11;:13::i;:::-;7564:1:21::1;7535:17;7544:7:::0;7535:8:::1;:17::i;:::-;-1:-1:-1::0;;;;;7535:31:21::1;::::0;7527:64:::1;;;;-1:-1:-1::0;;;7527:64:21::1;;;;;;;:::i;:::-;7609:19;::::0;;;:10:::1;:19;::::0;;;;:30:::1;;::::0;::::1;;7601:75;;;;-1:-1:-1::0;;;7601:75:21::1;;;;;;;:::i;:::-;7695:19;::::0;;;:10:::1;:19;::::0;;;;:36;;:43;;-1:-1:-1;;7695:43:21::1;7734:4;7695:43;::::0;;7454:291::o;4464:132:6:-;4550:39;4567:4;4573:2;4577:7;4550:39;;;;;;;;;;;;:16;:39::i;:::-;4464:132;;;:::o;6942:379:21:-;1531:13:0;:11;:13::i;:::-;7052:1:21::1;7023:17;7032:7:::0;7023:8:::1;:17::i;:::-;-1:-1:-1::0;;;;;7023:31:21::1;::::0;7015:64:::1;;;;-1:-1:-1::0;;;7015:64:21::1;;;;;;;:::i;:::-;7097:19;::::0;;;:10:::1;:19;::::0;;;;:30:::1;;::::0;::::1;;7089:75;;;;-1:-1:-1::0;;;7089:75:21::1;;;;;;;:::i;:::-;7222:5;7183:19:::0;;;:10:::1;:19;::::0;;;;;;:36;;;:44;;-1:-1:-1;;7183:44:21::1;::::0;;7251:63;;7194:7;;7251:63:::1;::::0;::::1;::::0;7183:27:::1;;::::0;7251:63:::1;:::i;:::-;;;;;;;;6942:379:::0;:::o;2103:118:6:-;2166:7;2192:22;2206:7;2192:13;:22::i;1861:208::-;1924:7;-1:-1:-1;;;;;1947:19:6;;1943:87;;1989:30;;-1:-1:-1;;;1989:30:6;;2016:1;1989:30;;;2228:51:22;2201:18;;1989:30:6;2082:203:22;1943:87:6;-1:-1:-1;;;;;;2046:16:6;;;;;:9;:16;;;;;;;1861:208::o;10640:172:21:-;1531:13:0;:11;:13::i;:::-;10718:19:21::1;:33:::0;;;::::1;;-1:-1:-1::0;;;10718:33:21::1;-1:-1:-1::0;;;;10718:33:21;;::::1;;::::0;;10766:39:::1;::::0;::::1;::::0;::::1;::::0;10740:11;565:14:22;558:22;540:41;;528:2;513:18;;400:187;10766:39:21::1;;;;;;;;10640:172:::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2394:93:6:-;2441:13;2473:7;2466:14;;;;;:::i;3665:1133:21:-;2915:16;;3854:7;;-1:-1:-1;;;;;2915:16:21;2901:10;:30;;:55;;-1:-1:-1;1710:6:0;;-1:-1:-1;;;;;1710:6:0;2935:10:21;:21;2901:55;2893:90;;;;-1:-1:-1;;;2893:90:21;;16247:2:22;2893:90:21;;;16229:21:22;16286:2;16266:18;;;16259:30;-1:-1:-1;;;16305:18:22;;;16298:52;16367:18;;2893:90:21;16045:346:22;2893:90:21;2500:21:14::1;:19;:21::i;:::-;-1:-1:-1::0;;;;;3881:16:21;::::2;3873:56;;;::::0;-1:-1:-1;;;3873:56:21;;16598:2:22;3873:56:21::2;::::0;::::2;16580:21:22::0;16637:2;16617:18;;;16610:30;16676:29;16656:18;;;16649:57;16723:18;;3873:56:21::2;16396:351:22::0;3873:56:21::2;-1:-1:-1::0;;;;;3947:17:21;::::2;;::::0;;;:13:::2;:17;::::0;;;;;:22;3939:61:::2;;;::::0;-1:-1:-1;;;3939:61:21;;16954:2:22;3939:61:21::2;::::0;::::2;16936:21:22::0;16993:2;16973:18;;;16966:30;17032:28;17012:18;;;17005:56;17078:18;;3939:61:21::2;16752:350:22::0;3939:61:21::2;4044:1;4024:9;4018:23;:27;4010:65;;;::::0;-1:-1:-1;;;4010:65:21;;17309:2:22;4010:65:21::2;::::0;::::2;17291:21:22::0;17348:2;17328:18;;;17321:30;17387:27;17367:18;;;17360:55;17432:18;;4010:65:21::2;17107:349:22::0;4010:65:21::2;4112:15;::::0;;;;;4094::::2;4137:17;4112:15:::0;4137:17:::2;:::i;:::-;;;;;;4173:22;4183:2;4187:7;4173:9;:22::i;:::-;4205:32;4218:7;4227:9;4205:12;:32::i;:::-;4278:368;;;;;;;;4309:4;4278:368;;;;;;;;:::i;:::-;::::0;;4337:15:::2;4278:368;::::0;;::::2;::::0;;;;;;;;;;;4400:4:::2;4278:368:::0;;;;;;;4427:177;;;;;;;-1:-1:-1;4427:177:21::2;::::0;;::::2;::::0;;;;;;;;;::::2;::::0;;;;;;;::::2;::::0;;;;;;;-1:-1:-1;;;4427:177:21;;;;;;;::::2;::::0;;;;;4278:368;4427:177;;;;;;;4278:368;;;;;;;;;;;4256:19;;;:10:::2;:19:::0;;;;;;:390;;;;:19;;:390;;:19;;-1:-1:-1;;4256:390:21;;::::2;::::0;;::::2;::::0;::::2;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;4256:390:21::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;:::i;:::-;-1:-1:-1::0;4256:390:21::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;-1:-1:-1;;4256:390:21::2;::::0;::::2;;::::0;;;::::2;::::0;;::::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;::::2;:::i;:::-;-1:-1:-1::0;4256:390:21::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;:::i;:::-;-1:-1:-1::0;4256:390:21::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;-1:-1:-1;;4256:390:21::2;::::0;::::2;;::::0;;;::::2;::::0;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;:::i;:::-;-1:-1:-1::0;;;4256:390:21::2;::::0;;;::::2;::::0;::::2;::::0;;::::2;::::0;;-1:-1:-1;;4256:390:21::2;::::0;::::2;;::::0;;;::::2;::::0;;-1:-1:-1;;;;;4665:17:21;::::2;-1:-1:-1::0;4665:17:21;;;:13:::2;:17;::::0;;;;;;:27;;;4716:42;4665:27;;4716:42:::2;::::0;::::2;::::0;4746:4;;4752:5;;4716:42:::2;:::i;:::-;;;;;;;;4784:7:::0;-1:-1:-1;2542:20:14::1;1857:1:::0;3068:7;:21;2888:208;2542:20:::1;3665:1133:21::0;;;;;;:::o;3487:144:6:-;3572:52;735:10:12;3605:8:6;3615;3572:18;:52::i;12676:180:21:-;-1:-1:-1;;;;;12768:22:21;;12734:4;12768:22;;;:13;:22;;;;;;12807:12;;;;;:42;;-1:-1:-1;12823:19:21;;;;:10;:19;;;;;:26;;;;;12807:42;12800:49;12676:180;-1:-1:-1;;;12676:180:21:o;12220:199::-;12283:17;;:::i;:::-;12349:1;12320:17;12329:7;12320:8;:17::i;:::-;-1:-1:-1;;;;;12320:31:21;;12312:64;;;;-1:-1:-1;;;12312:64:21;;;;;;;:::i;:::-;12393:19;;;;:10;:19;;;;;;;12386:26;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;12386:26:21;;;-1:-1:-1;;12386:26:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;12386:26:21;;;-1:-1:-1;;12386:26:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;12386:26:21;;;;-1:-1:-1;;;12386:26:21;;;;;;;;;;;;;;;;;;12220:199;-1:-1:-1;;12220:199:21:o;4630:233:6:-;4743:31;4756:4;4762:2;4766:7;4743:12;:31::i;:::-;4784:72;735:10:12;4832:4:6;4838:2;4842:7;4851:4;4784:33;:72::i;5079:972:21:-;1531:13:0;:11;:13::i;:::-;5295:1:21::1;5266:17;5275:7:::0;5266:8:::1;:17::i;:::-;-1:-1:-1::0;;;;;5266:31:21::1;::::0;5258:64:::1;;;;-1:-1:-1::0;;;5258:64:21::1;;;;;;;:::i;:::-;5363:1;5346:6;5340:20;:24;5332:60;;;::::0;-1:-1:-1;;;5332:60:21;;20210:2:22;5332:60:21::1;::::0;::::1;20192:21:22::0;20249:2;20229:18;;;20222:30;20288:25;20268:18;;;20261:53;20331:18;;5332:60:21::1;20008:347:22::0;5332:60:21::1;5411:13;5425:6;5411:21;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;::::1;;5410:22;5402:58;;;::::0;-1:-1:-1;;;5402:58:21;;20562:2:22;5402:58:21::1;::::0;::::1;20544:21:22::0;20601:2;20581:18;;;20574:30;20640:25;20620:18;;;20613:53;20683:18;;5402:58:21::1;20360:347:22::0;5402:58:21::1;5479:19;::::0;;;:10:::1;:19;::::0;;;;:30:::1;;::::0;::::1;;5478:31;5470:74;;;::::0;-1:-1:-1;;;5470:74:21;;20914:2:22;5470:74:21::1;::::0;::::1;20896:21:22::0;20953:2;20933:18;;;20926:30;20992:32;20972:18;;;20965:60;21042:18;;5470:74:21::1;20712:354:22::0;5470:74:21::1;5618:186;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;5718:15:::1;5618:186:::0;;;;5757:4:::1;5618:186:::0;;;;;;;;;;-1:-1:-1;5588:19:21;;;:10:::1;:19:::0;;;;;;;:216;;:27:::1;::::0;;::::1;::::0;;;:216:::1;::::0;:27;:216:::1;:::i;:::-;-1:-1:-1::0;5588:216:21::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;5588:216:21::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;-1:-1:-1;;5588:216:21::1;::::0;::::1;;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;;;5814:19:21::1;::::0;;;:10:::1;:19;::::0;;;;;;:30:::1;;:37:::0;;-1:-1:-1;;5814:37:21::1;5847:4;5814:37;::::0;;5906:22;5825:7;;5906:14:::1;::::0;:22:::1;::::0;5921:6;;5906:22:::1;:::i;:::-;;;;;;;;;;;;;:32;;;;5972:4;5948:13;5962:6;5948:21;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:28;;;::::1;;-1:-1:-1::0;;5948:28:21;;::::1;::::0;;;::::1;::::0;;;6014:7;;6000:44:::1;::::0;::::1;::::0;6023:6;;6031:12;;6000:44:::1;:::i;:::-;;;;;;;;5079:972:::0;;;;:::o;10076:190::-;1531:13:0;:11;:13::i;:::-;10189:1:21::1;10160:17;10169:7:::0;10160:8:::1;:17::i;:::-;-1:-1:-1::0;;;;;10160:31:21::1;::::0;10152:64:::1;;;;-1:-1:-1::0;;;10152:64:21::1;;;;;;;:::i;:::-;10226:19;::::0;;;:10:::1;:19;::::0;;;;:26:::1;;:33:::0;;-1:-1:-1;;10226:33:21::1;10255:4;10226:33;::::0;;10076:190::o;9812:191::-;1531:13:0;:11;:13::i;:::-;9925:1:21::1;9896:17;9905:7:::0;9896:8:::1;:17::i;:::-;-1:-1:-1::0;;;;;9896:31:21::1;::::0;9888:64:::1;;;;-1:-1:-1::0;;;9888:64:21::1;;;;;;;:::i;:::-;9991:5;9962:19:::0;;;:10:::1;:19;::::0;;;;:26:::1;;:34:::0;;-1:-1:-1;;9962:34:21::1;::::0;;9812:191::o;8693:637::-;8770:12;8792:21;8823:15;8860:13;8874:6;8860:21;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;8855:100;;-1:-1:-1;8905:5:21;;-1:-1:-1;8905:5:21;;-1:-1:-1;8905:5:21;8897:47;;8855:100;8973:15;8991:14;9006:6;8991:22;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;9023:24;9050:19;;;:10;:19;;;;;;9023:46;;;;;;;;8991:22;;-1:-1:-1;8991:22:21;;9050:19;8991:22;;9023:46;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9023:46:21;;;-1:-1:-1;;9023:46:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9023:46:21;;;-1:-1:-1;;9023:46:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9023:46:21;;;;-1:-1:-1;;;9023:46:21;;;;;;;;;;;;;;;;;9093:13;;;;9023:46;;-1:-1:-1;9092:14:21;;:36;;;9111:6;:17;;;9110:18;9092:36;:64;;;;9133:6;:14;;;:23;;;9132:24;9092:64;9088:142;;;9180:5;9195:1;9199:19;9172:47;;;;;;;;;;9088:142;9248:13;9264:16;9272:7;9264;:16::i;:::-;9311:11;;9298:4;;-1:-1:-1;9248:32:21;;-1:-1:-1;9311:11:21;;-1:-1:-1;;;8693:637:21;;;;;;:::o;12971:189::-;13094:13;13130:23;13145:7;13130:14;:23::i;1864:48::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1864:48:21;;;-1:-1:-1;;1864:48:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1864:48:21;;;;-1:-1:-1;;;1864:48:21;;;;;;;;:::o;8007:407::-;8085:15;8110:13;8133:22;8180:13;8194:6;8180:21;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;8172:57;;;;-1:-1:-1;;;8172:57:21;;21661:2:22;8172:57:21;;;21643:21:22;21700:2;21680:18;;;21673:30;21739:25;21719:18;;;21712:53;21782:18;;8172:57:21;21459:347:22;8172:57:21;8258:14;8273:6;8258:22;;;;;;:::i;:::-;;;;;;;;;;;;;;8248:32;;8290:19;8312:10;:19;8323:7;8312:19;;;;;;;;;;;:27;;8290:49;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8290:49:21;;;-1:-1:-1;;8290:49:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8290:49:21;;;;-1:-1:-1;;;8360:13:21;;;;8394;;;;;8007:407;;8360:13;;-1:-1:-1;8007:407:21;-1:-1:-1;;;8007:407:21:o;3665:153:6:-;-1:-1:-1;;;;;3776:25:6;;;3753:4;3776:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3665:153::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2228:51:22::0;2201:18;;2672:31:0::1;2082:203:22::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;961:207:9:-;1063:4;-1:-1:-1;;;;;;1086:35:9;;-1:-1:-1;;;1086:35:9;;:75;;;1125:36;1149:11;1125:23;:36::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:12;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:12;1901:40:0;;;2228:51:22;2201:18;;1901:40:0;2082:203:22;15858:241:6;15921:7;15940:13;15956:17;15965:7;15956:8;:17::i;:::-;15940:33;-1:-1:-1;;;;;;15987:19:6;;15983:88;;16029:31;;-1:-1:-1;;;16029:31:6;;;;;4018:25:22;;;3991:18;;16029:31:6;3872:177:22;14138:120:6;14218:33;14227:2;14231:7;14240:4;14246;14218:8;:33::i;5378:115::-;5444:7;5470:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5470:16:6;;5378:115::o;8507:795::-;8593:7;8612:12;8627:17;8636:7;8627:8;:17::i;:::-;8612:32;-1:-1:-1;;;;;;8704:18:6;;;8700:86;;8738:37;8755:4;8761;8767:7;8738:16;:37::i;:::-;-1:-1:-1;;;;;8830:18:6;;;8826:256;;8946:48;8963:1;8967:7;8984:1;8988:5;8946:8;:48::i;:::-;-1:-1:-1;;;;;9037:15:6;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9037:20:6;;;8826:256;-1:-1:-1;;;;;9096:16:6;;;9092:107;;-1:-1:-1;;;;;9156:13:6;;;;;;:9;:13;;;;;:18;;9173:1;9156:18;;;9092:107;9209:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9209:21:6;-1:-1:-1;;;;;9209:21:6;;;;;;;;;9246:27;;9209:16;;9246:27;;;;;;;9291:4;8507:795;-1:-1:-1;;;;8507:795:6:o;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2575:307:14:-;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:14;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;10302:100:6:-;10369:26;10379:2;10383:7;10369:26;;;;;;;;;;;;:9;:26::i;1931:167:9:-;2022:19;;;;:10;:19;;;;;:31;2044:9;2022:19;:31;:::i;:::-;-1:-1:-1;2068:23:9;;4018:25:22;;;2068:23:9;;4006:2:22;3991:18;2068:23:9;;;;;;;1931:167;;:::o;15311:312:6:-;-1:-1:-1;;;;;15418:22:6;;15414:91;;15463:31;;-1:-1:-1;;;15463:31:6;;-1:-1:-1;;;;;2246:32:22;;15463:31:6;;;2228:51:22;2201:18;;15463:31:6;2082:203:22;15414:91:6;-1:-1:-1;;;;;15514:25:6;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15514:46:6;;;;;;;;;;15575:41;;540::22;;;15575::6;;513:18:22;15575:41:6;;;;;;;15311:312;;;:::o;993:926:11:-;-1:-1:-1;;;;;1173:14:11;;;:18;1169:744;;1211:67;;-1:-1:-1;;;1211:67:11;;-1:-1:-1;;;;;1211:36:11;;;;;:67;;1248:8;;1258:4;;1264:7;;1273:4;;1211:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1211:67:11;;;;;;;;-1:-1:-1;;1211:67:11;;;;;;;;;;;;:::i;:::-;;;1207:696;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1568:6;:13;1585:1;1568:18;1564:325;;1672:39;;-1:-1:-1;;;1672:39:11;;-1:-1:-1;;;;;2246:32:22;;1672:39:11;;;2228:51:22;2201:18;;1672:39:11;2082:203:22;1564:325:11;1841:6;1835:13;1828:4;1820:6;1816:17;1809:40;1207:696;-1:-1:-1;;;;;;1325:51:11;;-1:-1:-1;;;1325:51:11;1321:182;;1445:39;;-1:-1:-1;;;1445:39:11;;-1:-1:-1;;;;;2246:32:22;;1445:39:11;;;2228:51:22;2201:18;;1445:39:11;2082:203:22;1321:182:11;1279:238;1207:696;993:926;;;;;:::o;1210:593:9:-;1283:13;1308:22;1322:7;1308:13;:22::i;:::-;-1:-1:-1;1341:23:9;1367:19;;;:10;:19;;;;;1341:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:18;1417:10;3102:9:6;;;;;;;;;-1:-1:-1;3102:9:6;;;3026:92;1417:10:9;1396:31;;1506:4;1500:18;1522:1;1500:23;1496:70;;-1:-1:-1;1546:9:9;1210:593;-1:-1:-1;;1210:593:9:o;1496:70::-;1665:23;;:27;1661:95;;1729:4;1735:9;1715:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1708:37;;;;1210:593;;;:::o;1661:95::-;1773:23;1788:7;1773:14;:23::i;1527:300:6:-;1629:4;-1:-1:-1;;;;;;1664:40:6;;-1:-1:-1;;;1664:40:6;;:104;;-1:-1:-1;;;;;;;1720:48:6;;-1:-1:-1;;;1720:48:6;1664:104;:156;;;-1:-1:-1;;;;;;;;;;829:40:16;;;1784:36:6;730:146:16;14440:662:6;14600:9;:31;;;-1:-1:-1;;;;;;14613:18:6;;;;14600:31;14596:460;;;14647:13;14663:22;14677:7;14663:13;:22::i;:::-;14647:38;-1:-1:-1;;;;;;14813:18:6;;;;;;:35;;;14844:4;-1:-1:-1;;;;;14835:13:6;:5;-1:-1:-1;;;;;14835:13:6;;;14813:35;:69;;;;;14853:29;14870:5;14877:4;14853:16;:29::i;:::-;14852:30;14813:69;14809:142;;;14909:27;;-1:-1:-1;;;14909:27:6;;-1:-1:-1;;;;;2246:32:22;;14909:27:6;;;2228:51:22;2201:18;;14909:27:6;2082:203:22;14809:142:6;14969:9;14965:81;;;15023:7;15019:2;-1:-1:-1;;;;;15003:28:6;15012:5;-1:-1:-1;;;;;15003:28:6;;;;;;;;;;;14965:81;14633:423;14596:460;-1:-1:-1;;15066:24:6;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15066:29:6;-1:-1:-1;;;;;15066:29:6;;;;;;;;;;14440:662::o;6751:368::-;6863:38;6877:5;6884:7;6893;6863:13;:38::i;:::-;6858:255;;-1:-1:-1;;;;;6921:19:6;;6917:186;;6967:31;;-1:-1:-1;;;6967:31:6;;;;;4018:25:22;;;3991:18;;6967:31:6;3872:177:22;6917:186:6;7044:44;;-1:-1:-1;;;7044:44:6;;-1:-1:-1;;;;;5461:32:22;;7044:44:6;;;5443:51:22;5510:18;;;5503:34;;;5416:18;;7044:44:6;5269:274:22;10623:207:6;10717:18;10723:2;10727:7;10717:5;:18::i;:::-;10745:78;735:10:12;10801:1:6;10805:2;10809:7;10818:4;10745:33;:78::i;2529:255::-;2593:13;2618:22;2632:7;2618:13;:22::i;:::-;;2651:21;2675:10;3102:9;;;;;;;;;-1:-1:-1;3102:9:6;;;3026:92;2675:10;2651:34;;2726:1;2708:7;2702:21;:25;:75;;;;;;;;;;;;;;;;;2744:7;2753:18;:7;:16;:18::i;:::-;2730:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2695:82;2529:255;-1:-1:-1;;;2529:255:6:o;6047:272::-;6150:4;-1:-1:-1;;;;;6185:21:6;;;;;;:127;;;6232:7;-1:-1:-1;;;;;6223:16:6;:5;-1:-1:-1;;;;;6223:16:6;;:52;;;;6243:32;6260:5;6267:7;6243:16;:32::i;:::-;6223:88;;;-1:-1:-1;;5679:7:6;5705:24;;;:15;:24;;;;;;-1:-1:-1;;;;;5705:24:6;;;6279:32;;;;6166:146;-1:-1:-1;6047:272:6:o;9624:327::-;-1:-1:-1;;;;;9691:16:6;;9687:87;;9730:33;;-1:-1:-1;;;9730:33:6;;9760:1;9730:33;;;2228:51:22;2201:18;;9730:33:6;2082:203:22;9687:87:6;9783:21;9807:32;9815:2;9819:7;9836:1;9807:7;:32::i;:::-;9783:56;-1:-1:-1;;;;;;9853:27:6;;;9849:96;;9903:31;;-1:-1:-1;;;9903:31:6;;9931:1;9903:31;;;2228:51:22;2201:18;;9903:31:6;2082:203:22;1308:634:15;1364:13;1413:14;1430:17;1441:5;1430:10;:17::i;:::-;1450:1;1430:21;1413:38;;1465:20;1499:6;1488:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1488:18:15;-1:-1:-1;1465:41:15;-1:-1:-1;1595:30:15;;;1611:4;1595:30;1652:247;-1:-1:-1;;1683:5:15;-1:-1:-1;;;1782:2:15;1771:14;;1766:32;1683:5;1753:46;1843:2;1834:11;;;-1:-1:-1;1863:21:15;1652:247;1863:21;-1:-1:-1;1919:6:15;1308:634;-1:-1:-1;;;1308:634:15:o;29154:916:18:-;29207:7;;-1:-1:-1;;;29282:17:18;;29278:103;;-1:-1:-1;;;29319:17:18;;;-1:-1:-1;29364:2:18;29354:12;29278:103;29407:8;29398:5;:17;29394:103;;29444:8;29435:17;;;-1:-1:-1;29480:2:18;29470:12;29394:103;29523:8;29514:5;:17;29510:103;;29560:8;29551:17;;;-1:-1:-1;29596:2:18;29586:12;29510:103;29639:7;29630:5;:16;29626:100;;29675:7;29666:16;;;-1:-1:-1;29710:1:18;29700:11;29626:100;29752:7;29743:5;:16;29739:100;;29788:7;29779:16;;;-1:-1:-1;29823:1:18;29813:11;29739:100;29865:7;29856:5;:16;29852:100;;29901:7;29892:16;;;-1:-1:-1;29936:1:18;29926:11;29852:100;29978:7;29969:5;:16;29965:66;;30015:1;30005:11;30057:6;29154:916;-1:-1:-1;;29154:916:18:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;14:131:22:-;-1:-1:-1;;;;;;88:32:22;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:173::-;660:20;;-1:-1:-1;;;;;709:31:22;;699:42;;689:70;;755:1;752;745:12;689:70;592:173;;;:::o;770:366::-;837:6;845;898:2;886:9;877:7;873:23;869:32;866:52;;;914:1;911;904:12;866:52;937:29;956:9;937:29;:::i;:::-;927:39;;1016:2;1005:9;1001:18;988:32;-1:-1:-1;;;;;1053:5:22;1049:38;1042:5;1039:49;1029:77;;1102:1;1099;1092:12;1029:77;1125:5;1115:15;;;770:366;;;;;:::o;1141:250::-;1226:1;1236:113;1250:6;1247:1;1244:13;1236:113;;;1326:11;;;1320:18;1307:11;;;1300:39;1272:2;1265:10;1236:113;;;-1:-1:-1;;1383:1:22;1365:16;;1358:27;1141:250::o;1396:271::-;1438:3;1476:5;1470:12;1503:6;1498:3;1491:19;1519:76;1588:6;1581:4;1576:3;1572:14;1565:4;1558:5;1554:16;1519:76;:::i;:::-;1649:2;1628:15;-1:-1:-1;;1624:29:22;1615:39;;;;1656:4;1611:50;;1396:271;-1:-1:-1;;1396:271:22:o;1672:220::-;1821:2;1810:9;1803:21;1784:4;1841:45;1882:2;1871:9;1867:18;1859:6;1841:45;:::i;1897:180::-;1956:6;2009:2;1997:9;1988:7;1984:23;1980:32;1977:52;;;2025:1;2022;2015:12;1977:52;-1:-1:-1;2048:23:22;;1897:180;-1:-1:-1;1897:180:22:o;2290:254::-;2358:6;2366;2419:2;2407:9;2398:7;2394:23;2390:32;2387:52;;;2435:1;2432;2425:12;2387:52;2458:29;2477:9;2458:29;:::i;:::-;2448:39;2534:2;2519:18;;;;2506:32;;-1:-1:-1;;;2290:254:22:o;2549:127::-;2610:10;2605:3;2601:20;2598:1;2591:31;2641:4;2638:1;2631:15;2665:4;2662:1;2655:15;2681:632;2746:5;2776:18;2817:2;2809:6;2806:14;2803:40;;;2823:18;;:::i;:::-;2898:2;2892:9;2866:2;2952:15;;-1:-1:-1;;2948:24:22;;;2974:2;2944:33;2940:42;2928:55;;;2998:18;;;3018:22;;;2995:46;2992:72;;;3044:18;;:::i;:::-;3084:10;3080:2;3073:22;3113:6;3104:15;;3143:6;3135;3128:22;3183:3;3174:6;3169:3;3165:16;3162:25;3159:45;;;3200:1;3197;3190:12;3159:45;3250:6;3245:3;3238:4;3230:6;3226:17;3213:44;3305:1;3298:4;3289:6;3281;3277:19;3273:30;3266:41;;;;2681:632;;;;;:::o;3318:222::-;3361:5;3414:3;3407:4;3399:6;3395:17;3391:27;3381:55;;3432:1;3429;3422:12;3381:55;3454:80;3530:3;3521:6;3508:20;3501:4;3493:6;3489:17;3454:80;:::i;3545:322::-;3614:6;3667:2;3655:9;3646:7;3642:23;3638:32;3635:52;;;3683:1;3680;3673:12;3635:52;3723:9;3710:23;3756:18;3748:6;3745:30;3742:50;;;3788:1;3785;3778:12;3742:50;3811;3853:7;3844:6;3833:9;3829:22;3811:50;:::i;4054:186::-;4113:6;4166:2;4154:9;4145:7;4141:23;4137:32;4134:52;;;4182:1;4179;4172:12;4134:52;4205:29;4224:9;4205:29;:::i;4245:151::-;4321:20;;4370:1;4360:12;;4350:40;;4386:1;4383;4376:12;4401:277;4484:6;4492;4545:2;4533:9;4524:7;4520:23;4516:32;4513:52;;;4561:1;4558;4551:12;4513:52;4597:9;4584:23;4574:33;;4626:46;4668:2;4657:9;4653:18;4626:46;:::i;4683:328::-;4760:6;4768;4776;4829:2;4817:9;4808:7;4804:23;4800:32;4797:52;;;4845:1;4842;4835:12;4797:52;4868:29;4887:9;4868:29;:::i;:::-;4858:39;;4916:38;4950:2;4939:9;4935:18;4916:38;:::i;:::-;4906:48;;5001:2;4990:9;4986:18;4973:32;4963:42;;4683:328;;;;;:::o;5016:248::-;5084:6;5092;5145:2;5133:9;5124:7;5120:23;5116:32;5113:52;;;5161:1;5158;5151:12;5113:52;-1:-1:-1;;5184:23:22;;;5254:2;5239:18;;;5226:32;;-1:-1:-1;5016:248:22:o;5548:160::-;5613:20;;5669:13;;5662:21;5652:32;;5642:60;;5698:1;5695;5688:12;5713:254;5778:6;5786;5839:2;5827:9;5818:7;5814:23;5810:32;5807:52;;;5855:1;5852;5845:12;5807:52;5878:29;5897:9;5878:29;:::i;:::-;5868:39;;5926:35;5957:2;5946:9;5942:18;5926:35;:::i;5972:180::-;6028:6;6081:2;6069:9;6060:7;6056:23;6052:32;6049:52;;;6097:1;6094;6087:12;6049:52;6120:26;6136:9;6120:26;:::i;6157:715::-;6278:6;6286;6294;6302;6355:3;6343:9;6334:7;6330:23;6326:33;6323:53;;;6372:1;6369;6362:12;6323:53;6395:29;6414:9;6395:29;:::i;:::-;6385:39;;6443:46;6485:2;6474:9;6470:18;6443:46;:::i;:::-;6433:56;;6540:2;6529:9;6525:18;6512:32;6563:18;6604:2;6596:6;6593:14;6590:34;;;6620:1;6617;6610:12;6590:34;6643:50;6685:7;6676:6;6665:9;6661:22;6643:50;:::i;:::-;6633:60;;6746:2;6735:9;6731:18;6718:32;6702:48;;6775:2;6765:8;6762:16;6759:36;;;6791:1;6788;6781:12;6759:36;;6814:52;6858:7;6847:8;6836:9;6832:24;6814:52;:::i;:::-;6804:62;;;6157:715;;;;;;;:::o;6877:127::-;6938:10;6933:3;6929:20;6926:1;6919:31;6969:4;6966:1;6959:15;6993:4;6990:1;6983:15;7009:238;7091:1;7084:5;7081:12;7071:143;;7136:10;7131:3;7127:20;7124:1;7117:31;7171:4;7168:1;7161:15;7199:4;7196:1;7189:15;7071:143;7223:18;;7009:238::o;7252:651::-;7302:3;7346:5;7340:12;7373:4;7368:3;7361:17;7399:47;7440:4;7435:3;7431:14;7417:12;7399:47;:::i;:::-;7387:59;;7494:4;7487:5;7483:16;7477:23;7542:3;7536:4;7532:14;7525:4;7520:3;7516:14;7509:38;7570:39;7604:4;7588:14;7570:39;:::i;:::-;7556:53;;;7658:4;7651:5;7647:16;7641:23;7634:4;7629:3;7625:14;7618:47;7728:4;7721:5;7717:16;7711:23;7704:31;7697:39;7690:4;7685:3;7681:14;7674:63;7785:4;7778:5;7774:16;7768:23;7835:3;7827:6;7823:16;7816:4;7811:3;7807:14;7800:40;7856:41;7890:6;7874:14;7856:41;:::i;:::-;7849:48;7252:651;-1:-1:-1;;;;;7252:651:22:o;7908:867::-;8093:2;8082:9;8075:21;8105:61;8162:2;8151:9;8147:18;8138:6;8132:13;8105:61;:::i;:::-;8220:2;8212:6;8208:15;8202:22;8197:2;8186:9;8182:18;8175:50;8056:4;8272:2;8264:6;8260:15;8254:22;8312:4;8307:2;8296:9;8292:18;8285:32;8340:52;8387:3;8376:9;8372:19;8358:12;8340:52;:::i;:::-;8326:66;;8461:2;8453:6;8449:15;8443:22;8436:30;8429:38;8423:3;8412:9;8408:19;8401:67;8517:3;8509:6;8505:16;8499:23;8591:2;8587:7;8575:9;8567:6;8563:22;8559:36;8553:3;8542:9;8538:19;8531:65;8619:49;8661:6;8645:14;8619:49;:::i;:::-;8605:63;;;8738:3;8730:6;8726:16;8720:23;8713:31;8706:39;8699:4;8688:9;8684:20;8677:69;8763:6;8755:14;;;7908:867;;;;:::o;8780:667::-;8875:6;8883;8891;8899;8952:3;8940:9;8931:7;8927:23;8923:33;8920:53;;;8969:1;8966;8959:12;8920:53;8992:29;9011:9;8992:29;:::i;:::-;8982:39;;9040:38;9074:2;9063:9;9059:18;9040:38;:::i;:::-;9030:48;;9125:2;9114:9;9110:18;9097:32;9087:42;;9180:2;9169:9;9165:18;9152:32;9207:18;9199:6;9196:30;9193:50;;;9239:1;9236;9229:12;9193:50;9262:22;;9315:4;9307:13;;9303:27;-1:-1:-1;9293:55:22;;9344:1;9341;9334:12;9293:55;9367:74;9433:7;9428:2;9415:16;9410:2;9406;9402:11;9367:74;:::i;9452:812::-;9568:6;9576;9584;9592;9645:3;9633:9;9624:7;9620:23;9616:33;9613:53;;;9662:1;9659;9652:12;9613:53;9698:9;9685:23;9675:33;;9759:2;9748:9;9744:18;9731:32;9782:18;9823:2;9815:6;9812:14;9809:34;;;9839:1;9836;9829:12;9809:34;9862:50;9904:7;9895:6;9884:9;9880:22;9862:50;:::i;:::-;9852:60;;9965:2;9954:9;9950:18;9937:32;9921:48;;9994:2;9984:8;9981:16;9978:36;;;10010:1;10007;10000:12;10269:388;10503:14;;10496:22;10478:41;;-1:-1:-1;;;;;10555:32:22;;10550:2;10535:18;;10528:60;10466:2;10451:18;;10597:54;10647:2;10632:18;;10624:6;10597:54;:::i;10662:762::-;10984:45;11019:9;11011:6;10984:45;:::i;:::-;11065:6;11060:2;11049:9;11045:18;11038:34;11108:3;11103:2;11092:9;11088:18;11081:31;10965:4;11135:46;11176:3;11165:9;11161:19;11153:6;11135:46;:::i;:::-;11231:6;11224:14;11217:22;11212:2;11201:9;11197:18;11190:50;11289:9;11281:6;11277:22;11271:3;11260:9;11256:19;11249:51;11317:41;11351:6;11343;11317:41;:::i;:::-;11309:49;;;11409:6;11402:14;11395:22;11389:3;11378:9;11374:19;11367:51;10662:762;;;;;;;;;:::o;11429:372::-;11628:6;11617:9;11610:25;11685:6;11678:14;11671:22;11666:2;11655:9;11651:18;11644:50;11730:2;11725;11714:9;11710:18;11703:30;11591:4;11750:45;11791:2;11780:9;11776:18;11768:6;11750:45;:::i;11806:260::-;11874:6;11882;11935:2;11923:9;11914:7;11910:23;11906:32;11903:52;;;11951:1;11948;11941:12;11903:52;11974:29;11993:9;11974:29;:::i;:::-;11964:39;;12022:38;12056:2;12045:9;12041:18;12022:38;:::i;12071:380::-;12150:1;12146:12;;;;12193;;;12214:61;;12268:4;12260:6;12256:17;12246:27;;12214:61;12321:2;12313:6;12310:14;12290:18;12287:38;12284:161;;12367:10;12362:3;12358:20;12355:1;12348:31;12402:4;12399:1;12392:15;12430:4;12427:1;12420:15;12284:161;;12071:380;;;:::o;12456:344::-;12658:2;12640:21;;;12697:2;12677:18;;;12670:30;-1:-1:-1;;;12731:2:22;12716:18;;12709:50;12791:2;12776:18;;12456:344::o;12805:356::-;13007:2;12989:21;;;13026:18;;;13019:30;13085:34;13080:2;13065:18;;13058:62;13152:2;13137:18;;12805:356::o;13166:289::-;13297:3;13335:6;13329:13;13351:66;13410:6;13405:3;13398:4;13390:6;13386:17;13351:66;:::i;:::-;13433:16;;;;;13166:289;-1:-1:-1;;13166:289:22:o;13460:127::-;13521:10;13516:3;13512:20;13509:1;13502:31;13552:4;13549:1;13542:15;13576:4;13573:1;13566:15;13592:128;13659:9;;;13680:11;;;13677:37;;;13694:18;;:::i;13725:314::-;13913:2;13898:18;;13925:45;13902:9;13952:6;13925:45;:::i;:::-;13979:54;14029:2;14018:9;14014:18;14006:6;13979:54;:::i;14424:168::-;14497:9;;;14528;;14545:15;;;14539:22;;14525:37;14515:71;;14566:18;;:::i;14729:217::-;14769:1;14795;14785:132;;14839:10;14834:3;14830:20;14827:1;14820:31;14874:4;14871:1;14864:15;14902:4;14899:1;14892:15;14785:132;-1:-1:-1;14931:9:22;;14729:217::o;15077:963::-;15186:4;15215:2;15244;15233:9;15226:21;15267:1;15300:6;15294:13;15330:36;15356:9;15330:36;:::i;:::-;15402:6;15397:2;15386:9;15382:18;15375:34;15428:2;15449:1;15481:2;15470:9;15466:18;15498:1;15493:158;;;;15665:1;15660:354;;;;15459:555;;15493:158;-1:-1:-1;;15541:24:22;;15521:18;;;15514:52;15619:14;;15612:22;15609:1;15605:30;15590:46;;15586:55;;;-1:-1:-1;15493:158:22;;15660:354;15691:6;15688:1;15681:17;15739:2;15736:1;15726:16;15764:1;15778:180;15792:6;15789:1;15786:13;15778:180;;;15885:14;;15861:17;;;15857:26;;15850:50;15928:16;;;;15807:10;;15778:180;;;15982:17;;15978:26;;;-1:-1:-1;;15459:555:22;-1:-1:-1;16031:3:22;;15077:963;-1:-1:-1;;;;;;;;15077:963:22:o;17461:135::-;17500:3;17521:17;;;17518:43;;17541:18;;:::i;:::-;-1:-1:-1;17588:1:22;17577:13;;17461:135::o;17601:545::-;17703:2;17698:3;17695:11;17692:448;;;17739:1;17764:5;17760:2;17753:17;17809:4;17805:2;17795:19;17879:2;17867:10;17863:19;17860:1;17856:27;17850:4;17846:38;17915:4;17903:10;17900:20;17897:47;;;-1:-1:-1;17938:4:22;17897:47;17993:2;17988:3;17984:12;17981:1;17977:20;17971:4;17967:31;17957:41;;18048:82;18066:2;18059:5;18056:13;18048:82;;;18111:17;;;18092:1;18081:13;18048:82;;18322:1352;18448:3;18442:10;18475:18;18467:6;18464:30;18461:56;;;18497:18;;:::i;:::-;18526:97;18616:6;18576:38;18608:4;18602:11;18576:38;:::i;:::-;18570:4;18526:97;:::i;:::-;18678:4;;18742:2;18731:14;;18759:1;18754:663;;;;19461:1;19478:6;19475:89;;;-1:-1:-1;19530:19:22;;;19524:26;19475:89;-1:-1:-1;;18279:1:22;18275:11;;;18271:24;18267:29;18257:40;18303:1;18299:11;;;18254:57;19577:81;;18724:944;;18754:663;15024:1;15017:14;;;15061:4;15048:18;;-1:-1:-1;;18790:20:22;;;18908:236;18922:7;18919:1;18916:14;18908:236;;;19011:19;;;19005:26;18990:42;;19103:27;;;;19071:1;19059:14;;;;18938:19;;18908:236;;;18912:3;19172:6;19163:7;19160:19;19157:201;;;19233:19;;;19227:26;-1:-1:-1;;19316:1:22;19312:14;;;19328:3;19308:24;19304:37;19300:42;19285:58;19270:74;;19157:201;-1:-1:-1;;;;;19404:1:22;19388:14;;;19384:22;19371:36;;-1:-1:-1;18322:1352:22:o;19679:324::-;19851:45;19886:9;19878:6;19851:45;:::i;:::-;19932:2;19927;19916:9;19912:18;19905:30;19832:4;19952:45;19993:2;19982:9;19978:18;19970:6;19952:45;:::i;21071:383::-;21268:2;21257:9;21250:21;21231:4;21294:45;21335:2;21324:9;21320:18;21312:6;21294:45;:::i;:::-;21387:9;21379:6;21375:22;21370:2;21359:9;21355:18;21348:50;21415:33;21441:6;21433;21415:33;:::i;21811:489::-;-1:-1:-1;;;;;22080:15:22;;;22062:34;;22132:15;;22127:2;22112:18;;22105:43;22179:2;22164:18;;22157:34;;;22227:3;22222:2;22207:18;;22200:31;;;22005:4;;22248:46;;22274:19;;22266:6;22248:46;:::i;:::-;22240:54;21811:489;-1:-1:-1;;;;;;21811:489:22:o;22305:249::-;22374:6;22427:2;22415:9;22406:7;22402:23;22398:32;22395:52;;;22443:1;22440;22433:12;22395:52;22475:9;22469:16;22494:30;22518:5;22494:30;:::i;22559:496::-;22738:3;22776:6;22770:13;22792:66;22851:6;22846:3;22839:4;22831:6;22827:17;22792:66;:::i;:::-;22921:13;;22880:16;;;;22943:70;22921:13;22880:16;22990:4;22978:17;;22943:70;:::i;:::-;23029:20;;22559:496;-1:-1:-1;;;;22559:496:22:o"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","approvedMarketplaces(address)":"543a9eb9","authorizedMinter()":"1ba538cd","balanceOf(address)":"70a08231","deactivateMembership(uint256)":"c4e4ae8a","deactivateNFCCard(uint256)":"5967ff8b","getApproved(uint256)":"081812fc","getMemberInfo(uint256)":"ae99aa3c","getNFCCardInfo(string)":"e5dd281b","getTokenIdByMember(address)":"504a5983","isApprovedForAll(address,address)":"e985e9c5","isMember(address)":"a230c524","linkNFCCard(uint256,string,string,string)":"bd26ed33","memberInfo(uint256)":"d90d0ee6","memberTokenId(address)":"da104da2","mintMembership(address,uint8,string,string)":"a1b1eede","name()":"06fdde03","nfcCardExists(string)":"ff8ca494","nfcCardToToken(string)":"14d4aecc","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","reactivateMembership(uint256)":"bec429db","reactivateNFCCard(uint256)":"3363f61f","renounceOwnership()":"715018a6","royaltyInfo(uint256,uint256)":"2a55205a","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setAuthorizedMinter(address)":"1928b7c3","setMarketplaceApproval(address,bool)":"31062623","setRoyaltyInfo(address,uint96)":"02fa7c47","setTransferRestricted(bool)":"70bb0a16","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","transfersRestricted()":"8423df79","unlinkNFCCard(uint256)":"0f837c5a","updateMemberTier(uint256,uint8)":"1d0431fd","verifyNFCCard(string)":"c84cfcbb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"authorizedMinter_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient_\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"royaltyFraction_\",\"type\":\"uint96\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldMinter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMinter\",\"type\":\"address\"}],\"name\":\"AuthorizedMinterUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketplace\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"MarketplaceApprovalUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum YachtClubMembership.MemberTier\",\"name\":\"oldTier\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum YachtClubMembership.MemberTier\",\"name\":\"newTier\",\"type\":\"uint8\"}],\"name\":\"MemberTierUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum YachtClubMembership.MemberTier\",\"name\":\"tier\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"}],\"name\":\"MembershipMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"cardId\",\"type\":\"string\"}],\"name\":\"NFCCardDeactivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"cardId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"serialNumber\",\"type\":\"string\"}],\"name\":\"NFCCardLinked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"cardId\",\"type\":\"string\"}],\"name\":\"NFCCardUnlinked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"restricted\",\"type\":\"bool\"}],\"name\":\"TransferRestrictionUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvedMarketplaces\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authorizedMinter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"deactivateMembership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"deactivateNFCCard\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getMemberInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"enum YachtClubMembership.MemberTier\",\"name\":\"tier\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"mintedAt\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"cardId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"serialNumber\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"linkedAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"cardType\",\"type\":\"string\"}],\"internalType\":\"struct YachtClubMembership.NFCCard\",\"name\":\"nfcCard\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"hasNFCCard\",\"type\":\"bool\"}],\"internalType\":\"struct YachtClubMembership.MemberInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"cardId\",\"type\":\"string\"}],\"name\":\"getNFCCardInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"cardType\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"getTokenIdByMember\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"cardId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"serialNumber\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cardType\",\"type\":\"string\"}],\"name\":\"linkNFCCard\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"memberInfo\",\"outputs\":[{\"internalType\":\"enum YachtClubMembership.MemberTier\",\"name\":\"tier\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"mintedAt\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"cardId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"serialNumber\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"linkedAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"cardType\",\"type\":\"string\"}],\"internalType\":\"struct YachtClubMembership.NFCCard\",\"name\":\"nfcCard\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"hasNFCCard\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"memberTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"enum YachtClubMembership.MemberTier\",\"name\":\"tier\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenURI_\",\"type\":\"string\"}],\"name\":\"mintMembership\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"nfcCardExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"nfcCardToToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"reactivateMembership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"reactivateNFCCard\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_authorizedMinter\",\"type\":\"address\"}],\"name\":\"setAuthorizedMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketplace\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setMarketplaceApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"fraction\",\"type\":\"uint96\"}],\"name\":\"setRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_restricted\",\"type\":\"bool\"}],\"name\":\"setTransferRestricted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transfersRestricted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"unlinkNFCCard\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"enum YachtClubMembership.MemberTier\",\"name\":\"newTier\",\"type\":\"uint8\"}],\"name\":\"updateMemberTier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"cardId\",\"type\":\"string\"}],\"name\":\"verifyNFCCard\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"memberAddress\",\"type\":\"address\"},{\"internalType\":\"enum YachtClubMembership.MemberTier\",\"name\":\"tier\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 contract with ERC-2981 royalty support for yacht club memberships Includes NFC card linking functionality for real-world identification\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"deactivateMembership(uint256)\":{\"details\":\"Deactivate membership (admin only)\"},\"deactivateNFCCard(uint256)\":{\"details\":\"Deactivate NFC card (admin only)\",\"params\":{\"tokenId\":\"The token ID to deactivate the card for\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getMemberInfo(uint256)\":{\"details\":\"Get member info by token ID\"},\"getNFCCardInfo(string)\":{\"details\":\"Get NFC card info by card ID\",\"params\":{\"cardId\":\"The NFC card identifier\"},\"returns\":{\"cardType\":\"The type of card\",\"isActive\":\"Whether the card is active\",\"tokenId\":\"The token ID the card is linked to\"}},\"getTokenIdByMember(address)\":{\"details\":\"Get token ID by member address\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"isMember(address)\":{\"details\":\"Check if address is a member\"},\"linkNFCCard(uint256,string,string,string)\":{\"details\":\"Link NFC card to membership NFT (admin only)\",\"params\":{\"cardId\":\"Unique NFC card identifier\",\"cardType\":\"Type of NFC card\",\"serialNumber\":\"Physical card serial number\",\"tokenId\":\"The token ID to link the card to\"}},\"mintMembership(address,uint8,string,string)\":{\"details\":\"Mint membership NFT to a member\",\"params\":{\"email\":\"Member email for admin reference\",\"tier\":\"Member tier\",\"to\":\"Member address\",\"tokenURI_\":\"Metadata URI\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"reactivateMembership(uint256)\":{\"details\":\"Reactivate membership (admin only)\"},\"reactivateNFCCard(uint256)\":{\"details\":\"Reactivate NFC card (admin only)\",\"params\":{\"tokenId\":\"The token ID to reactivate the card for\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"ERC-2981 royalty info\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"setAuthorizedMinter(address)\":{\"details\":\"Set authorized minter address\"},\"setMarketplaceApproval(address,bool)\":{\"details\":\"Approve/disapprove marketplace for transfers\"},\"setRoyaltyInfo(address,uint96)\":{\"details\":\"Set royalty info\"},\"setTransferRestricted(bool)\":{\"details\":\"Set transfer restrictions\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"totalSupply()\":{\"details\":\"Get total supply\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unlinkNFCCard(uint256)\":{\"details\":\"Unlink NFC card from membership NFT (admin only)\",\"params\":{\"tokenId\":\"The token ID to unlink the card from\"}},\"updateMemberTier(uint256,uint8)\":{\"details\":\"Update member tier (admin only)\"},\"verifyNFCCard(string)\":{\"details\":\"Verify NFC card for real-world usage\",\"params\":{\"cardId\":\"The NFC card identifier\"},\"returns\":{\"isValid\":\"Whether the card is valid for use\",\"memberAddress\":\"The member address if valid\",\"tier\":\"The member tier if valid\"}}},\"title\":\"Lake Stockton Yacht Club Membership NFT\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/YachtClubMembership.sol\":\"YachtClubMembership\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0xafab0e6c71905303c47dd254168cb31efc91f0ae284cde609b0202f97f85469e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://824d05aec56eb82a2a3c28eece530dc0792d3a008b09d01444e57cf4aceb0445\",\"dweb:/ipfs/QmVvqmJ5UobuRU9Q4JMyXxBfzKs2cpjbWXMNpxX4binTX8\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x856ca1885aec23d54da3f2760b5d216d1b28ad20f798000336375a30dbbc1558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc725c462ccbf284432d3123ab8c9bab24903730cae227ae4945878039d2fe54\",\"dweb:/ipfs/QmdiEVMvm8njp96dm2s4mThYBD74tY59mNP6s7CzKkGHAh\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xca34c490d41c332106d30b657f00dc028532cb6b9fef2b1729670ce476b36bce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef5e7685d50ed8aae2104a7eb2c31ae5a3b508f24fadfa7611f92f819201aee9\",\"dweb:/ipfs/QmYbTD32FPrEfP1hkniQmRxVUWp8GTSqFV1Bhwx1HVirse\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xb9dc602a845c73d11f1fe38039c0c2cf70fedd2d4afd877c0ed2d0383ffaa232\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59eb46224e996c2f9ecb9a821e65b920c2ecfe9df734613c3df9831de373491c\",\"dweb:/ipfs/QmTsZzJTqRavv64zyaWovcWkUNwfU3uo8uiUjrMFEm8MMj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/YachtClubMembership.sol\":{\"keccak256\":\"0xdcf56dc0252ec1127f1c882ae11817d4baaaf952a880fc3c40ed6747f956c821\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f76c06fe4a85ae7fd1c8fcd57168cfb7eb8cb9d87ae9a2066d0b5311d0c860a1\",\"dweb:/ipfs/Qma5nVAePrfWGNZCvfVfVCts8W55EjsC8wGmFNSS2LXU7L\"]}},\"version\":1}"}}}}}